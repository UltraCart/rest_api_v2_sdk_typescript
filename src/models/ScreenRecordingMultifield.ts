/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScreenRecordingMultifield
 */
export interface ScreenRecordingMultifield {
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingMultifield
     */
    bd?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ScreenRecordingMultifield
     */
    bool?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecordingMultifield
     */
    json?: string;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingMultifield
     */
    num?: number;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecordingMultifield
     */
    text?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ScreenRecordingMultifield)[] = ["bd", "bool", "json", "num", "text"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ScreenRecordingMultifield interface.
 */
export function instanceOfScreenRecordingMultifield(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScreenRecordingMultifieldFromJSON(json: any): ScreenRecordingMultifield {
    return ScreenRecordingMultifieldFromJSONTyped(json, false);
}

export function ScreenRecordingMultifieldFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenRecordingMultifield {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bd': !exists(json, 'bd') ? undefined : json['bd'],
        'bool': !exists(json, 'bool') ? undefined : json['bool'],
        'json': !exists(json, 'json') ? undefined : json['json'],
        'num': !exists(json, 'num') ? undefined : json['num'],
        'text': !exists(json, 'text') ? undefined : json['text'],
    };
}

export function ScreenRecordingMultifieldToJSON(value?: ScreenRecordingMultifield | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bd': value.bd,
        'bool': value.bool,
        'json': value.json,
        'num': value.num,
        'text': value.text,
    };
}

