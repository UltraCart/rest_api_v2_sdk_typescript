/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemShippingMethod
 */
export interface ItemShippingMethod {
    /**
     * Cost
     * @type {number}
     * @memberof ItemShippingMethod
     */
    cost?: number;
    /**
     * Each additional item markup
     * @type {number}
     * @memberof ItemShippingMethod
     */
    each_additional_item_markup?: number;
    /**
     * Filter to this method if available
     * @type {boolean}
     * @memberof ItemShippingMethod
     */
    filter_to_if_available?: boolean;
    /**
     * First item markup
     * @type {number}
     * @memberof ItemShippingMethod
     */
    first_item_markup?: number;
    /**
     * Fixed shipping cost
     * @type {number}
     * @memberof ItemShippingMethod
     */
    fixed_shipping_cost?: number;
    /**
     * Flat fee markup
     * @type {number}
     * @memberof ItemShippingMethod
     */
    flat_fee_markup?: number;
    /**
     * Free shipping
     * @type {boolean}
     * @memberof ItemShippingMethod
     */
    free_shipping?: boolean;
    /**
     * Per item fee markup
     * @type {number}
     * @memberof ItemShippingMethod
     */
    per_item_fee_markup?: number;
    /**
     * Percentage markup
     * @type {number}
     * @memberof ItemShippingMethod
     */
    percentage_markup?: number;
    /**
     * Percentage of item markup
     * @type {number}
     * @memberof ItemShippingMethod
     */
    percentage_of_item_markup?: number;
    /**
     * Relax restrictions on upsell
     * @type {boolean}
     * @memberof ItemShippingMethod
     */
    relax_restrictions_on_upsell?: boolean;
    /**
     * Shipping method name
     * @type {string}
     * @memberof ItemShippingMethod
     */
    shipping_method?: string;
    /**
     * Shipping method object identifier
     * @type {number}
     * @memberof ItemShippingMethod
     */
    shipping_method_oid?: number;
    /**
     * Shipping method validity
     * @type {string}
     * @memberof ItemShippingMethod
     */
    shipping_method_validity?: ItemShippingMethodShippingMethodValidityEnum;
    /**
     * Signature required
     * @type {boolean}
     * @memberof ItemShippingMethod
     */
    signature_required?: boolean;
}


/**
 * @export
 */
export const ItemShippingMethodShippingMethodValidityEnum = {
    InvalidFor: 'invalid for',
    ValidFor: 'valid for',
    ValidOnlyFor: 'valid only for'
} as const;
export type ItemShippingMethodShippingMethodValidityEnum = typeof ItemShippingMethodShippingMethodValidityEnum[keyof typeof ItemShippingMethodShippingMethodValidityEnum];


export function ItemShippingMethodFromJSON(json: any): ItemShippingMethod {
    return ItemShippingMethodFromJSONTyped(json, false);
}

export function ItemShippingMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemShippingMethod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cost': !exists(json, 'cost') ? undefined : json['cost'],
        'each_additional_item_markup': !exists(json, 'each_additional_item_markup') ? undefined : json['each_additional_item_markup'],
        'filter_to_if_available': !exists(json, 'filter_to_if_available') ? undefined : json['filter_to_if_available'],
        'first_item_markup': !exists(json, 'first_item_markup') ? undefined : json['first_item_markup'],
        'fixed_shipping_cost': !exists(json, 'fixed_shipping_cost') ? undefined : json['fixed_shipping_cost'],
        'flat_fee_markup': !exists(json, 'flat_fee_markup') ? undefined : json['flat_fee_markup'],
        'free_shipping': !exists(json, 'free_shipping') ? undefined : json['free_shipping'],
        'per_item_fee_markup': !exists(json, 'per_item_fee_markup') ? undefined : json['per_item_fee_markup'],
        'percentage_markup': !exists(json, 'percentage_markup') ? undefined : json['percentage_markup'],
        'percentage_of_item_markup': !exists(json, 'percentage_of_item_markup') ? undefined : json['percentage_of_item_markup'],
        'relax_restrictions_on_upsell': !exists(json, 'relax_restrictions_on_upsell') ? undefined : json['relax_restrictions_on_upsell'],
        'shipping_method': !exists(json, 'shipping_method') ? undefined : json['shipping_method'],
        'shipping_method_oid': !exists(json, 'shipping_method_oid') ? undefined : json['shipping_method_oid'],
        'shipping_method_validity': !exists(json, 'shipping_method_validity') ? undefined : json['shipping_method_validity'],
        'signature_required': !exists(json, 'signature_required') ? undefined : json['signature_required'],
    };
}

export function ItemShippingMethodToJSON(value?: ItemShippingMethod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cost': value.cost,
        'each_additional_item_markup': value.each_additional_item_markup,
        'filter_to_if_available': value.filter_to_if_available,
        'first_item_markup': value.first_item_markup,
        'fixed_shipping_cost': value.fixed_shipping_cost,
        'flat_fee_markup': value.flat_fee_markup,
        'free_shipping': value.free_shipping,
        'per_item_fee_markup': value.per_item_fee_markup,
        'percentage_markup': value.percentage_markup,
        'percentage_of_item_markup': value.percentage_of_item_markup,
        'relax_restrictions_on_upsell': value.relax_restrictions_on_upsell,
        'shipping_method': value.shipping_method,
        'shipping_method_oid': value.shipping_method_oid,
        'shipping_method_validity': value.shipping_method_validity,
        'signature_required': value.signature_required,
    };
}

