/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReportDataSet,
    ReportDataSetFromJSON,
    ReportDataSetFromJSONTyped,
    ReportDataSetToJSON,
} from './ReportDataSet';

/**
 * 
 * @export
 * @interface ReportWebsocketEvent
 */
export interface ReportWebsocketEvent {
    /**
     * Event type
     * @type {string}
     * @memberof ReportWebsocketEvent
     */
    event_type?: ReportWebsocketEventEventTypeEnum;
    /**
     * 
     * @type {ReportDataSet}
     * @memberof ReportWebsocketEvent
     */
    query_completion?: ReportDataSet;
}



/**
 * @export
 */
export const ReportWebsocketEventEventTypeEnum = {
    Ping: 'ping',
    QueryCompletion: 'query completion'
} as const;
export type ReportWebsocketEventEventTypeEnum = typeof ReportWebsocketEventEventTypeEnum[keyof typeof ReportWebsocketEventEventTypeEnum];


/**
 * Check if a given object implements the ReportWebsocketEvent interface.
 */
export function instanceOfReportWebsocketEvent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReportWebsocketEventFromJSON(json: any): ReportWebsocketEvent {
    return ReportWebsocketEventFromJSONTyped(json, false);
}

export function ReportWebsocketEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportWebsocketEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event_type': !exists(json, 'event_type') ? undefined : json['event_type'],
        'query_completion': !exists(json, 'query_completion') ? undefined : ReportDataSetFromJSON(json['query_completion']),
    };
}

export function ReportWebsocketEventToJSON(value?: ReportWebsocketEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event_type': value.event_type,
        'query_completion': ReportDataSetToJSON(value.query_completion),
    };
}

