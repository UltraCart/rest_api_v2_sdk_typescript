/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScreenRecordingFilterRangeInteger
 */
export interface ScreenRecordingFilterRangeInteger {
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterRangeInteger
     */
    eq?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterRangeInteger
     */
    gt?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterRangeInteger
     */
    gte?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterRangeInteger
     */
    lt?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterRangeInteger
     */
    lte?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ScreenRecordingFilterRangeInteger)[] = ["eq", "gt", "gte", "lt", "lte"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ScreenRecordingFilterRangeInteger interface.
 */
export function instanceOfScreenRecordingFilterRangeInteger(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScreenRecordingFilterRangeIntegerFromJSON(json: any): ScreenRecordingFilterRangeInteger {
    return ScreenRecordingFilterRangeIntegerFromJSONTyped(json, false);
}

export function ScreenRecordingFilterRangeIntegerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenRecordingFilterRangeInteger {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eq': !exists(json, 'eq') ? undefined : json['eq'],
        'gt': !exists(json, 'gt') ? undefined : json['gt'],
        'gte': !exists(json, 'gte') ? undefined : json['gte'],
        'lt': !exists(json, 'lt') ? undefined : json['lt'],
        'lte': !exists(json, 'lte') ? undefined : json['lte'],
    };
}

export function ScreenRecordingFilterRangeIntegerToJSON(value?: ScreenRecordingFilterRangeInteger | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eq': value.eq,
        'gt': value.gt,
        'gte': value.gte,
        'lt': value.lt,
        'lte': value.lte,
    };
}

