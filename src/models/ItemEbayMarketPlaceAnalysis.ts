/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemEbayMarketListing,
    ItemEbayMarketListingFromJSON,
    ItemEbayMarketListingFromJSONTyped,
    ItemEbayMarketListingToJSON,
} from './ItemEbayMarketListing';

/**
 * 
 * @export
 * @interface ItemEbayMarketPlaceAnalysis
 */
export interface ItemEbayMarketPlaceAnalysis {
    /**
     * Adjusted price
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    adjusted_price?: number;
    /**
     * Adjusted shipping
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    adjusted_shipping?: number;
    /**
     * Adjusted total
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    adjusted_total?: number;
    /**
     * Cost of goods sold
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    cogs?: number;
    /**
     * Final value fee
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    final_value_fee?: number;
    /**
     * Minimum advertised price
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    minimum_advertised_price?: number;
    /**
     * Other listings
     * @type {Array<ItemEbayMarketListing>}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    other_listings?: Array<ItemEbayMarketListing>;
    /**
     * 
     * @type {ItemEbayMarketListing}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    our_listing?: ItemEbayMarketListing;
    /**
     * Overhead
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    overhead?: number;
    /**
     * Profit potential
     * @type {number}
     * @memberof ItemEbayMarketPlaceAnalysis
     */
    profit_potential?: number;
}



/**
 * Check if a given object implements the ItemEbayMarketPlaceAnalysis interface.
 */
export function instanceOfItemEbayMarketPlaceAnalysis(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemEbayMarketPlaceAnalysisFromJSON(json: any): ItemEbayMarketPlaceAnalysis {
    return ItemEbayMarketPlaceAnalysisFromJSONTyped(json, false);
}

export function ItemEbayMarketPlaceAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemEbayMarketPlaceAnalysis {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'adjusted_price': !exists(json, 'adjusted_price') ? undefined : json['adjusted_price'],
        'adjusted_shipping': !exists(json, 'adjusted_shipping') ? undefined : json['adjusted_shipping'],
        'adjusted_total': !exists(json, 'adjusted_total') ? undefined : json['adjusted_total'],
        'cogs': !exists(json, 'cogs') ? undefined : json['cogs'],
        'final_value_fee': !exists(json, 'final_value_fee') ? undefined : json['final_value_fee'],
        'minimum_advertised_price': !exists(json, 'minimum_advertised_price') ? undefined : json['minimum_advertised_price'],
        'other_listings': !exists(json, 'other_listings') ? undefined : ((json['other_listings'] as Array<any>).map(ItemEbayMarketListingFromJSON)),
        'our_listing': !exists(json, 'our_listing') ? undefined : ItemEbayMarketListingFromJSON(json['our_listing']),
        'overhead': !exists(json, 'overhead') ? undefined : json['overhead'],
        'profit_potential': !exists(json, 'profit_potential') ? undefined : json['profit_potential'],
    };
}

export function ItemEbayMarketPlaceAnalysisToJSON(value?: ItemEbayMarketPlaceAnalysis | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'adjusted_price': value.adjusted_price,
        'adjusted_shipping': value.adjusted_shipping,
        'adjusted_total': value.adjusted_total,
        'cogs': value.cogs,
        'final_value_fee': value.final_value_fee,
        'minimum_advertised_price': value.minimum_advertised_price,
        'other_listings': value.other_listings === undefined ? undefined : ((value.other_listings as Array<any>).map(ItemEbayMarketListingToJSON)),
        'our_listing': ItemEbayMarketListingToJSON(value.our_listing),
        'overhead': value.overhead,
        'profit_potential': value.profit_potential,
    };
}

