/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Cart,
    CartFromJSON,
    CartFromJSONTyped,
    CartToJSON,
} from './Cart';

/**
 * 
 * @export
 * @interface CartProfileLoginResponse
 */
export interface CartProfileLoginResponse {
    /**
     * 
     * @type {Cart}
     * @memberof CartProfileLoginResponse
     */
    cart?: Cart;
    /**
     * Errors to display to the customer if they failed any of the validations checked
     * @type {Array<string>}
     * @memberof CartProfileLoginResponse
     */
    errors?: Array<string>;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CartProfileLoginResponse)[] = ["cart", "errors"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CartProfileLoginResponse interface.
 */
export function instanceOfCartProfileLoginResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartProfileLoginResponseFromJSON(json: any): CartProfileLoginResponse {
    return CartProfileLoginResponseFromJSONTyped(json, false);
}

export function CartProfileLoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartProfileLoginResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cart': !exists(json, 'cart') ? undefined : CartFromJSON(json['cart']),
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
    };
}

export function CartProfileLoginResponseToJSON(value?: CartProfileLoginResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cart': CartToJSON(value.cart),
        'errors': value.errors,
    };
}

