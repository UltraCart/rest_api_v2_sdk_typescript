/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailCommseqEmail
 */
export interface EmailCommseqEmail {
    /**
     * Deleted
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    deleted?: boolean;
    /**
     * Edited by user
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    edited_by_user?: string;
    /**
     * Email communication sequence email uuid
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    email_communication_sequence_email_uuid?: string;
    /**
     * Email commseq UUID
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    email_communication_sequence_uuid?: string;
    /**
     * Email container cjson
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    email_container_cjson?: string;
    /**
     * Timestamp the last time the container was modified.
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    email_container_cjson_last_modified_dts?: string;
    /**
     * Email template virtual path
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    email_template_vm_path?: string;
    /**
     * 
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    external_generation?: boolean;
    /**
     * 
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    external_generation_authentication?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    external_generation_basic_password?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    external_generation_basic_username?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    external_generation_header_name?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    external_generation_header_value?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    external_generation_id?: string;
    /**
     * 
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    external_generation_url?: string;
    /**
     * Filter profile equation json
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    filter_profile_equation_json?: string;
    /**
     * Individually render
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    individually_render?: boolean;
    /**
     * If this item was ever added to the Code Library, this is the oid for that library item, or 0 if never added before.  This value is used to determine if a library item should be inserted or updated.
     * @type {number}
     * @memberof EmailCommseqEmail
     */
    library_item_oid?: number;
    /**
     * True if email links should contain magic link tokens to log the customer in automatically
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    magic_link?: boolean;
    /**
     * Merchant ID
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    merchant_id?: string;
    /**
     * True if the content of this email is pending review by UltraCart
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    pending_review?: boolean;
    /**
     * Preview text
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    preview_text?: string;
    /**
     * True if the content of this email was rejected during review by UltraCart
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    rejected?: boolean;
    /**
     * True if the content of this email is requires review by UltraCart
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    requires_review?: boolean;
    /**
     * URL to screenshot in large form factor full page
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    screenshot_large_full_url?: string;
    /**
     * URL to screenshot in large form factor viewport
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    screenshot_large_viewport_url?: string;
    /**
     * URL to screenshot in small form factor full page
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    screenshot_small_full_url?: string;
    /**
     * URL to screenshot in small form factor viewport
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    screenshot_small_viewport_url?: string;
    /**
     * Smart sending
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    smart_sending?: boolean;
    /**
     * Storefront oid
     * @type {number}
     * @memberof EmailCommseqEmail
     */
    storefront_oid?: number;
    /**
     * Subject
     * @type {string}
     * @memberof EmailCommseqEmail
     */
    subject?: string;
    /**
     * True if the email was suspended for too high of a spam rate.
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    suspended_for_spam?: boolean;
    /**
     * Transactional email
     * @type {boolean}
     * @memberof EmailCommseqEmail
     */
    transactional_email?: boolean;
    /**
     * Version
     * @type {number}
     * @memberof EmailCommseqEmail
     */
    version?: number;
}



/**
 * Check if a given object implements the EmailCommseqEmail interface.
 */
export function instanceOfEmailCommseqEmail(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EmailCommseqEmailFromJSON(json: any): EmailCommseqEmail {
    return EmailCommseqEmailFromJSONTyped(json, false);
}

export function EmailCommseqEmailFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailCommseqEmail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deleted': !exists(json, 'deleted') ? undefined : json['deleted'],
        'edited_by_user': !exists(json, 'edited_by_user') ? undefined : json['edited_by_user'],
        'email_communication_sequence_email_uuid': !exists(json, 'email_communication_sequence_email_uuid') ? undefined : json['email_communication_sequence_email_uuid'],
        'email_communication_sequence_uuid': !exists(json, 'email_communication_sequence_uuid') ? undefined : json['email_communication_sequence_uuid'],
        'email_container_cjson': !exists(json, 'email_container_cjson') ? undefined : json['email_container_cjson'],
        'email_container_cjson_last_modified_dts': !exists(json, 'email_container_cjson_last_modified_dts') ? undefined : json['email_container_cjson_last_modified_dts'],
        'email_template_vm_path': !exists(json, 'email_template_vm_path') ? undefined : json['email_template_vm_path'],
        'external_generation': !exists(json, 'external_generation') ? undefined : json['external_generation'],
        'external_generation_authentication': !exists(json, 'external_generation_authentication') ? undefined : json['external_generation_authentication'],
        'external_generation_basic_password': !exists(json, 'external_generation_basic_password') ? undefined : json['external_generation_basic_password'],
        'external_generation_basic_username': !exists(json, 'external_generation_basic_username') ? undefined : json['external_generation_basic_username'],
        'external_generation_header_name': !exists(json, 'external_generation_header_name') ? undefined : json['external_generation_header_name'],
        'external_generation_header_value': !exists(json, 'external_generation_header_value') ? undefined : json['external_generation_header_value'],
        'external_generation_id': !exists(json, 'external_generation_id') ? undefined : json['external_generation_id'],
        'external_generation_url': !exists(json, 'external_generation_url') ? undefined : json['external_generation_url'],
        'filter_profile_equation_json': !exists(json, 'filter_profile_equation_json') ? undefined : json['filter_profile_equation_json'],
        'individually_render': !exists(json, 'individually_render') ? undefined : json['individually_render'],
        'library_item_oid': !exists(json, 'library_item_oid') ? undefined : json['library_item_oid'],
        'magic_link': !exists(json, 'magic_link') ? undefined : json['magic_link'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'pending_review': !exists(json, 'pending_review') ? undefined : json['pending_review'],
        'preview_text': !exists(json, 'preview_text') ? undefined : json['preview_text'],
        'rejected': !exists(json, 'rejected') ? undefined : json['rejected'],
        'requires_review': !exists(json, 'requires_review') ? undefined : json['requires_review'],
        'screenshot_large_full_url': !exists(json, 'screenshot_large_full_url') ? undefined : json['screenshot_large_full_url'],
        'screenshot_large_viewport_url': !exists(json, 'screenshot_large_viewport_url') ? undefined : json['screenshot_large_viewport_url'],
        'screenshot_small_full_url': !exists(json, 'screenshot_small_full_url') ? undefined : json['screenshot_small_full_url'],
        'screenshot_small_viewport_url': !exists(json, 'screenshot_small_viewport_url') ? undefined : json['screenshot_small_viewport_url'],
        'smart_sending': !exists(json, 'smart_sending') ? undefined : json['smart_sending'],
        'storefront_oid': !exists(json, 'storefront_oid') ? undefined : json['storefront_oid'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'suspended_for_spam': !exists(json, 'suspended_for_spam') ? undefined : json['suspended_for_spam'],
        'transactional_email': !exists(json, 'transactional_email') ? undefined : json['transactional_email'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function EmailCommseqEmailToJSON(value?: EmailCommseqEmail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deleted': value.deleted,
        'edited_by_user': value.edited_by_user,
        'email_communication_sequence_email_uuid': value.email_communication_sequence_email_uuid,
        'email_communication_sequence_uuid': value.email_communication_sequence_uuid,
        'email_container_cjson': value.email_container_cjson,
        'email_container_cjson_last_modified_dts': value.email_container_cjson_last_modified_dts,
        'email_template_vm_path': value.email_template_vm_path,
        'external_generation': value.external_generation,
        'external_generation_authentication': value.external_generation_authentication,
        'external_generation_basic_password': value.external_generation_basic_password,
        'external_generation_basic_username': value.external_generation_basic_username,
        'external_generation_header_name': value.external_generation_header_name,
        'external_generation_header_value': value.external_generation_header_value,
        'external_generation_id': value.external_generation_id,
        'external_generation_url': value.external_generation_url,
        'filter_profile_equation_json': value.filter_profile_equation_json,
        'individually_render': value.individually_render,
        'library_item_oid': value.library_item_oid,
        'magic_link': value.magic_link,
        'merchant_id': value.merchant_id,
        'pending_review': value.pending_review,
        'preview_text': value.preview_text,
        'rejected': value.rejected,
        'requires_review': value.requires_review,
        'screenshot_large_full_url': value.screenshot_large_full_url,
        'screenshot_large_viewport_url': value.screenshot_large_viewport_url,
        'screenshot_small_full_url': value.screenshot_small_full_url,
        'screenshot_small_viewport_url': value.screenshot_small_viewport_url,
        'smart_sending': value.smart_sending,
        'storefront_oid': value.storefront_oid,
        'subject': value.subject,
        'suspended_for_spam': value.suspended_for_spam,
        'transactional_email': value.transactional_email,
        'version': value.version,
    };
}

