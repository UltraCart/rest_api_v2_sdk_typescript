/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HTTPHeader,
    HTTPHeaderFromJSON,
    HTTPHeaderFromJSONTyped,
    HTTPHeaderToJSON,
} from './HTTPHeader';

/**
 * 
 * @export
 * @interface WebhookSampleRequest
 */
export interface WebhookSampleRequest {
    /**
     * Request
     * @type {string}
     * @memberof WebhookSampleRequest
     */
    request?: string;
    /**
     * Request headers
     * @type {Array<HTTPHeader>}
     * @memberof WebhookSampleRequest
     */
    request_headers?: Array<HTTPHeader>;
    /**
     * Request id
     * @type {string}
     * @memberof WebhookSampleRequest
     */
    request_id?: string;
    /**
     * URI to send request to
     * @type {string}
     * @memberof WebhookSampleRequest
     */
    uri?: string;
}

export function WebhookSampleRequestFromJSON(json: any): WebhookSampleRequest {
    return WebhookSampleRequestFromJSONTyped(json, false);
}

export function WebhookSampleRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookSampleRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'request': !exists(json, 'request') ? undefined : json['request'],
        'request_headers': !exists(json, 'request_headers') ? undefined : ((json['request_headers'] as Array<any>).map(HTTPHeaderFromJSON)),
        'request_id': !exists(json, 'request_id') ? undefined : json['request_id'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
    };
}

export function WebhookSampleRequestToJSON(value?: WebhookSampleRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'request': value.request,
        'request_headers': value.request_headers === undefined ? undefined : ((value.request_headers as Array<any>).map(HTTPHeaderToJSON)),
        'request_id': value.request_id,
        'uri': value.uri,
    };
}

