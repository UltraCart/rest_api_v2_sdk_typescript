/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationPbxTimeRangeConfig
 */
export interface ConversationPbxTimeRangeConfig {
    /**
     * End date
     * @type {string}
     * @memberof ConversationPbxTimeRangeConfig
     */
    end_date?: string;
    /**
     * End day of week
     * @type {number}
     * @memberof ConversationPbxTimeRangeConfig
     */
    end_day_of_week?: number;
    /**
     * End time
     * @type {string}
     * @memberof ConversationPbxTimeRangeConfig
     */
    end_time?: string;
    /**
     * Start date
     * @type {string}
     * @memberof ConversationPbxTimeRangeConfig
     */
    start_date?: string;
    /**
     * Start day of week
     * @type {number}
     * @memberof ConversationPbxTimeRangeConfig
     */
    start_day_of_week?: number;
    /**
     * Start time
     * @type {string}
     * @memberof ConversationPbxTimeRangeConfig
     */
    start_time?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ConversationPbxTimeRangeConfig)[] = ["end_date", "end_day_of_week", "end_time", "start_date", "start_day_of_week", "start_time"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ConversationPbxTimeRangeConfig interface.
 */
export function instanceOfConversationPbxTimeRangeConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationPbxTimeRangeConfigFromJSON(json: any): ConversationPbxTimeRangeConfig {
    return ConversationPbxTimeRangeConfigFromJSONTyped(json, false);
}

export function ConversationPbxTimeRangeConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationPbxTimeRangeConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'end_date': !exists(json, 'end_date') ? undefined : json['end_date'],
        'end_day_of_week': !exists(json, 'end_day_of_week') ? undefined : json['end_day_of_week'],
        'end_time': !exists(json, 'end_time') ? undefined : json['end_time'],
        'start_date': !exists(json, 'start_date') ? undefined : json['start_date'],
        'start_day_of_week': !exists(json, 'start_day_of_week') ? undefined : json['start_day_of_week'],
        'start_time': !exists(json, 'start_time') ? undefined : json['start_time'],
    };
}

export function ConversationPbxTimeRangeConfigToJSON(value?: ConversationPbxTimeRangeConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'end_date': value.end_date,
        'end_day_of_week': value.end_day_of_week,
        'end_time': value.end_time,
        'start_date': value.start_date,
        'start_day_of_week': value.start_day_of_week,
        'start_time': value.start_time,
    };
}

