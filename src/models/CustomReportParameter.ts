/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomReportParameterOption,
    CustomReportParameterOptionFromJSON,
    CustomReportParameterOptionFromJSONTyped,
    CustomReportParameterOptionToJSON,
} from './CustomReportParameterOption';

/**
 * 
 * @export
 * @interface CustomReportParameter
 */
export interface CustomReportParameter {
    /**
     * 
     * @type {string}
     * @memberof CustomReportParameter
     */
    display_name?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomReportParameter
     */
    meta?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomReportParameter
     */
    name?: string;
    /**
     * 
     * @type {Array<CustomReportParameterOption>}
     * @memberof CustomReportParameter
     */
    options?: Array<CustomReportParameterOption>;
    /**
     * 
     * @type {boolean}
     * @memberof CustomReportParameter
     */
    required?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CustomReportParameter
     */
    type?: string;
}



/**
 * Check if a given object implements the CustomReportParameter interface.
 */
export function instanceOfCustomReportParameter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomReportParameterFromJSON(json: any): CustomReportParameter {
    return CustomReportParameterFromJSONTyped(json, false);
}

export function CustomReportParameterFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomReportParameter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'display_name': !exists(json, 'display_name') ? undefined : json['display_name'],
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(CustomReportParameterOptionFromJSON)),
        'required': !exists(json, 'required') ? undefined : json['required'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function CustomReportParameterToJSON(value?: CustomReportParameter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'display_name': value.display_name,
        'meta': value.meta,
        'name': value.name,
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(CustomReportParameterOptionToJSON)),
        'required': value.required,
        'type': value.type,
    };
}

