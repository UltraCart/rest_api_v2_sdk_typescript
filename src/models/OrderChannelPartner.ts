/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderChannelPartner
 */
export interface OrderChannelPartner {
    /**
     * If true, any purchase order submitted is automatically approved
     * @type {boolean}
     * @memberof OrderChannelPartner
     */
    auto_approve_purchase_order?: boolean;
    /**
     * The code of the channel partner
     * @type {string}
     * @memberof OrderChannelPartner
     */
    channel_partner_code?: string;
    /**
     * Additional data provided by the channel partner, read-only
     * @type {string}
     * @memberof OrderChannelPartner
     */
    channel_partner_data?: string;
    /**
     * Channel partner object identifier, read-only and available on existing channel orders only.
     * @type {number}
     * @memberof OrderChannelPartner
     */
    channel_partner_oid?: number;
    /**
     * The order ID assigned by the channel partner for this order.
     * @type {string}
     * @memberof OrderChannelPartner
     */
    channel_partner_order_id?: string;
    /**
     * Set to true to ignore invalid shipping method being specified.  Only applicable on inserting orders.
     * @type {boolean}
     * @memberof OrderChannelPartner
     */
    ignore_invalid_shipping_method?: boolean;
    /**
     * Indicates this order should be placed in Account Receivable for later payment processing
     * @type {boolean}
     * @memberof OrderChannelPartner
     */
    no_realtime_payment_processing?: boolean;
    /**
     * Indicates this order was already paid for via a channel purchase and no payment collection should be attempted
     * @type {boolean}
     * @memberof OrderChannelPartner
     */
    skip_payment_processing?: boolean;
    /**
     * Instructs UltraCart to skip shipping department and mark this order as fully complete.  This flag defaults to true.  Set this flag to false to shipped product for this order.
     * @type {boolean}
     * @memberof OrderChannelPartner
     */
    store_completed?: boolean;
    /**
     * If true, any failed payment will place the order in Accounts Receivable rather than rejecting it.
     * @type {boolean}
     * @memberof OrderChannelPartner
     */
    store_if_payment_declines?: boolean;
    /**
     * Any warnings are raised as errors and halt the import of the order
     * @type {boolean}
     * @memberof OrderChannelPartner
     */
    treat_warnings_as_errors?: boolean;
}

export function OrderChannelPartnerFromJSON(json: any): OrderChannelPartner {
    return OrderChannelPartnerFromJSONTyped(json, false);
}

export function OrderChannelPartnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderChannelPartner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'auto_approve_purchase_order': !exists(json, 'auto_approve_purchase_order') ? undefined : json['auto_approve_purchase_order'],
        'channel_partner_code': !exists(json, 'channel_partner_code') ? undefined : json['channel_partner_code'],
        'channel_partner_data': !exists(json, 'channel_partner_data') ? undefined : json['channel_partner_data'],
        'channel_partner_oid': !exists(json, 'channel_partner_oid') ? undefined : json['channel_partner_oid'],
        'channel_partner_order_id': !exists(json, 'channel_partner_order_id') ? undefined : json['channel_partner_order_id'],
        'ignore_invalid_shipping_method': !exists(json, 'ignore_invalid_shipping_method') ? undefined : json['ignore_invalid_shipping_method'],
        'no_realtime_payment_processing': !exists(json, 'no_realtime_payment_processing') ? undefined : json['no_realtime_payment_processing'],
        'skip_payment_processing': !exists(json, 'skip_payment_processing') ? undefined : json['skip_payment_processing'],
        'store_completed': !exists(json, 'store_completed') ? undefined : json['store_completed'],
        'store_if_payment_declines': !exists(json, 'store_if_payment_declines') ? undefined : json['store_if_payment_declines'],
        'treat_warnings_as_errors': !exists(json, 'treat_warnings_as_errors') ? undefined : json['treat_warnings_as_errors'],
    };
}

export function OrderChannelPartnerToJSON(value?: OrderChannelPartner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'auto_approve_purchase_order': value.auto_approve_purchase_order,
        'channel_partner_code': value.channel_partner_code,
        'channel_partner_data': value.channel_partner_data,
        'channel_partner_oid': value.channel_partner_oid,
        'channel_partner_order_id': value.channel_partner_order_id,
        'ignore_invalid_shipping_method': value.ignore_invalid_shipping_method,
        'no_realtime_payment_processing': value.no_realtime_payment_processing,
        'skip_payment_processing': value.skip_payment_processing,
        'store_completed': value.store_completed,
        'store_if_payment_declines': value.store_if_payment_declines,
        'treat_warnings_as_errors': value.treat_warnings_as_errors,
    };
}

