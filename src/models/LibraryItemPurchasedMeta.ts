/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LibraryItemPurchasedMeta
 */
export interface LibraryItemPurchasedMeta {
    /**
     * The most recent version of the item purchased
     * @type {number}
     * @memberof LibraryItemPurchasedMeta
     */
    most_recent_version?: number;
    /**
     * If this is a public item and the merchant has already purchased it, this is their version.  If not yet purchased, this will be zero.  This value will only be populated during a searchPublicItems() call.
     * @type {number}
     * @memberof LibraryItemPurchasedMeta
     */
    my_purchased_version?: number;
    /**
     * True if the most recent version of this purchase it greater than what was purchased
     * @type {boolean}
     * @memberof LibraryItemPurchasedMeta
     */
    upgrade_available?: boolean;
}

export function LibraryItemPurchasedMetaFromJSON(json: any): LibraryItemPurchasedMeta {
    return LibraryItemPurchasedMetaFromJSONTyped(json, false);
}

export function LibraryItemPurchasedMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryItemPurchasedMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'most_recent_version': !exists(json, 'most_recent_version') ? undefined : json['most_recent_version'],
        'my_purchased_version': !exists(json, 'my_purchased_version') ? undefined : json['my_purchased_version'],
        'upgrade_available': !exists(json, 'upgrade_available') ? undefined : json['upgrade_available'],
    };
}

export function LibraryItemPurchasedMetaToJSON(value?: LibraryItemPurchasedMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'most_recent_version': value.most_recent_version,
        'my_purchased_version': value.my_purchased_version,
        'upgrade_available': value.upgrade_available,
    };
}

