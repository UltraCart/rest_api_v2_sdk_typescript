/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LibraryItemAccount,
    LibraryItemAccountFromJSON,
    LibraryItemAccountFromJSONTyped,
    LibraryItemAccountToJSON,
} from './LibraryItemAccount';
import {
    LibraryItemAsset,
    LibraryItemAssetFromJSON,
    LibraryItemAssetFromJSONTyped,
    LibraryItemAssetToJSON,
} from './LibraryItemAsset';
import {
    LibraryItemAttribute,
    LibraryItemAttributeFromJSON,
    LibraryItemAttributeFromJSONTyped,
    LibraryItemAttributeToJSON,
} from './LibraryItemAttribute';
import {
    LibraryItemEmail,
    LibraryItemEmailFromJSON,
    LibraryItemEmailFromJSONTyped,
    LibraryItemEmailToJSON,
} from './LibraryItemEmail';
import {
    LibraryItemPublishedMeta,
    LibraryItemPublishedMetaFromJSON,
    LibraryItemPublishedMetaFromJSONTyped,
    LibraryItemPublishedMetaToJSON,
} from './LibraryItemPublishedMeta';
import {
    LibraryItemPurchasedMeta,
    LibraryItemPurchasedMetaFromJSON,
    LibraryItemPurchasedMetaFromJSONTyped,
    LibraryItemPurchasedMetaToJSON,
} from './LibraryItemPurchasedMeta';
import {
    LibraryItemScreenshot,
    LibraryItemScreenshotFromJSON,
    LibraryItemScreenshotFromJSONTyped,
    LibraryItemScreenshotToJSON,
} from './LibraryItemScreenshot';

/**
 * 
 * @export
 * @interface LibraryItem
 */
export interface LibraryItem {
    /**
     * 
     * @type {Array<LibraryItemAsset>}
     * @memberof LibraryItem
     */
    assets?: Array<LibraryItemAsset>;
    /**
     * 
     * @type {Array<LibraryItemAttribute>}
     * @memberof LibraryItem
     */
    attributes?: Array<LibraryItemAttribute>;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryItem
     */
    categories?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof LibraryItem
     */
    content?: string;
    /**
     * 
     * @type {string}
     * @memberof LibraryItem
     */
    content_type?: string;
    /**
     * 
     * @type {string}
     * @memberof LibraryItem
     */
    description?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryItem
     */
    industries?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof LibraryItem
     */
    library_item_oid?: number;
    /**
     * 
     * @type {string}
     * @memberof LibraryItem
     */
    merchant_id?: string;
    /**
     * If this is a public item and the merchant has already purchased it, this is their version.  If not yet purchased, this will be zero.  This value will only be populated during a searchPublicItems() call.
     * @type {number}
     * @memberof LibraryItem
     */
    my_purchased_version?: number;
    /**
     * This id points to the original object that was added to the library. For flows and campaigns, this is a uuid string.  For upsells, it is an oid integer.  For transactional_emails, it is an email name.
     * @type {string}
     * @memberof LibraryItem
     */
    original_object_id?: string;
    /**
     * The price of the published item.  Null for any private library items.
     * @type {number}
     * @memberof LibraryItem
     */
    price?: number;
    /**
     * The formatted price of the published item.  Null for any private library items.
     * @type {string}
     * @memberof LibraryItem
     */
    price_formatted?: string;
    /**
     * True if this library item is a published item (not source)
     * @type {boolean}
     * @memberof LibraryItem
     */
    published?: boolean;
    /**
     * The timestamp of the last published version
     * @type {object}
     * @memberof LibraryItem
     */
    published_dts?: object;
    /**
     * The source item used to publish this item.  This allows for comparisons between source and published
     * @type {number}
     * @memberof LibraryItem
     */
    published_from_library_item_oid?: number;
    /**
     * 
     * @type {LibraryItemPublishedMeta}
     * @memberof LibraryItem
     */
    published_meta?: LibraryItemPublishedMeta;
    /**
     * The source version when this item was published.  This allows for out-of-date alerts to be shown when there is a difference between source and published
     * @type {number}
     * @memberof LibraryItem
     */
    published_version?: number;
    /**
     * True if this library item has been purchased
     * @type {boolean}
     * @memberof LibraryItem
     */
    purchased?: boolean;
    /**
     * The published item that was purchased to make this item.  This allows for comparisons between published and purchased
     * @type {number}
     * @memberof LibraryItem
     */
    purchased_from_library_item_oid?: number;
    /**
     * 
     * @type {LibraryItemPurchasedMeta}
     * @memberof LibraryItem
     */
    purchased_meta?: LibraryItemPurchasedMeta;
    /**
     * The published version when this item was purchased.  This allows for out-of-date alerts to be shown when there is a difference between published and purchased
     * @type {number}
     * @memberof LibraryItem
     */
    purchased_version?: number;
    /**
     * Any published library reviewed by UltraCart staff for malicious or inappropriate content will have this flag set to true.  This is always false for non-published items
     * @type {boolean}
     * @memberof LibraryItem
     */
    rejected?: boolean;
    /**
     * Any rejected published item will have this field populated with the reason.
     * @type {string}
     * @memberof LibraryItem
     */
    rejected_reason?: string;
    /**
     * Release notes specific to each published version and only appearing on public items.
     * @type {string}
     * @memberof LibraryItem
     */
    release_notes?: string;
    /**
     * This counter records how many times a library item has been published.  This is used to show version history.
     * @type {number}
     * @memberof LibraryItem
     */
    release_version?: number;
    /**
     * Any published library items must be reviewed by UltraCart staff for malicious content.  This flag shows the status of that review.  This is always false for non-published items
     * @type {boolean}
     * @memberof LibraryItem
     */
    reviewed?: boolean;
    /**
     * This is the timestamp for a published items formal review by UltraCart staff for malicious content.
     * @type {object}
     * @memberof LibraryItem
     */
    reviewed_dts?: object;
    /**
     * 
     * @type {Array<LibraryItemScreenshot>}
     * @memberof LibraryItem
     */
    screenshots?: Array<LibraryItemScreenshot>;
    /**
     * 
     * @type {Array<LibraryItemAccount>}
     * @memberof LibraryItem
     */
    share_with_accounts?: Array<LibraryItemAccount>;
    /**
     * 
     * @type {Array<LibraryItemEmail>}
     * @memberof LibraryItem
     */
    share_with_other_emails?: Array<LibraryItemEmail>;
    /**
     * True if this item is shared from another merchant account
     * @type {boolean}
     * @memberof LibraryItem
     */
    shared?: boolean;
    /**
     * True if this library item has been published
     * @type {boolean}
     * @memberof LibraryItem
     */
    source?: boolean;
    /**
     * This oid points to the published library item, if there is one.
     * @type {number}
     * @memberof LibraryItem
     */
    source_to_library_item_oid?: number;
    /**
     * The version of this item.  Increment every time the item is saved.
     * @type {number}
     * @memberof LibraryItem
     */
    source_version?: number;
    /**
     * 
     * @type {string}
     * @memberof LibraryItem
     */
    style?: string;
    /**
     * 
     * @type {number}
     * @memberof LibraryItem
     */
    times_purchased?: number;
    /**
     * 
     * @type {string}
     * @memberof LibraryItem
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof LibraryItem
     */
    type?: string;
    /**
     * True if this library item was published but is awaiting review from UltraCart staff.
     * @type {boolean}
     * @memberof LibraryItem
     */
    under_review?: boolean;
}



/**
 * Check if a given object implements the LibraryItem interface.
 */
export function instanceOfLibraryItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LibraryItemFromJSON(json: any): LibraryItem {
    return LibraryItemFromJSONTyped(json, false);
}

export function LibraryItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assets': !exists(json, 'assets') ? undefined : ((json['assets'] as Array<any>).map(LibraryItemAssetFromJSON)),
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(LibraryItemAttributeFromJSON)),
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'content_type': !exists(json, 'content_type') ? undefined : json['content_type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'industries': !exists(json, 'industries') ? undefined : json['industries'],
        'library_item_oid': !exists(json, 'library_item_oid') ? undefined : json['library_item_oid'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'my_purchased_version': !exists(json, 'my_purchased_version') ? undefined : json['my_purchased_version'],
        'original_object_id': !exists(json, 'original_object_id') ? undefined : json['original_object_id'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'price_formatted': !exists(json, 'price_formatted') ? undefined : json['price_formatted'],
        'published': !exists(json, 'published') ? undefined : json['published'],
        'published_dts': !exists(json, 'published_dts') ? undefined : json['published_dts'],
        'published_from_library_item_oid': !exists(json, 'published_from_library_item_oid') ? undefined : json['published_from_library_item_oid'],
        'published_meta': !exists(json, 'published_meta') ? undefined : LibraryItemPublishedMetaFromJSON(json['published_meta']),
        'published_version': !exists(json, 'published_version') ? undefined : json['published_version'],
        'purchased': !exists(json, 'purchased') ? undefined : json['purchased'],
        'purchased_from_library_item_oid': !exists(json, 'purchased_from_library_item_oid') ? undefined : json['purchased_from_library_item_oid'],
        'purchased_meta': !exists(json, 'purchased_meta') ? undefined : LibraryItemPurchasedMetaFromJSON(json['purchased_meta']),
        'purchased_version': !exists(json, 'purchased_version') ? undefined : json['purchased_version'],
        'rejected': !exists(json, 'rejected') ? undefined : json['rejected'],
        'rejected_reason': !exists(json, 'rejected_reason') ? undefined : json['rejected_reason'],
        'release_notes': !exists(json, 'release_notes') ? undefined : json['release_notes'],
        'release_version': !exists(json, 'release_version') ? undefined : json['release_version'],
        'reviewed': !exists(json, 'reviewed') ? undefined : json['reviewed'],
        'reviewed_dts': !exists(json, 'reviewed_dts') ? undefined : json['reviewed_dts'],
        'screenshots': !exists(json, 'screenshots') ? undefined : ((json['screenshots'] as Array<any>).map(LibraryItemScreenshotFromJSON)),
        'share_with_accounts': !exists(json, 'share_with_accounts') ? undefined : ((json['share_with_accounts'] as Array<any>).map(LibraryItemAccountFromJSON)),
        'share_with_other_emails': !exists(json, 'share_with_other_emails') ? undefined : ((json['share_with_other_emails'] as Array<any>).map(LibraryItemEmailFromJSON)),
        'shared': !exists(json, 'shared') ? undefined : json['shared'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'source_to_library_item_oid': !exists(json, 'source_to_library_item_oid') ? undefined : json['source_to_library_item_oid'],
        'source_version': !exists(json, 'source_version') ? undefined : json['source_version'],
        'style': !exists(json, 'style') ? undefined : json['style'],
        'times_purchased': !exists(json, 'times_purchased') ? undefined : json['times_purchased'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'under_review': !exists(json, 'under_review') ? undefined : json['under_review'],
    };
}

export function LibraryItemToJSON(value?: LibraryItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'assets': value.assets === undefined ? undefined : ((value.assets as Array<any>).map(LibraryItemAssetToJSON)),
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(LibraryItemAttributeToJSON)),
        'categories': value.categories,
        'content': value.content,
        'content_type': value.content_type,
        'description': value.description,
        'industries': value.industries,
        'library_item_oid': value.library_item_oid,
        'merchant_id': value.merchant_id,
        'my_purchased_version': value.my_purchased_version,
        'original_object_id': value.original_object_id,
        'price': value.price,
        'price_formatted': value.price_formatted,
        'published': value.published,
        'published_dts': value.published_dts,
        'published_from_library_item_oid': value.published_from_library_item_oid,
        'published_meta': LibraryItemPublishedMetaToJSON(value.published_meta),
        'published_version': value.published_version,
        'purchased': value.purchased,
        'purchased_from_library_item_oid': value.purchased_from_library_item_oid,
        'purchased_meta': LibraryItemPurchasedMetaToJSON(value.purchased_meta),
        'purchased_version': value.purchased_version,
        'rejected': value.rejected,
        'rejected_reason': value.rejected_reason,
        'release_notes': value.release_notes,
        'release_version': value.release_version,
        'reviewed': value.reviewed,
        'reviewed_dts': value.reviewed_dts,
        'screenshots': value.screenshots === undefined ? undefined : ((value.screenshots as Array<any>).map(LibraryItemScreenshotToJSON)),
        'share_with_accounts': value.share_with_accounts === undefined ? undefined : ((value.share_with_accounts as Array<any>).map(LibraryItemAccountToJSON)),
        'share_with_other_emails': value.share_with_other_emails === undefined ? undefined : ((value.share_with_other_emails as Array<any>).map(LibraryItemEmailToJSON)),
        'shared': value.shared,
        'source': value.source,
        'source_to_library_item_oid': value.source_to_library_item_oid,
        'source_version': value.source_version,
        'style': value.style,
        'times_purchased': value.times_purchased,
        'title': value.title,
        'type': value.type,
        'under_review': value.under_review,
    };
}

