/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntegrationLogLog
 */
export interface IntegrationLogLog {
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogLog
     */
    contents?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogLog
     */
    name?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof IntegrationLogLog)[] = ["contents", "name"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the IntegrationLogLog interface.
 */
export function instanceOfIntegrationLogLog(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IntegrationLogLogFromJSON(json: any): IntegrationLogLog {
    return IntegrationLogLogFromJSONTyped(json, false);
}

export function IntegrationLogLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationLogLog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contents': !exists(json, 'contents') ? undefined : json['contents'],
        'name': !exists(json, 'name') ? undefined : json['name'],
    };
}

export function IntegrationLogLogToJSON(value?: IntegrationLogLog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contents': value.contents,
        'name': value.name,
    };
}

