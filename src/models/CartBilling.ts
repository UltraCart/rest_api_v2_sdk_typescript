/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CartBilling
 */
export interface CartBilling {
    /**
     * Address line 1
     * @type {string}
     * @memberof CartBilling
     */
    address1?: string;
    /**
     * Address line 2
     * @type {string}
     * @memberof CartBilling
     */
    address2?: string;
    /**
     * CC emails.  Multiple allowed, but total length of all emails can not exceed 100 characters.
     * @type {Array<string>}
     * @memberof CartBilling
     */
    cc_emails?: Array<string>;
    /**
     * Cell phone
     * @type {string}
     * @memberof CartBilling
     */
    cell_phone?: string;
    /**
     * Cell phone (E164 format)
     * @type {string}
     * @memberof CartBilling
     */
    cell_phone_e164?: string;
    /**
     * City
     * @type {string}
     * @memberof CartBilling
     */
    city?: string;
    /**
     * Company
     * @type {string}
     * @memberof CartBilling
     */
    company?: string;
    /**
     * ISO-3166 two letter country code
     * @type {string}
     * @memberof CartBilling
     */
    country_code?: string;
    /**
     * Day phone
     * @type {string}
     * @memberof CartBilling
     */
    day_phone?: string;
    /**
     * Email
     * @type {string}
     * @memberof CartBilling
     */
    email?: string;
    /**
     * Email entered for confirmation
     * @type {string}
     * @memberof CartBilling
     */
    email_confirm?: string;
    /**
     * Evening phone
     * @type {string}
     * @memberof CartBilling
     */
    evening_phone?: string;
    /**
     * First name
     * @type {string}
     * @memberof CartBilling
     */
    first_name?: string;
    /**
     * Last name
     * @type {string}
     * @memberof CartBilling
     */
    last_name?: string;
    /**
     * Postal code
     * @type {string}
     * @memberof CartBilling
     */
    postal_code?: string;
    /**
     * State for United States otherwise region or province for other countries
     * @type {string}
     * @memberof CartBilling
     */
    state_region?: string;
    /**
     * Title
     * @type {string}
     * @memberof CartBilling
     */
    title?: string;
}

export function CartBillingFromJSON(json: any): CartBilling {
    return CartBillingFromJSONTyped(json, false);
}

export function CartBillingFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartBilling {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address1': !exists(json, 'address1') ? undefined : json['address1'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'cc_emails': !exists(json, 'cc_emails') ? undefined : json['cc_emails'],
        'cell_phone': !exists(json, 'cell_phone') ? undefined : json['cell_phone'],
        'cell_phone_e164': !exists(json, 'cell_phone_e164') ? undefined : json['cell_phone_e164'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'country_code': !exists(json, 'country_code') ? undefined : json['country_code'],
        'day_phone': !exists(json, 'day_phone') ? undefined : json['day_phone'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'email_confirm': !exists(json, 'email_confirm') ? undefined : json['email_confirm'],
        'evening_phone': !exists(json, 'evening_phone') ? undefined : json['evening_phone'],
        'first_name': !exists(json, 'first_name') ? undefined : json['first_name'],
        'last_name': !exists(json, 'last_name') ? undefined : json['last_name'],
        'postal_code': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'state_region': !exists(json, 'state_region') ? undefined : json['state_region'],
        'title': !exists(json, 'title') ? undefined : json['title'],
    };
}

export function CartBillingToJSON(value?: CartBilling | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address1': value.address1,
        'address2': value.address2,
        'cc_emails': value.cc_emails,
        'cell_phone': value.cell_phone,
        'cell_phone_e164': value.cell_phone_e164,
        'city': value.city,
        'company': value.company,
        'country_code': value.country_code,
        'day_phone': value.day_phone,
        'email': value.email,
        'email_confirm': value.email_confirm,
        'evening_phone': value.evening_phone,
        'first_name': value.first_name,
        'last_name': value.last_name,
        'postal_code': value.postal_code,
        'state_region': value.state_region,
        'title': value.title,
    };
}

