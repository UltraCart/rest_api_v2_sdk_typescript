/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderItemEdiIdentification,
    OrderItemEdiIdentificationFromJSON,
    OrderItemEdiIdentificationFromJSONTyped,
    OrderItemEdiIdentificationToJSON,
} from './OrderItemEdiIdentification';
import {
    OrderItemEdiLot,
    OrderItemEdiLotFromJSON,
    OrderItemEdiLotFromJSONTyped,
    OrderItemEdiLotToJSON,
} from './OrderItemEdiLot';

/**
 * 
 * @export
 * @interface OrderItemEdi
 */
export interface OrderItemEdi {
    /**
     * Identification information receives on the EDI purchase order
     * @type {Array<OrderItemEdiIdentification>}
     * @memberof OrderItemEdi
     */
    identifications?: Array<OrderItemEdiIdentification>;
    /**
     * Lot information
     * @type {Array<OrderItemEdiLot>}
     * @memberof OrderItemEdi
     */
    lots?: Array<OrderItemEdiLot>;
}



/**
 * Check if a given object implements the OrderItemEdi interface.
 */
export function instanceOfOrderItemEdi(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderItemEdiFromJSON(json: any): OrderItemEdi {
    return OrderItemEdiFromJSONTyped(json, false);
}

export function OrderItemEdiFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderItemEdi {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifications': !exists(json, 'identifications') ? undefined : ((json['identifications'] as Array<any>).map(OrderItemEdiIdentificationFromJSON)),
        'lots': !exists(json, 'lots') ? undefined : ((json['lots'] as Array<any>).map(OrderItemEdiLotFromJSON)),
    };
}

export function OrderItemEdiToJSON(value?: OrderItemEdi | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifications': value.identifications === undefined ? undefined : ((value.identifications as Array<any>).map(OrderItemEdiIdentificationToJSON)),
        'lots': value.lots === undefined ? undefined : ((value.lots as Array<any>).map(OrderItemEdiLotToJSON)),
    };
}

