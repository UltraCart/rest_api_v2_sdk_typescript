/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomReportParameter,
    CustomReportParameterFromJSON,
    CustomReportParameterFromJSONTyped,
    CustomReportParameterToJSON,
} from './CustomReportParameter';
import {
    CustomReportQuery,
    CustomReportQueryFromJSON,
    CustomReportQueryFromJSONTyped,
    CustomReportQueryToJSON,
} from './CustomReportQuery';
import {
    CustomReportTooltip,
    CustomReportTooltipFromJSON,
    CustomReportTooltipFromJSONTyped,
    CustomReportTooltipToJSON,
} from './CustomReportTooltip';

/**
 * 
 * @export
 * @interface CustomReport
 */
export interface CustomReport {
    /**
     * 
     * @type {string}
     * @memberof CustomReport
     */
    business_analysis_prompt?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomReport
     */
    chart_javascript?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomReport
     */
    chart_javascript_url?: string;
    /**
     * 
     * @type {number}
     * @memberof CustomReport
     */
    data_warehouse_report_config_oid?: number;
    /**
     * 
     * @type {string}
     * @memberof CustomReport
     */
    dataset_security_level?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomReport
     */
    group_name?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomReport
     */
    merchant_id?: string;
    /**
     * 
     * @type {string}
     * @memberof CustomReport
     */
    name?: string;
    /**
     * 
     * @type {Array<CustomReportParameter>}
     * @memberof CustomReport
     */
    parameters?: Array<CustomReportParameter>;
    /**
     * 
     * @type {Array<CustomReportQuery>}
     * @memberof CustomReport
     */
    queries?: Array<CustomReportQuery>;
    /**
     * 
     * @type {Array<CustomReportTooltip>}
     * @memberof CustomReport
     */
    tooltips?: Array<CustomReportTooltip>;
}



/**
 * Check if a given object implements the CustomReport interface.
 */
export function instanceOfCustomReport(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomReportFromJSON(json: any): CustomReport {
    return CustomReportFromJSONTyped(json, false);
}

export function CustomReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomReport {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'business_analysis_prompt': !exists(json, 'business_analysis_prompt') ? undefined : json['business_analysis_prompt'],
        'chart_javascript': !exists(json, 'chart_javascript') ? undefined : json['chart_javascript'],
        'chart_javascript_url': !exists(json, 'chart_javascript_url') ? undefined : json['chart_javascript_url'],
        'data_warehouse_report_config_oid': !exists(json, 'data_warehouse_report_config_oid') ? undefined : json['data_warehouse_report_config_oid'],
        'dataset_security_level': !exists(json, 'dataset_security_level') ? undefined : json['dataset_security_level'],
        'group_name': !exists(json, 'group_name') ? undefined : json['group_name'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'parameters': !exists(json, 'parameters') ? undefined : ((json['parameters'] as Array<any>).map(CustomReportParameterFromJSON)),
        'queries': !exists(json, 'queries') ? undefined : ((json['queries'] as Array<any>).map(CustomReportQueryFromJSON)),
        'tooltips': !exists(json, 'tooltips') ? undefined : ((json['tooltips'] as Array<any>).map(CustomReportTooltipFromJSON)),
    };
}

export function CustomReportToJSON(value?: CustomReport | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'business_analysis_prompt': value.business_analysis_prompt,
        'chart_javascript': value.chart_javascript,
        'chart_javascript_url': value.chart_javascript_url,
        'data_warehouse_report_config_oid': value.data_warehouse_report_config_oid,
        'dataset_security_level': value.dataset_security_level,
        'group_name': value.group_name,
        'merchant_id': value.merchant_id,
        'name': value.name,
        'parameters': value.parameters === undefined ? undefined : ((value.parameters as Array<any>).map(CustomReportParameterToJSON)),
        'queries': value.queries === undefined ? undefined : ((value.queries as Array<any>).map(CustomReportQueryToJSON)),
        'tooltips': value.tooltips === undefined ? undefined : ((value.tooltips as Array<any>).map(CustomReportTooltipToJSON)),
    };
}

