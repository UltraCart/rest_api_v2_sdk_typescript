/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Currency
 */
export interface Currency {
    /**
     * Currency code of the localized value
     * @type {string}
     * @memberof Currency
     */
    currency_code?: string;
    /**
     * Exchange rate used to localize
     * @type {number}
     * @memberof Currency
     */
    exchange_rate?: number;
    /**
     * Value localized to the customer
     * @type {number}
     * @memberof Currency
     */
    localized?: number;
    /**
     * Value localized and formatted for the customer
     * @type {string}
     * @memberof Currency
     */
    localized_formatted?: string;
    /**
     * Value in base currency
     * @type {number}
     * @memberof Currency
     */
    value?: number;
}



/**
 * Check if a given object implements the Currency interface.
 */
export function instanceOfCurrency(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CurrencyFromJSON(json: any): Currency {
    return CurrencyFromJSONTyped(json, false);
}

export function CurrencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Currency {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currency_code': !exists(json, 'currency_code') ? undefined : json['currency_code'],
        'exchange_rate': !exists(json, 'exchange_rate') ? undefined : json['exchange_rate'],
        'localized': !exists(json, 'localized') ? undefined : json['localized'],
        'localized_formatted': !exists(json, 'localized_formatted') ? undefined : json['localized_formatted'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function CurrencyToJSON(value?: Currency | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currency_code': value.currency_code,
        'exchange_rate': value.exchange_rate,
        'localized': value.localized,
        'localized_formatted': value.localized_formatted,
        'value': value.value,
    };
}

