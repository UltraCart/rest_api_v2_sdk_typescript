/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ScreenRecordingFilterPageViewEventParam,
    ScreenRecordingFilterPageViewEventParamFromJSON,
    ScreenRecordingFilterPageViewEventParamFromJSONTyped,
    ScreenRecordingFilterPageViewEventParamToJSON,
} from './ScreenRecordingFilterPageViewEventParam';

/**
 * 
 * @export
 * @interface ScreenRecordingFilterPageViewEvent
 */
export interface ScreenRecordingFilterPageViewEvent {
    /**
     * 
     * @type {string}
     * @memberof ScreenRecordingFilterPageViewEvent
     */
    event_name?: string;
    /**
     * 
     * @type {Array<ScreenRecordingFilterPageViewEventParam>}
     * @memberof ScreenRecordingFilterPageViewEvent
     */
    event_params?: Array<ScreenRecordingFilterPageViewEventParam>;
}



/**
 * Check if a given object implements the ScreenRecordingFilterPageViewEvent interface.
 */
export function instanceOfScreenRecordingFilterPageViewEvent(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScreenRecordingFilterPageViewEventFromJSON(json: any): ScreenRecordingFilterPageViewEvent {
    return ScreenRecordingFilterPageViewEventFromJSONTyped(json, false);
}

export function ScreenRecordingFilterPageViewEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenRecordingFilterPageViewEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'event_name': !exists(json, 'event_name') ? undefined : json['event_name'],
        'event_params': !exists(json, 'event_params') ? undefined : ((json['event_params'] as Array<any>).map(ScreenRecordingFilterPageViewEventParamFromJSON)),
    };
}

export function ScreenRecordingFilterPageViewEventToJSON(value?: ScreenRecordingFilterPageViewEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'event_name': value.event_name,
        'event_params': value.event_params === undefined ? undefined : ((value.event_params as Array<any>).map(ScreenRecordingFilterPageViewEventParamToJSON)),
    };
}

