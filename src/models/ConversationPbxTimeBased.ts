/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConversationPbxTimeBasedMappingConfig,
    ConversationPbxTimeBasedMappingConfigFromJSON,
    ConversationPbxTimeBasedMappingConfigFromJSONTyped,
    ConversationPbxTimeBasedMappingConfigToJSON,
} from './ConversationPbxTimeBasedMappingConfig';

/**
 * 
 * @export
 * @interface ConversationPbxTimeBased
 */
export interface ConversationPbxTimeBased {
    /**
     * 
     * @type {string}
     * @memberof ConversationPbxTimeBased
     */
    conversationPbxTimeBasedUuid?: string;
    /**
     * 
     * @type {ConversationPbxTimeBasedMappingConfig}
     * @memberof ConversationPbxTimeBased
     */
    mappingConfig?: ConversationPbxTimeBasedMappingConfig;
    /**
     * 
     * @type {string}
     * @memberof ConversationPbxTimeBased
     */
    merchantId?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationPbxTimeBased
     */
    timeBasedName?: string;
}

export function ConversationPbxTimeBasedFromJSON(json: any): ConversationPbxTimeBased {
    return ConversationPbxTimeBasedFromJSONTyped(json, false);
}

export function ConversationPbxTimeBasedFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationPbxTimeBased {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conversationPbxTimeBasedUuid': !exists(json, 'conversationPbxTimeBasedUuid') ? undefined : json['conversationPbxTimeBasedUuid'],
        'mappingConfig': !exists(json, 'mappingConfig') ? undefined : ConversationPbxTimeBasedMappingConfigFromJSON(json['mappingConfig']),
        'merchantId': !exists(json, 'merchantId') ? undefined : json['merchantId'],
        'timeBasedName': !exists(json, 'timeBasedName') ? undefined : json['timeBasedName'],
    };
}

export function ConversationPbxTimeBasedToJSON(value?: ConversationPbxTimeBased | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conversationPbxTimeBasedUuid': value.conversationPbxTimeBasedUuid,
        'mappingConfig': ConversationPbxTimeBasedMappingConfigToJSON(value.mappingConfig),
        'merchantId': value.merchantId,
        'timeBasedName': value.timeBasedName,
    };
}

