/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemChannelPartnerMapping
 */
export interface ItemChannelPartnerMapping {
    /**
     * Barcode UA (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    barcode_ua?: string;
    /**
     * Barcode UC (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    barcode_uc?: string;
    /**
     * Barcode UI (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    barcode_ui?: string;
    /**
     * Barcode UK (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    barcode_uk?: string;
    /**
     * Buyer catalog number (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    buyer_catalog_number?: string;
    /**
     * Buyer DPCI (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    buyer_dpci?: string;
    /**
     * Buyer item number (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    buyer_item_number?: string;
    /**
     * Channel partner code
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    channel_partner_code?: string;
    /**
     * Channel partner object identifier
     * @type {number}
     * @memberof ItemChannelPartnerMapping
     */
    channel_partner_oid?: number;
    /**
     * Cost given to this channel partner
     * @type {number}
     * @memberof ItemChannelPartnerMapping
     */
    cost?: number;
    /**
     * From Item ID
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    from_item_id?: string;
    /**
     * From SKU
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    from_sku?: string;
    /**
     * Mutually defined number (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    mutually_defined_number?: string;
    /**
     * Ratio (Channel Partner)
     * @type {number}
     * @memberof ItemChannelPartnerMapping
     */
    quantity_ratio_cp?: number;
    /**
     * Ratio (UltraCart)
     * @type {number}
     * @memberof ItemChannelPartnerMapping
     */
    quantity_ratio_uc?: number;
    /**
     * SKU
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    sku?: string;
    /**
     * Unit of measure
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    unit_of_measure?: string;
    /**
     * Vendor number (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    vendor_number?: string;
    /**
     * Vendor style number (EDI only)
     * @type {string}
     * @memberof ItemChannelPartnerMapping
     */
    vendor_style_number?: string;
}



/**
 * Check if a given object implements the ItemChannelPartnerMapping interface.
 */
export function instanceOfItemChannelPartnerMapping(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemChannelPartnerMappingFromJSON(json: any): ItemChannelPartnerMapping {
    return ItemChannelPartnerMappingFromJSONTyped(json, false);
}

export function ItemChannelPartnerMappingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemChannelPartnerMapping {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'barcode_ua': !exists(json, 'barcode_ua') ? undefined : json['barcode_ua'],
        'barcode_uc': !exists(json, 'barcode_uc') ? undefined : json['barcode_uc'],
        'barcode_ui': !exists(json, 'barcode_ui') ? undefined : json['barcode_ui'],
        'barcode_uk': !exists(json, 'barcode_uk') ? undefined : json['barcode_uk'],
        'buyer_catalog_number': !exists(json, 'buyer_catalog_number') ? undefined : json['buyer_catalog_number'],
        'buyer_dpci': !exists(json, 'buyer_dpci') ? undefined : json['buyer_dpci'],
        'buyer_item_number': !exists(json, 'buyer_item_number') ? undefined : json['buyer_item_number'],
        'channel_partner_code': !exists(json, 'channel_partner_code') ? undefined : json['channel_partner_code'],
        'channel_partner_oid': !exists(json, 'channel_partner_oid') ? undefined : json['channel_partner_oid'],
        'cost': !exists(json, 'cost') ? undefined : json['cost'],
        'from_item_id': !exists(json, 'from_item_id') ? undefined : json['from_item_id'],
        'from_sku': !exists(json, 'from_sku') ? undefined : json['from_sku'],
        'mutually_defined_number': !exists(json, 'mutually_defined_number') ? undefined : json['mutually_defined_number'],
        'quantity_ratio_cp': !exists(json, 'quantity_ratio_cp') ? undefined : json['quantity_ratio_cp'],
        'quantity_ratio_uc': !exists(json, 'quantity_ratio_uc') ? undefined : json['quantity_ratio_uc'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'unit_of_measure': !exists(json, 'unit_of_measure') ? undefined : json['unit_of_measure'],
        'vendor_number': !exists(json, 'vendor_number') ? undefined : json['vendor_number'],
        'vendor_style_number': !exists(json, 'vendor_style_number') ? undefined : json['vendor_style_number'],
    };
}

export function ItemChannelPartnerMappingToJSON(value?: ItemChannelPartnerMapping | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'barcode_ua': value.barcode_ua,
        'barcode_uc': value.barcode_uc,
        'barcode_ui': value.barcode_ui,
        'barcode_uk': value.barcode_uk,
        'buyer_catalog_number': value.buyer_catalog_number,
        'buyer_dpci': value.buyer_dpci,
        'buyer_item_number': value.buyer_item_number,
        'channel_partner_code': value.channel_partner_code,
        'channel_partner_oid': value.channel_partner_oid,
        'cost': value.cost,
        'from_item_id': value.from_item_id,
        'from_sku': value.from_sku,
        'mutually_defined_number': value.mutually_defined_number,
        'quantity_ratio_cp': value.quantity_ratio_cp,
        'quantity_ratio_uc': value.quantity_ratio_uc,
        'sku': value.sku,
        'unit_of_measure': value.unit_of_measure,
        'vendor_number': value.vendor_number,
        'vendor_style_number': value.vendor_style_number,
    };
}

