/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GiftCertificateLedgerEntry
 */
export interface GiftCertificateLedgerEntry {
    /**
     * The amount of the activity.
     * @type {number}
     * @memberof GiftCertificateLedgerEntry
     */
    amount?: number;
    /**
     * Description of what this ledger entry is used.
     * @type {string}
     * @memberof GiftCertificateLedgerEntry
     */
    description?: string;
    /**
     * Date time of this ledger activity.
     * @type {string}
     * @memberof GiftCertificateLedgerEntry
     */
    entry_dts?: string;
    /**
     * Gift certificate ledger oid is a primary key for this object, used internally.
     * @type {number}
     * @memberof GiftCertificateLedgerEntry
     */
    gift_certificate_ledger_oid?: number;
    /**
     * Gift certificate oid.
     * @type {number}
     * @memberof GiftCertificateLedgerEntry
     */
    gift_certificate_oid?: number;
    /**
     * The order id if this gift certificate was used as part of the payment.
     * @type {string}
     * @memberof GiftCertificateLedgerEntry
     */
    reference_order_id?: string;
}

export function GiftCertificateLedgerEntryFromJSON(json: any): GiftCertificateLedgerEntry {
    return GiftCertificateLedgerEntryFromJSONTyped(json, false);
}

export function GiftCertificateLedgerEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): GiftCertificateLedgerEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'entry_dts': !exists(json, 'entry_dts') ? undefined : json['entry_dts'],
        'gift_certificate_ledger_oid': !exists(json, 'gift_certificate_ledger_oid') ? undefined : json['gift_certificate_ledger_oid'],
        'gift_certificate_oid': !exists(json, 'gift_certificate_oid') ? undefined : json['gift_certificate_oid'],
        'reference_order_id': !exists(json, 'reference_order_id') ? undefined : json['reference_order_id'],
    };
}

export function GiftCertificateLedgerEntryToJSON(value?: GiftCertificateLedgerEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'description': value.description,
        'entry_dts': value.entry_dts,
        'gift_certificate_ledger_oid': value.gift_certificate_ledger_oid,
        'gift_certificate_oid': value.gift_certificate_oid,
        'reference_order_id': value.reference_order_id,
    };
}

