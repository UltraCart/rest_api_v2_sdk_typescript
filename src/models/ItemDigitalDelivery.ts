/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemDigitalItem,
    ItemDigitalItemFromJSON,
    ItemDigitalItemFromJSONTyped,
    ItemDigitalItemToJSON,
} from './ItemDigitalItem';

/**
 * 
 * @export
 * @interface ItemDigitalDelivery
 */
export interface ItemDigitalDelivery {
    /**
     * Description of the activation code
     * @type {string}
     * @memberof ItemDigitalDelivery
     */
    activation_code_description?: string;
    /**
     * The number of activation codes whcih should generate a warning email
     * @type {number}
     * @memberof ItemDigitalDelivery
     */
    activation_code_low_warning?: number;
    /**
     * The URL to retrieve activation codes from in real-time
     * @type {string}
     * @memberof ItemDigitalDelivery
     */
    activation_code_realtime_url?: string;
    /**
     * Shared secret used when communicating with the real-time URL
     * @type {string}
     * @memberof ItemDigitalDelivery
     */
    activation_code_shared_secret?: string;
    /**
     * Type of activation code
     * @type {string}
     * @memberof ItemDigitalDelivery
     */
    activation_code_type?: string;
    /**
     * Digital items that customer can download when this item is purchased
     * @type {Array<ItemDigitalItem>}
     * @memberof ItemDigitalDelivery
     */
    digital_items?: Array<ItemDigitalItem>;
}



/**
 * Check if a given object implements the ItemDigitalDelivery interface.
 */
export function instanceOfItemDigitalDelivery(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemDigitalDeliveryFromJSON(json: any): ItemDigitalDelivery {
    return ItemDigitalDeliveryFromJSONTyped(json, false);
}

export function ItemDigitalDeliveryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemDigitalDelivery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activation_code_description': !exists(json, 'activation_code_description') ? undefined : json['activation_code_description'],
        'activation_code_low_warning': !exists(json, 'activation_code_low_warning') ? undefined : json['activation_code_low_warning'],
        'activation_code_realtime_url': !exists(json, 'activation_code_realtime_url') ? undefined : json['activation_code_realtime_url'],
        'activation_code_shared_secret': !exists(json, 'activation_code_shared_secret') ? undefined : json['activation_code_shared_secret'],
        'activation_code_type': !exists(json, 'activation_code_type') ? undefined : json['activation_code_type'],
        'digital_items': !exists(json, 'digital_items') ? undefined : ((json['digital_items'] as Array<any>).map(ItemDigitalItemFromJSON)),
    };
}

export function ItemDigitalDeliveryToJSON(value?: ItemDigitalDelivery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activation_code_description': value.activation_code_description,
        'activation_code_low_warning': value.activation_code_low_warning,
        'activation_code_realtime_url': value.activation_code_realtime_url,
        'activation_code_shared_secret': value.activation_code_shared_secret,
        'activation_code_type': value.activation_code_type,
        'digital_items': value.digital_items === undefined ? undefined : ((value.digital_items as Array<any>).map(ItemDigitalItemToJSON)),
    };
}

