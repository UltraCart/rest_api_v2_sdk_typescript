/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportPageFilter
 */
export interface ReportPageFilter {
    /**
     * A JSON representation of the configuration for this visualization
     * @type {string}
     * @memberof ReportPageFilter
     */
    config?: string;
    /**
     * 
     * @type {string}
     * @memberof ReportPageFilter
     */
    name?: string;
    /**
     * A JSON representation of the style configuration for this visualization
     * @type {string}
     * @memberof ReportPageFilter
     */
    styles?: string;
    /**
     * Unique UUID assigned to the filter.  Assists when returning values that the filter can use.
     * @type {string}
     * @memberof ReportPageFilter
     */
    uuid?: string;
}

export function ReportPageFilterFromJSON(json: any): ReportPageFilter {
    return ReportPageFilterFromJSONTyped(json, false);
}

export function ReportPageFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportPageFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'config': !exists(json, 'config') ? undefined : json['config'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'styles': !exists(json, 'styles') ? undefined : json['styles'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
    };
}

export function ReportPageFilterToJSON(value?: ReportPageFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'config': value.config,
        'name': value.name,
        'styles': value.styles,
        'uuid': value.uuid,
    };
}

