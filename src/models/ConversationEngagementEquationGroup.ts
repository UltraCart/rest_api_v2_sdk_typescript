/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConversationEngagementEquationFunction,
    ConversationEngagementEquationFunctionFromJSON,
    ConversationEngagementEquationFunctionFromJSONTyped,
    ConversationEngagementEquationFunctionToJSON,
} from './ConversationEngagementEquationFunction';

/**
 * 
 * @export
 * @interface ConversationEngagementEquationGroup
 */
export interface ConversationEngagementEquationGroup {
    /**
     * 
     * @type {Array<ConversationEngagementEquationFunction>}
     * @memberof ConversationEngagementEquationGroup
     */
    functions?: Array<ConversationEngagementEquationFunction>;
}



/**
 * Check if a given object implements the ConversationEngagementEquationGroup interface.
 */
export function instanceOfConversationEngagementEquationGroup(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationEngagementEquationGroupFromJSON(json: any): ConversationEngagementEquationGroup {
    return ConversationEngagementEquationGroupFromJSONTyped(json, false);
}

export function ConversationEngagementEquationGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationEngagementEquationGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'functions': !exists(json, 'functions') ? undefined : ((json['functions'] as Array<any>).map(ConversationEngagementEquationFunctionFromJSON)),
    };
}

export function ConversationEngagementEquationGroupToJSON(value?: ConversationEngagementEquationGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'functions': value.functions === undefined ? undefined : ((value.functions as Array<any>).map(ConversationEngagementEquationFunctionToJSON)),
    };
}

