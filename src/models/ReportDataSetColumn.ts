/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReportDataSetColumn
 */
export interface ReportDataSetColumn {
    /**
     * 
     * @type {boolean}
     * @memberof ReportDataSetColumn
     */
    _in?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReportDataSetColumn
     */
    n?: string;
    /**
     * 
     * @type {string}
     * @memberof ReportDataSetColumn
     */
    vd?: string;
    /**
     * 
     * @type {string}
     * @memberof ReportDataSetColumn
     */
    vdt?: string;
    /**
     * 
     * @type {number}
     * @memberof ReportDataSetColumn
     */
    vn?: number;
    /**
     * 
     * @type {string}
     * @memberof ReportDataSetColumn
     */
    vs?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ReportDataSetColumn)[] = ["_in", "n", "vd", "vdt", "vn", "vs"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ReportDataSetColumn interface.
 */
export function instanceOfReportDataSetColumn(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReportDataSetColumnFromJSON(json: any): ReportDataSetColumn {
    return ReportDataSetColumnFromJSONTyped(json, false);
}

export function ReportDataSetColumnFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDataSetColumn {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_in': !exists(json, 'in') ? undefined : json['in'],
        'n': !exists(json, 'n') ? undefined : json['n'],
        'vd': !exists(json, 'vd') ? undefined : json['vd'],
        'vdt': !exists(json, 'vdt') ? undefined : json['vdt'],
        'vn': !exists(json, 'vn') ? undefined : json['vn'],
        'vs': !exists(json, 'vs') ? undefined : json['vs'],
    };
}

export function ReportDataSetColumnToJSON(value?: ReportDataSetColumn | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'in': value._in,
        'n': value.n,
        'vd': value.vd,
        'vdt': value.vdt,
        'vn': value.vn,
        'vs': value.vs,
    };
}

