/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationMessageTransportStatus
 */
export interface ConversationMessageTransportStatus {
    /**
     * 
     * @type {string}
     * @memberof ConversationMessageTransportStatus
     */
    conversation_participant_arn?: string;
    /**
     * The status of the message transport
     * @type {string}
     * @memberof ConversationMessageTransportStatus
     */
    status?: ConversationMessageTransportStatusStatusEnum;
}



/**
 * @export
 */
export const ConversationMessageTransportStatusStatusEnum = {
    Accepted: 'accepted',
    Scheduled: 'scheduled',
    Queued: 'queued',
    Sending: 'sending',
    Sent: 'sent',
    Read: 'read',
    TwilioCredentialsMissing: 'TWILIO_CREDENTIALS_MISSING',
    SentToTwilio: 'SENT_TO_TWILIO',
    TwilioError: 'TWILIO_ERROR',
    SentToPinpoint: 'SENT_TO_PINPOINT',
    PinpointError: 'PINPOINT_ERROR'
} as const;
export type ConversationMessageTransportStatusStatusEnum = typeof ConversationMessageTransportStatusStatusEnum[keyof typeof ConversationMessageTransportStatusStatusEnum];


/**
 * Check if a given object implements the ConversationMessageTransportStatus interface.
 */
export function instanceOfConversationMessageTransportStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationMessageTransportStatusFromJSON(json: any): ConversationMessageTransportStatus {
    return ConversationMessageTransportStatusFromJSONTyped(json, false);
}

export function ConversationMessageTransportStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationMessageTransportStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conversation_participant_arn': !exists(json, 'conversation_participant_arn') ? undefined : json['conversation_participant_arn'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function ConversationMessageTransportStatusToJSON(value?: ConversationMessageTransportStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conversation_participant_arn': value.conversation_participant_arn,
        'status': value.status,
    };
}

