/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CouponQuery
 */
export interface CouponQuery {
    /**
     * Affiliate oid
     * @type {number}
     * @memberof CouponQuery
     */
    affiliate_oid?: number;
    /**
     * The type of coupon.
     * @type {string}
     * @memberof CouponQuery
     */
    coupon_type?: string;
    /**
     * Description of this coupon
     * @type {string}
     * @memberof CouponQuery
     */
    description?: string;
    /**
     * Exclude expired coupons if true
     * @type {boolean}
     * @memberof CouponQuery
     */
    exclude_expired?: boolean;
    /**
     * Expiration date begin
     * @type {string}
     * @memberof CouponQuery
     */
    expiration_dts_begin?: string;
    /**
     * Expiration date begin
     * @type {string}
     * @memberof CouponQuery
     */
    expiration_dts_end?: string;
    /**
     * Merchant code is a unique character string for this coupon.
     * @type {string}
     * @memberof CouponQuery
     */
    merchant_code?: string;
    /**
     * Merchant code description used for searching
     * @type {string}
     * @memberof CouponQuery
     */
    merchant_code_or_description?: string;
    /**
     * Start date begin
     * @type {string}
     * @memberof CouponQuery
     */
    start_dts_begin?: string;
    /**
     * Start date end
     * @type {string}
     * @memberof CouponQuery
     */
    start_dts_end?: string;
}



/**
 * Check if a given object implements the CouponQuery interface.
 */
export function instanceOfCouponQuery(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CouponQueryFromJSON(json: any): CouponQuery {
    return CouponQueryFromJSONTyped(json, false);
}

export function CouponQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CouponQuery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'affiliate_oid': !exists(json, 'affiliate_oid') ? undefined : json['affiliate_oid'],
        'coupon_type': !exists(json, 'coupon_type') ? undefined : json['coupon_type'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'exclude_expired': !exists(json, 'exclude_expired') ? undefined : json['exclude_expired'],
        'expiration_dts_begin': !exists(json, 'expiration_dts_begin') ? undefined : json['expiration_dts_begin'],
        'expiration_dts_end': !exists(json, 'expiration_dts_end') ? undefined : json['expiration_dts_end'],
        'merchant_code': !exists(json, 'merchant_code') ? undefined : json['merchant_code'],
        'merchant_code_or_description': !exists(json, 'merchant_code_or_description') ? undefined : json['merchant_code_or_description'],
        'start_dts_begin': !exists(json, 'start_dts_begin') ? undefined : json['start_dts_begin'],
        'start_dts_end': !exists(json, 'start_dts_end') ? undefined : json['start_dts_end'],
    };
}

export function CouponQueryToJSON(value?: CouponQuery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'affiliate_oid': value.affiliate_oid,
        'coupon_type': value.coupon_type,
        'description': value.description,
        'exclude_expired': value.exclude_expired,
        'expiration_dts_begin': value.expiration_dts_begin,
        'expiration_dts_end': value.expiration_dts_end,
        'merchant_code': value.merchant_code,
        'merchant_code_or_description': value.merchant_code_or_description,
        'start_dts_begin': value.start_dts_begin,
        'start_dts_end': value.start_dts_end,
    };
}

