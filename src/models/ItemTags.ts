/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemTag,
    ItemTagFromJSON,
    ItemTagFromJSONTyped,
    ItemTagToJSON,
} from './ItemTag';

/**
 * 
 * @export
 * @interface ItemTags
 */
export interface ItemTags {
    /**
     * tags
     * @type {Array<ItemTag>}
     * @memberof ItemTags
     */
    tags?: Array<ItemTag>;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ItemTags)[] = ["tags"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ItemTags interface.
 */
export function instanceOfItemTags(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemTagsFromJSON(json: any): ItemTags {
    return ItemTagsFromJSONTyped(json, false);
}

export function ItemTagsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemTags {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tags': !exists(json, 'tags') ? undefined : ((json['tags'] as Array<any>).map(ItemTagFromJSON)),
    };
}

export function ItemTagsToJSON(value?: ItemTags | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(ItemTagToJSON)),
    };
}

