/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomerLoyaltyRedemption
 */
export interface CustomerLoyaltyRedemption {
    /**
     * Coupon code
     * @type {string}
     * @memberof CustomerLoyaltyRedemption
     */
    coupon_code?: string;
    /**
     * Coupon code OID
     * @type {number}
     * @memberof CustomerLoyaltyRedemption
     */
    coupon_code_oid?: number;
    /**
     * Coupon used
     * @type {boolean}
     * @memberof CustomerLoyaltyRedemption
     */
    coupon_used?: boolean;
    /**
     * Description for customer
     * @type {string}
     * @memberof CustomerLoyaltyRedemption
     */
    description_for_customer?: string;
    /**
     * Expiration date
     * @type {string}
     * @memberof CustomerLoyaltyRedemption
     */
    expiration_dts?: string;
    /**
     * Gift certificate code
     * @type {string}
     * @memberof CustomerLoyaltyRedemption
     */
    gift_certificate_code?: string;
    /**
     * Gift certificate oid
     * @type {number}
     * @memberof CustomerLoyaltyRedemption
     */
    gift_certificate_oid?: number;
    /**
     * Loyalty ledger OID
     * @type {number}
     * @memberof CustomerLoyaltyRedemption
     */
    loyalty_ledger_oid?: number;
    /**
     * Loyalty points
     * @type {number}
     * @memberof CustomerLoyaltyRedemption
     */
    loyalty_points?: number;
    /**
     * Loyalty redemption OID
     * @type {number}
     * @memberof CustomerLoyaltyRedemption
     */
    loyalty_redemption_oid?: number;
    /**
     * Order id
     * @type {string}
     * @memberof CustomerLoyaltyRedemption
     */
    order_id?: string;
    /**
     * Redemption date
     * @type {string}
     * @memberof CustomerLoyaltyRedemption
     */
    redemption_dts?: string;
    /**
     * Remaining balance
     * @type {number}
     * @memberof CustomerLoyaltyRedemption
     */
    remaining_balance?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CustomerLoyaltyRedemption)[] = ["coupon_code", "coupon_code_oid", "coupon_used", "description_for_customer", "expiration_dts", "gift_certificate_code", "gift_certificate_oid", "loyalty_ledger_oid", "loyalty_points", "loyalty_redemption_oid", "order_id", "redemption_dts", "remaining_balance"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CustomerLoyaltyRedemption interface.
 */
export function instanceOfCustomerLoyaltyRedemption(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerLoyaltyRedemptionFromJSON(json: any): CustomerLoyaltyRedemption {
    return CustomerLoyaltyRedemptionFromJSONTyped(json, false);
}

export function CustomerLoyaltyRedemptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerLoyaltyRedemption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'coupon_code': !exists(json, 'coupon_code') ? undefined : json['coupon_code'],
        'coupon_code_oid': !exists(json, 'coupon_code_oid') ? undefined : json['coupon_code_oid'],
        'coupon_used': !exists(json, 'coupon_used') ? undefined : json['coupon_used'],
        'description_for_customer': !exists(json, 'description_for_customer') ? undefined : json['description_for_customer'],
        'expiration_dts': !exists(json, 'expiration_dts') ? undefined : json['expiration_dts'],
        'gift_certificate_code': !exists(json, 'gift_certificate_code') ? undefined : json['gift_certificate_code'],
        'gift_certificate_oid': !exists(json, 'gift_certificate_oid') ? undefined : json['gift_certificate_oid'],
        'loyalty_ledger_oid': !exists(json, 'loyalty_ledger_oid') ? undefined : json['loyalty_ledger_oid'],
        'loyalty_points': !exists(json, 'loyalty_points') ? undefined : json['loyalty_points'],
        'loyalty_redemption_oid': !exists(json, 'loyalty_redemption_oid') ? undefined : json['loyalty_redemption_oid'],
        'order_id': !exists(json, 'order_id') ? undefined : json['order_id'],
        'redemption_dts': !exists(json, 'redemption_dts') ? undefined : json['redemption_dts'],
        'remaining_balance': !exists(json, 'remaining_balance') ? undefined : json['remaining_balance'],
    };
}

export function CustomerLoyaltyRedemptionToJSON(value?: CustomerLoyaltyRedemption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'coupon_code': value.coupon_code,
        'coupon_code_oid': value.coupon_code_oid,
        'coupon_used': value.coupon_used,
        'description_for_customer': value.description_for_customer,
        'expiration_dts': value.expiration_dts,
        'gift_certificate_code': value.gift_certificate_code,
        'gift_certificate_oid': value.gift_certificate_oid,
        'loyalty_ledger_oid': value.loyalty_ledger_oid,
        'loyalty_points': value.loyalty_points,
        'loyalty_redemption_oid': value.loyalty_redemption_oid,
        'order_id': value.order_id,
        'redemption_dts': value.redemption_dts,
        'remaining_balance': value.remaining_balance,
    };
}

