/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntegrationLogSummary
 */
export interface IntegrationLogSummary {
    /**
     * 
     * @type {number}
     * @memberof IntegrationLogSummary
     */
    critical?: number;
    /**
     * 
     * @type {number}
     * @memberof IntegrationLogSummary
     */
    error?: number;
    /**
     * 
     * @type {number}
     * @memberof IntegrationLogSummary
     */
    events?: number;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogSummary
     */
    log_type?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogSummary
     */
    logger_id?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogSummary
     */
    logger_name?: string;
    /**
     * 
     * @type {number}
     * @memberof IntegrationLogSummary
     */
    success?: number;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogSummary
     */
    view_url?: string;
    /**
     * 
     * @type {number}
     * @memberof IntegrationLogSummary
     */
    warning?: number;
}

export function IntegrationLogSummaryFromJSON(json: any): IntegrationLogSummary {
    return IntegrationLogSummaryFromJSONTyped(json, false);
}

export function IntegrationLogSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationLogSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'critical': !exists(json, 'critical') ? undefined : json['critical'],
        'error': !exists(json, 'error') ? undefined : json['error'],
        'events': !exists(json, 'events') ? undefined : json['events'],
        'log_type': !exists(json, 'log_type') ? undefined : json['log_type'],
        'logger_id': !exists(json, 'logger_id') ? undefined : json['logger_id'],
        'logger_name': !exists(json, 'logger_name') ? undefined : json['logger_name'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'view_url': !exists(json, 'view_url') ? undefined : json['view_url'],
        'warning': !exists(json, 'warning') ? undefined : json['warning'],
    };
}

export function IntegrationLogSummaryToJSON(value?: IntegrationLogSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'critical': value.critical,
        'error': value.error,
        'events': value.events,
        'log_type': value.log_type,
        'logger_id': value.logger_id,
        'logger_name': value.logger_name,
        'success': value.success,
        'view_url': value.view_url,
        'warning': value.warning,
    };
}

