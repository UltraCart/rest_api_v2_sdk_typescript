/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationEngagementEquationFunction
 */
export interface ConversationEngagementEquationFunction {
    /**
     * Logic operation to perform on an any page url function type
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    any_page_url_logic?: ConversationEngagementEquationFunctionAnyPageUrlLogicEnum;
    /**
     * 
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    any_page_url_value?: string;
    /**
     * Logic operation to perform on a current page url function type
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    current_page_url_logic?: ConversationEngagementEquationFunctionCurrentPageUrlLogicEnum;
    /**
     * 
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    current_page_url_value?: string;
    /**
     * Logic operation to perform on a customer's browsing time function type
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    customers_browsing_time_logic?: ConversationEngagementEquationFunctionCustomersBrowsingTimeLogicEnum;
    /**
     * 
     * @type {number}
     * @memberof ConversationEngagementEquationFunction
     */
    customers_browsing_time_seconds?: number;
    /**
     * 
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    customers_location_country?: string;
    /**
     * Logic operation to perform on a customer's location function type
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    customers_location_logic?: ConversationEngagementEquationFunctionCustomersLocationLogicEnum;
    /**
     * 
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    customers_location_state?: string;
    /**
     * Logic operation to perform on a customer's browsing time function type
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    number_of_viewed_pages_logic?: ConversationEngagementEquationFunctionNumberOfViewedPagesLogicEnum;
    /**
     * 
     * @type {number}
     * @memberof ConversationEngagementEquationFunction
     */
    number_of_viewed_pages_value?: number;
    /**
     * Logic operation to perform on a referring website function type
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    referring_website_logic?: ConversationEngagementEquationFunctionReferringWebsiteLogicEnum;
    /**
     * 
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    referring_website_value?: string;
    /**
     * Type of function
     * @type {string}
     * @memberof ConversationEngagementEquationFunction
     */
    type?: ConversationEngagementEquationFunctionTypeEnum;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ConversationEngagementEquationFunction)[] = ["any_page_url_logic", "any_page_url_value", "current_page_url_logic", "current_page_url_value", "customers_browsing_time_logic", "customers_browsing_time_seconds", "customers_location_country", "customers_location_logic", "customers_location_state", "number_of_viewed_pages_logic", "number_of_viewed_pages_value", "referring_website_logic", "referring_website_value", "type"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * @export
 */
export const ConversationEngagementEquationFunctionAnyPageUrlLogicEnum = {
    Contains: 'contains',
    DoesNotContain: 'does not contain',
    IsExactly: 'is exactly',
    IsNot: 'is not'
} as const;
export type ConversationEngagementEquationFunctionAnyPageUrlLogicEnum = typeof ConversationEngagementEquationFunctionAnyPageUrlLogicEnum[keyof typeof ConversationEngagementEquationFunctionAnyPageUrlLogicEnum];

/**
 * @export
 */
export const ConversationEngagementEquationFunctionCurrentPageUrlLogicEnum = {
    Contains: 'contains',
    DoesNotContain: 'does not contain',
    IsExactly: 'is exactly',
    IsNot: 'is not'
} as const;
export type ConversationEngagementEquationFunctionCurrentPageUrlLogicEnum = typeof ConversationEngagementEquationFunctionCurrentPageUrlLogicEnum[keyof typeof ConversationEngagementEquationFunctionCurrentPageUrlLogicEnum];

/**
 * @export
 */
export const ConversationEngagementEquationFunctionCustomersBrowsingTimeLogicEnum = {
    AtLeast: 'is at least',
    MoreThan: 'is more than',
    LessThan: 'is less than',
    AtMost: 'is at most'
} as const;
export type ConversationEngagementEquationFunctionCustomersBrowsingTimeLogicEnum = typeof ConversationEngagementEquationFunctionCustomersBrowsingTimeLogicEnum[keyof typeof ConversationEngagementEquationFunctionCustomersBrowsingTimeLogicEnum];

/**
 * @export
 */
export const ConversationEngagementEquationFunctionCustomersLocationLogicEnum = {
    Is: 'is',
    IsNot: 'is not'
} as const;
export type ConversationEngagementEquationFunctionCustomersLocationLogicEnum = typeof ConversationEngagementEquationFunctionCustomersLocationLogicEnum[keyof typeof ConversationEngagementEquationFunctionCustomersLocationLogicEnum];

/**
 * @export
 */
export const ConversationEngagementEquationFunctionNumberOfViewedPagesLogicEnum = {
    AtLeast: 'is at least',
    MoreThan: 'is more than',
    LessThan: 'is less than',
    AtMost: 'is at most'
} as const;
export type ConversationEngagementEquationFunctionNumberOfViewedPagesLogicEnum = typeof ConversationEngagementEquationFunctionNumberOfViewedPagesLogicEnum[keyof typeof ConversationEngagementEquationFunctionNumberOfViewedPagesLogicEnum];

/**
 * @export
 */
export const ConversationEngagementEquationFunctionReferringWebsiteLogicEnum = {
    Contains: 'contains',
    DoesNotContain: 'does not contain',
    IsExactly: 'is exactly',
    IsNot: 'is not'
} as const;
export type ConversationEngagementEquationFunctionReferringWebsiteLogicEnum = typeof ConversationEngagementEquationFunctionReferringWebsiteLogicEnum[keyof typeof ConversationEngagementEquationFunctionReferringWebsiteLogicEnum];

/**
 * @export
 */
export const ConversationEngagementEquationFunctionTypeEnum = {
    CurrentPageUrl: 'current page url',
    CustomersLocation: 'customers location',
    CustomersBrowsingTime: 'customers browsing time',
    NumberOfViewedPages: 'number of viewed pages',
    ReferringWebsiteAddress: 'referring website address',
    AnyPageFromSession: 'any page from session'
} as const;
export type ConversationEngagementEquationFunctionTypeEnum = typeof ConversationEngagementEquationFunctionTypeEnum[keyof typeof ConversationEngagementEquationFunctionTypeEnum];


/**
 * Check if a given object implements the ConversationEngagementEquationFunction interface.
 */
export function instanceOfConversationEngagementEquationFunction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationEngagementEquationFunctionFromJSON(json: any): ConversationEngagementEquationFunction {
    return ConversationEngagementEquationFunctionFromJSONTyped(json, false);
}

export function ConversationEngagementEquationFunctionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationEngagementEquationFunction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'any_page_url_logic': !exists(json, 'any_page_url_logic') ? undefined : json['any_page_url_logic'],
        'any_page_url_value': !exists(json, 'any_page_url_value') ? undefined : json['any_page_url_value'],
        'current_page_url_logic': !exists(json, 'current_page_url_logic') ? undefined : json['current_page_url_logic'],
        'current_page_url_value': !exists(json, 'current_page_url_value') ? undefined : json['current_page_url_value'],
        'customers_browsing_time_logic': !exists(json, 'customers_browsing_time_logic') ? undefined : json['customers_browsing_time_logic'],
        'customers_browsing_time_seconds': !exists(json, 'customers_browsing_time_seconds') ? undefined : json['customers_browsing_time_seconds'],
        'customers_location_country': !exists(json, 'customers_location_country') ? undefined : json['customers_location_country'],
        'customers_location_logic': !exists(json, 'customers_location_logic') ? undefined : json['customers_location_logic'],
        'customers_location_state': !exists(json, 'customers_location_state') ? undefined : json['customers_location_state'],
        'number_of_viewed_pages_logic': !exists(json, 'number_of_viewed_pages_logic') ? undefined : json['number_of_viewed_pages_logic'],
        'number_of_viewed_pages_value': !exists(json, 'number_of_viewed_pages_value') ? undefined : json['number_of_viewed_pages_value'],
        'referring_website_logic': !exists(json, 'referring_website_logic') ? undefined : json['referring_website_logic'],
        'referring_website_value': !exists(json, 'referring_website_value') ? undefined : json['referring_website_value'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function ConversationEngagementEquationFunctionToJSON(value?: ConversationEngagementEquationFunction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'any_page_url_logic': value.any_page_url_logic,
        'any_page_url_value': value.any_page_url_value,
        'current_page_url_logic': value.current_page_url_logic,
        'current_page_url_value': value.current_page_url_value,
        'customers_browsing_time_logic': value.customers_browsing_time_logic,
        'customers_browsing_time_seconds': value.customers_browsing_time_seconds,
        'customers_location_country': value.customers_location_country,
        'customers_location_logic': value.customers_location_logic,
        'customers_location_state': value.customers_location_state,
        'number_of_viewed_pages_logic': value.number_of_viewed_pages_logic,
        'number_of_viewed_pages_value': value.number_of_viewed_pages_value,
        'referring_website_logic': value.referring_website_logic,
        'referring_website_value': value.referring_website_value,
        'type': value.type,
    };
}

