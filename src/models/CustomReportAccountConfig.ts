/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomReportAccountConfig
 */
export interface CustomReportAccountConfig {
    /**
     * 
     * @type {number}
     * @memberof CustomReportAccountConfig
     */
    ai_budget?: number;
    /**
     * Current AI usage creating reports
     * @type {number}
     * @memberof CustomReportAccountConfig
     */
    ai_usage?: number;
    /**
     * Current BigQuery SQL usage running reports
     * @type {string}
     * @memberof CustomReportAccountConfig
     */
    merchant_id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CustomReportAccountConfig
     */
    novice_sql_comments?: boolean;
    /**
     * True if they have opted into custom reports
     * @type {boolean}
     * @memberof CustomReportAccountConfig
     */
    opt_in?: boolean;
    /**
     * User that opted into custom reporting
     * @type {string}
     * @memberof CustomReportAccountConfig
     */
    opt_in_by_user?: string;
    /**
     * Date/time that custom reporting was opted in to
     * @type {string}
     * @memberof CustomReportAccountConfig
     */
    opt_in_date?: string;
    /**
     * 
     * @type {number}
     * @memberof CustomReportAccountConfig
     */
    sql_budget?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomReportAccountConfig
     */
    sql_usage?: number;
}



/**
 * Check if a given object implements the CustomReportAccountConfig interface.
 */
export function instanceOfCustomReportAccountConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomReportAccountConfigFromJSON(json: any): CustomReportAccountConfig {
    return CustomReportAccountConfigFromJSONTyped(json, false);
}

export function CustomReportAccountConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomReportAccountConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ai_budget': !exists(json, 'ai_budget') ? undefined : json['ai_budget'],
        'ai_usage': !exists(json, 'ai_usage') ? undefined : json['ai_usage'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'novice_sql_comments': !exists(json, 'novice_sql_comments') ? undefined : json['novice_sql_comments'],
        'opt_in': !exists(json, 'opt_in') ? undefined : json['opt_in'],
        'opt_in_by_user': !exists(json, 'opt_in_by_user') ? undefined : json['opt_in_by_user'],
        'opt_in_date': !exists(json, 'opt_in_date') ? undefined : json['opt_in_date'],
        'sql_budget': !exists(json, 'sql_budget') ? undefined : json['sql_budget'],
        'sql_usage': !exists(json, 'sql_usage') ? undefined : json['sql_usage'],
    };
}

export function CustomReportAccountConfigToJSON(value?: CustomReportAccountConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ai_budget': value.ai_budget,
        'ai_usage': value.ai_usage,
        'merchant_id': value.merchant_id,
        'novice_sql_comments': value.novice_sql_comments,
        'opt_in': value.opt_in,
        'opt_in_by_user': value.opt_in_by_user,
        'opt_in_date': value.opt_in_date,
        'sql_budget': value.sql_budget,
        'sql_usage': value.sql_usage,
    };
}

