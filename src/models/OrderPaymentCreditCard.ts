/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderPaymentCreditCard
 */
export interface OrderPaymentCreditCard {
    /**
     * Card authorization ticket
     * @type {string}
     * @memberof OrderPaymentCreditCard
     */
    card_auth_ticket?: string;
    /**
     * Card authorization amount
     * @type {number}
     * @memberof OrderPaymentCreditCard
     */
    card_authorization_amount?: number;
    /**
     * Card authorization date/time
     * @type {string}
     * @memberof OrderPaymentCreditCard
     */
    card_authorization_dts?: string;
    /**
     * Card authorization reference number
     * @type {string}
     * @memberof OrderPaymentCreditCard
     */
    card_authorization_reference_number?: string;
    /**
     * Card expiration month (1-12)
     * @type {number}
     * @memberof OrderPaymentCreditCard
     */
    card_expiration_month?: number;
    /**
     * Card expiration year (Four digit year)
     * @type {number}
     * @memberof OrderPaymentCreditCard
     */
    card_expiration_year?: number;
    /**
     * Card number (masked to last 4)
     * @type {string}
     * @memberof OrderPaymentCreditCard
     */
    card_number?: string;
    /**
     * Card number token from hosted fields used to update the card number
     * @type {string}
     * @memberof OrderPaymentCreditCard
     */
    card_number_token?: string;
    /**
     * True if the card has been truncated
     * @type {boolean}
     * @memberof OrderPaymentCreditCard
     */
    card_number_truncated?: boolean;
    /**
     * Card type
     * @type {string}
     * @memberof OrderPaymentCreditCard
     */
    card_type?: OrderPaymentCreditCardCardTypeEnum;
    /**
     * Card verification number token from hosted fields, only for import/insert of new orders, completely ignored for updates, and always null/empty for queries
     * @type {string}
     * @memberof OrderPaymentCreditCard
     */
    card_verification_number_token?: string;
}


/**
 * @export
 */
export const OrderPaymentCreditCardCardTypeEnum = {
    Amex: 'AMEX',
    DinersClub: 'Diners Club',
    Discover: 'Discover',
    Jcb: 'JCB',
    MasterCard: 'MasterCard',
    Visa: 'VISA'
} as const;
export type OrderPaymentCreditCardCardTypeEnum = typeof OrderPaymentCreditCardCardTypeEnum[keyof typeof OrderPaymentCreditCardCardTypeEnum];


export function OrderPaymentCreditCardFromJSON(json: any): OrderPaymentCreditCard {
    return OrderPaymentCreditCardFromJSONTyped(json, false);
}

export function OrderPaymentCreditCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderPaymentCreditCard {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'card_auth_ticket': !exists(json, 'card_auth_ticket') ? undefined : json['card_auth_ticket'],
        'card_authorization_amount': !exists(json, 'card_authorization_amount') ? undefined : json['card_authorization_amount'],
        'card_authorization_dts': !exists(json, 'card_authorization_dts') ? undefined : json['card_authorization_dts'],
        'card_authorization_reference_number': !exists(json, 'card_authorization_reference_number') ? undefined : json['card_authorization_reference_number'],
        'card_expiration_month': !exists(json, 'card_expiration_month') ? undefined : json['card_expiration_month'],
        'card_expiration_year': !exists(json, 'card_expiration_year') ? undefined : json['card_expiration_year'],
        'card_number': !exists(json, 'card_number') ? undefined : json['card_number'],
        'card_number_token': !exists(json, 'card_number_token') ? undefined : json['card_number_token'],
        'card_number_truncated': !exists(json, 'card_number_truncated') ? undefined : json['card_number_truncated'],
        'card_type': !exists(json, 'card_type') ? undefined : json['card_type'],
        'card_verification_number_token': !exists(json, 'card_verification_number_token') ? undefined : json['card_verification_number_token'],
    };
}

export function OrderPaymentCreditCardToJSON(value?: OrderPaymentCreditCard | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'card_auth_ticket': value.card_auth_ticket,
        'card_authorization_amount': value.card_authorization_amount,
        'card_authorization_dts': value.card_authorization_dts,
        'card_authorization_reference_number': value.card_authorization_reference_number,
        'card_expiration_month': value.card_expiration_month,
        'card_expiration_year': value.card_expiration_year,
        'card_number': value.card_number,
        'card_number_token': value.card_number_token,
        'card_number_truncated': value.card_number_truncated,
        'card_type': value.card_type,
        'card_verification_number_token': value.card_verification_number_token,
    };
}

