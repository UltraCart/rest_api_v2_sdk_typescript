/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailCustomer
 */
export interface EmailCustomer {
    /**
     * True if the customer is flagged as active within StoreFront Communications
     * @type {boolean}
     * @memberof EmailCustomer
     */
    active?: boolean;
    /**
     * Email
     * @type {string}
     * @memberof EmailCustomer
     */
    email?: string;
    /**
     * Email customer UUID
     * @type {string}
     * @memberof EmailCustomer
     */
    email_customer_uuid?: string;
    /**
     * First name
     * @type {string}
     * @memberof EmailCustomer
     */
    first_name?: string;
    /**
     * True if the customer has globally unsubscribed from all communication.
     * @type {boolean}
     * @memberof EmailCustomer
     */
    global_unsubscribe?: boolean;
    /**
     * Last interaction
     * @type {string}
     * @memberof EmailCustomer
     */
    last_interaction_dts?: string;
    /**
     * Last name
     * @type {string}
     * @memberof EmailCustomer
     */
    last_name?: string;
    /**
     * UUIDs of the lists they are subscribed to
     * @type {Array<string>}
     * @memberof EmailCustomer
     */
    list_uuids?: Array<string>;
}



/**
 * Check if a given object implements the EmailCustomer interface.
 */
export function instanceOfEmailCustomer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EmailCustomerFromJSON(json: any): EmailCustomer {
    return EmailCustomerFromJSONTyped(json, false);
}

export function EmailCustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailCustomer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': !exists(json, 'active') ? undefined : json['active'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'email_customer_uuid': !exists(json, 'email_customer_uuid') ? undefined : json['email_customer_uuid'],
        'first_name': !exists(json, 'first_name') ? undefined : json['first_name'],
        'global_unsubscribe': !exists(json, 'global_unsubscribe') ? undefined : json['global_unsubscribe'],
        'last_interaction_dts': !exists(json, 'last_interaction_dts') ? undefined : json['last_interaction_dts'],
        'last_name': !exists(json, 'last_name') ? undefined : json['last_name'],
        'list_uuids': !exists(json, 'list_uuids') ? undefined : json['list_uuids'],
    };
}

export function EmailCustomerToJSON(value?: EmailCustomer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'email': value.email,
        'email_customer_uuid': value.email_customer_uuid,
        'first_name': value.first_name,
        'global_unsubscribe': value.global_unsubscribe,
        'last_interaction_dts': value.last_interaction_dts,
        'last_name': value.last_name,
        'list_uuids': value.list_uuids,
    };
}

