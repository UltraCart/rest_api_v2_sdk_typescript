/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderCurrentStageHistory
 */
export interface OrderCurrentStageHistory {
    /**
     * New stage that the order is in.
     * @type {string}
     * @memberof OrderCurrentStageHistory
     */
    after_stage?: OrderCurrentStageHistoryAfterStageEnum;
    /**
     * Previous stage that the order was in.
     * @type {string}
     * @memberof OrderCurrentStageHistory
     */
    before_stage?: OrderCurrentStageHistoryBeforeStageEnum;
    /**
     * Date/time that the stage transitioned
     * @type {string}
     * @memberof OrderCurrentStageHistory
     */
    transition_dts?: string;
}



/**
 * @export
 */
export const OrderCurrentStageHistoryAfterStageEnum = {
    AccountsReceivable: 'Accounts Receivable',
    PendingClearance: 'Pending Clearance',
    FraudReview: 'Fraud Review',
    Rejected: 'Rejected',
    ShippingDepartment: 'Shipping Department',
    CompletedOrder: 'Completed Order',
    QuoteRequest: 'Quote Request',
    QuoteSent: 'Quote Sent',
    LeastCostRouting: 'Least Cost Routing',
    Unknown: 'Unknown',
    PreOrdered: 'Pre-ordered',
    AdvancedOrderRouting: 'Advanced Order Routing',
    Hold: 'Hold'
} as const;
export type OrderCurrentStageHistoryAfterStageEnum = typeof OrderCurrentStageHistoryAfterStageEnum[keyof typeof OrderCurrentStageHistoryAfterStageEnum];

/**
 * @export
 */
export const OrderCurrentStageHistoryBeforeStageEnum = {
    AccountsReceivable: 'Accounts Receivable',
    PendingClearance: 'Pending Clearance',
    FraudReview: 'Fraud Review',
    Rejected: 'Rejected',
    ShippingDepartment: 'Shipping Department',
    CompletedOrder: 'Completed Order',
    QuoteRequest: 'Quote Request',
    QuoteSent: 'Quote Sent',
    LeastCostRouting: 'Least Cost Routing',
    Unknown: 'Unknown',
    PreOrdered: 'Pre-ordered',
    AdvancedOrderRouting: 'Advanced Order Routing',
    Hold: 'Hold'
} as const;
export type OrderCurrentStageHistoryBeforeStageEnum = typeof OrderCurrentStageHistoryBeforeStageEnum[keyof typeof OrderCurrentStageHistoryBeforeStageEnum];


/**
 * Check if a given object implements the OrderCurrentStageHistory interface.
 */
export function instanceOfOrderCurrentStageHistory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderCurrentStageHistoryFromJSON(json: any): OrderCurrentStageHistory {
    return OrderCurrentStageHistoryFromJSONTyped(json, false);
}

export function OrderCurrentStageHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderCurrentStageHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'after_stage': !exists(json, 'after_stage') ? undefined : json['after_stage'],
        'before_stage': !exists(json, 'before_stage') ? undefined : json['before_stage'],
        'transition_dts': !exists(json, 'transition_dts') ? undefined : json['transition_dts'],
    };
}

export function OrderCurrentStageHistoryToJSON(value?: OrderCurrentStageHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'after_stage': value.after_stage,
        'before_stage': value.before_stage,
        'transition_dts': value.transition_dts,
    };
}

