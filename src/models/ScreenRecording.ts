/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GeoPoint,
    GeoPointFromJSON,
    GeoPointFromJSONTyped,
    GeoPointToJSON,
} from './GeoPoint';
import {
    ScreenRecordingAdPlatform,
    ScreenRecordingAdPlatformFromJSON,
    ScreenRecordingAdPlatformFromJSONTyped,
    ScreenRecordingAdPlatformToJSON,
} from './ScreenRecordingAdPlatform';
import {
    ScreenRecordingPageView,
    ScreenRecordingPageViewFromJSON,
    ScreenRecordingPageViewFromJSONTyped,
    ScreenRecordingPageViewToJSON,
} from './ScreenRecordingPageView';
import {
    ScreenRecordingStoreFront,
    ScreenRecordingStoreFrontFromJSON,
    ScreenRecordingStoreFrontFromJSONTyped,
    ScreenRecordingStoreFrontToJSON,
} from './ScreenRecordingStoreFront';
import {
    ScreenRecordingUserAgent,
    ScreenRecordingUserAgentFromJSON,
    ScreenRecordingUserAgentFromJSONTyped,
    ScreenRecordingUserAgentToJSON,
} from './ScreenRecordingUserAgent';
import {
    ScreenRecordingUserProperty,
    ScreenRecordingUserPropertyFromJSON,
    ScreenRecordingUserPropertyFromJSONTyped,
    ScreenRecordingUserPropertyToJSON,
} from './ScreenRecordingUserProperty';

/**
 * 
 * @export
 * @interface ScreenRecording
 */
export interface ScreenRecording {
    /**
     * 
     * @type {ScreenRecordingAdPlatform}
     * @memberof ScreenRecording
     */
    ad_platform?: ScreenRecordingAdPlatform;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    analytics_client_oid?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    analytics_session_dts?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    analytics_session_oid?: number;
    /**
     * Campaign Name
     * @type {string}
     * @memberof ScreenRecording
     */
    communications_campaign_name?: string;
    /**
     * Campaign UUID
     * @type {string}
     * @memberof ScreenRecording
     */
    communications_campaign_uuid?: string;
    /**
     * Email subject
     * @type {string}
     * @memberof ScreenRecording
     */
    communications_email_subject?: string;
    /**
     * Email UUID
     * @type {string}
     * @memberof ScreenRecording
     */
    communications_email_uuid?: string;
    /**
     * Flow Name
     * @type {string}
     * @memberof ScreenRecording
     */
    communications_flow_name?: string;
    /**
     * Flow UUID
     * @type {string}
     * @memberof ScreenRecording
     */
    communications_flow_uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    email_domain?: string;
    /**
     * Ending timestamp
     * @type {string}
     * @memberof ScreenRecording
     */
    end_timestamp?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    esp_customer_uuid?: string;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    events_gz_size?: number;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    events_json_key?: string;
    /**
     * True if the user calling the API has favorited this particular screen recording.
     * @type {boolean}
     * @memberof ScreenRecording
     */
    favorite?: boolean;
    /**
     * Array of user ids that favorited this particular screen recording.
     * @type {Array<number>}
     * @memberof ScreenRecording
     */
    favorites?: Array<number>;
    /**
     * 
     * @type {GeoPoint}
     * @memberof ScreenRecording
     */
    geolocation?: GeoPoint;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    geolocation_country?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    geolocation_state?: string;
    /**
     * Language ISO code
     * @type {string}
     * @memberof ScreenRecording
     */
    language_iso_code?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    merchant_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    merchant_notes?: string;
    /**
     * True if external page view was not tracked
     * @type {boolean}
     * @memberof ScreenRecording
     */
    missing_external_tracking?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    order_id?: string;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    page_view_count?: number;
    /**
     * 
     * @type {Array<ScreenRecordingPageView>}
     * @memberof ScreenRecording
     */
    page_views?: Array<ScreenRecordingPageView>;
    /**
     * ISO 3 Letter language code that the customer would prefer
     * @type {string}
     * @memberof ScreenRecording
     */
    preferred_language?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    referrer_domain?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    rrweb_version?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    screen_recording_uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    signed_download_url?: string;
    /**
     * Starting timestamp
     * @type {string}
     * @memberof ScreenRecording
     */
    start_timestamp?: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof ScreenRecording
     */
    storefront_oids?: Array<number>;
    /**
     * 
     * @type {Array<ScreenRecordingStoreFront>}
     * @memberof ScreenRecording
     */
    storefronts?: Array<ScreenRecordingStoreFront>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ScreenRecording
     */
    tags?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    time_on_site?: number;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    ucacid?: string;
    /**
     * 
     * @type {ScreenRecordingUserAgent}
     * @memberof ScreenRecording
     */
    user_agent?: ScreenRecordingUserAgent;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    user_agent_raw?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecording
     */
    user_ip?: string;
    /**
     * 
     * @type {Array<ScreenRecordingUserProperty>}
     * @memberof ScreenRecording
     */
    user_properties?: Array<ScreenRecordingUserProperty>;
    /**
     * UTM Campaign
     * @type {string}
     * @memberof ScreenRecording
     */
    utm_campaign?: string;
    /**
     * UTM Source
     * @type {string}
     * @memberof ScreenRecording
     */
    utm_source?: string;
    /**
     * Timestamp this visitor was first seen
     * @type {string}
     * @memberof ScreenRecording
     */
    visitor_first_seen?: string;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    visitor_number?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ScreenRecording
     */
    watched?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    window_height?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecording
     */
    window_width?: number;
}



/**
 * Check if a given object implements the ScreenRecording interface.
 */
export function instanceOfScreenRecording(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScreenRecordingFromJSON(json: any): ScreenRecording {
    return ScreenRecordingFromJSONTyped(json, false);
}

export function ScreenRecordingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenRecording {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ad_platform': !exists(json, 'ad_platform') ? undefined : ScreenRecordingAdPlatformFromJSON(json['ad_platform']),
        'analytics_client_oid': !exists(json, 'analytics_client_oid') ? undefined : json['analytics_client_oid'],
        'analytics_session_dts': !exists(json, 'analytics_session_dts') ? undefined : json['analytics_session_dts'],
        'analytics_session_oid': !exists(json, 'analytics_session_oid') ? undefined : json['analytics_session_oid'],
        'communications_campaign_name': !exists(json, 'communications_campaign_name') ? undefined : json['communications_campaign_name'],
        'communications_campaign_uuid': !exists(json, 'communications_campaign_uuid') ? undefined : json['communications_campaign_uuid'],
        'communications_email_subject': !exists(json, 'communications_email_subject') ? undefined : json['communications_email_subject'],
        'communications_email_uuid': !exists(json, 'communications_email_uuid') ? undefined : json['communications_email_uuid'],
        'communications_flow_name': !exists(json, 'communications_flow_name') ? undefined : json['communications_flow_name'],
        'communications_flow_uuid': !exists(json, 'communications_flow_uuid') ? undefined : json['communications_flow_uuid'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'email_domain': !exists(json, 'email_domain') ? undefined : json['email_domain'],
        'end_timestamp': !exists(json, 'end_timestamp') ? undefined : json['end_timestamp'],
        'esp_customer_uuid': !exists(json, 'esp_customer_uuid') ? undefined : json['esp_customer_uuid'],
        'events_gz_size': !exists(json, 'events_gz_size') ? undefined : json['events_gz_size'],
        'events_json_key': !exists(json, 'events_json_key') ? undefined : json['events_json_key'],
        'favorite': !exists(json, 'favorite') ? undefined : json['favorite'],
        'favorites': !exists(json, 'favorites') ? undefined : json['favorites'],
        'geolocation': !exists(json, 'geolocation') ? undefined : GeoPointFromJSON(json['geolocation']),
        'geolocation_country': !exists(json, 'geolocation_country') ? undefined : json['geolocation_country'],
        'geolocation_state': !exists(json, 'geolocation_state') ? undefined : json['geolocation_state'],
        'language_iso_code': !exists(json, 'language_iso_code') ? undefined : json['language_iso_code'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'merchant_notes': !exists(json, 'merchant_notes') ? undefined : json['merchant_notes'],
        'missing_external_tracking': !exists(json, 'missing_external_tracking') ? undefined : json['missing_external_tracking'],
        'order_id': !exists(json, 'order_id') ? undefined : json['order_id'],
        'page_view_count': !exists(json, 'page_view_count') ? undefined : json['page_view_count'],
        'page_views': !exists(json, 'page_views') ? undefined : ((json['page_views'] as Array<any>).map(ScreenRecordingPageViewFromJSON)),
        'preferred_language': !exists(json, 'preferred_language') ? undefined : json['preferred_language'],
        'referrer_domain': !exists(json, 'referrer_domain') ? undefined : json['referrer_domain'],
        'rrweb_version': !exists(json, 'rrweb_version') ? undefined : json['rrweb_version'],
        'screen_recording_uuid': !exists(json, 'screen_recording_uuid') ? undefined : json['screen_recording_uuid'],
        'signed_download_url': !exists(json, 'signed_download_url') ? undefined : json['signed_download_url'],
        'start_timestamp': !exists(json, 'start_timestamp') ? undefined : json['start_timestamp'],
        'storefront_oids': !exists(json, 'storefront_oids') ? undefined : json['storefront_oids'],
        'storefronts': !exists(json, 'storefronts') ? undefined : ((json['storefronts'] as Array<any>).map(ScreenRecordingStoreFrontFromJSON)),
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'time_on_site': !exists(json, 'time_on_site') ? undefined : json['time_on_site'],
        'ucacid': !exists(json, 'ucacid') ? undefined : json['ucacid'],
        'user_agent': !exists(json, 'user_agent') ? undefined : ScreenRecordingUserAgentFromJSON(json['user_agent']),
        'user_agent_raw': !exists(json, 'user_agent_raw') ? undefined : json['user_agent_raw'],
        'user_ip': !exists(json, 'user_ip') ? undefined : json['user_ip'],
        'user_properties': !exists(json, 'user_properties') ? undefined : ((json['user_properties'] as Array<any>).map(ScreenRecordingUserPropertyFromJSON)),
        'utm_campaign': !exists(json, 'utm_campaign') ? undefined : json['utm_campaign'],
        'utm_source': !exists(json, 'utm_source') ? undefined : json['utm_source'],
        'visitor_first_seen': !exists(json, 'visitor_first_seen') ? undefined : json['visitor_first_seen'],
        'visitor_number': !exists(json, 'visitor_number') ? undefined : json['visitor_number'],
        'watched': !exists(json, 'watched') ? undefined : json['watched'],
        'window_height': !exists(json, 'window_height') ? undefined : json['window_height'],
        'window_width': !exists(json, 'window_width') ? undefined : json['window_width'],
    };
}

export function ScreenRecordingToJSON(value?: ScreenRecording | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ad_platform': ScreenRecordingAdPlatformToJSON(value.ad_platform),
        'analytics_client_oid': value.analytics_client_oid,
        'analytics_session_dts': value.analytics_session_dts,
        'analytics_session_oid': value.analytics_session_oid,
        'communications_campaign_name': value.communications_campaign_name,
        'communications_campaign_uuid': value.communications_campaign_uuid,
        'communications_email_subject': value.communications_email_subject,
        'communications_email_uuid': value.communications_email_uuid,
        'communications_flow_name': value.communications_flow_name,
        'communications_flow_uuid': value.communications_flow_uuid,
        'email': value.email,
        'email_domain': value.email_domain,
        'end_timestamp': value.end_timestamp,
        'esp_customer_uuid': value.esp_customer_uuid,
        'events_gz_size': value.events_gz_size,
        'events_json_key': value.events_json_key,
        'favorite': value.favorite,
        'favorites': value.favorites,
        'geolocation': GeoPointToJSON(value.geolocation),
        'geolocation_country': value.geolocation_country,
        'geolocation_state': value.geolocation_state,
        'language_iso_code': value.language_iso_code,
        'merchant_id': value.merchant_id,
        'merchant_notes': value.merchant_notes,
        'missing_external_tracking': value.missing_external_tracking,
        'order_id': value.order_id,
        'page_view_count': value.page_view_count,
        'page_views': value.page_views === undefined ? undefined : ((value.page_views as Array<any>).map(ScreenRecordingPageViewToJSON)),
        'preferred_language': value.preferred_language,
        'referrer_domain': value.referrer_domain,
        'rrweb_version': value.rrweb_version,
        'screen_recording_uuid': value.screen_recording_uuid,
        'signed_download_url': value.signed_download_url,
        'start_timestamp': value.start_timestamp,
        'storefront_oids': value.storefront_oids,
        'storefronts': value.storefronts === undefined ? undefined : ((value.storefronts as Array<any>).map(ScreenRecordingStoreFrontToJSON)),
        'tags': value.tags,
        'time_on_site': value.time_on_site,
        'ucacid': value.ucacid,
        'user_agent': ScreenRecordingUserAgentToJSON(value.user_agent),
        'user_agent_raw': value.user_agent_raw,
        'user_ip': value.user_ip,
        'user_properties': value.user_properties === undefined ? undefined : ((value.user_properties as Array<any>).map(ScreenRecordingUserPropertyToJSON)),
        'utm_campaign': value.utm_campaign,
        'utm_source': value.utm_source,
        'visitor_first_seen': value.visitor_first_seen,
        'visitor_number': value.visitor_number,
        'watched': value.watched,
        'window_height': value.window_height,
        'window_width': value.window_width,
    };
}

