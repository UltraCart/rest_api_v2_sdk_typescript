/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConversationVirtualAgentCapabilityZohoDeskDepartment,
    ConversationVirtualAgentCapabilityZohoDeskDepartmentFromJSON,
    ConversationVirtualAgentCapabilityZohoDeskDepartmentFromJSONTyped,
    ConversationVirtualAgentCapabilityZohoDeskDepartmentToJSON,
} from './ConversationVirtualAgentCapabilityZohoDeskDepartment';

/**
 * 
 * @export
 * @interface ConversationVirtualAgentCapabilities
 */
export interface ConversationVirtualAgentCapabilities {
    /**
     * Permission flag to allow this Agent access to the storefront and item information.
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    access_storefront_and_item?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    cancel_subscription?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    delay_subscription?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    lookup_order_information?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    lookup_subscription_information?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    open_support_ticket?: boolean;
    /**
     * Channel to use to open the support ticket
     * @type {string}
     * @memberof ConversationVirtualAgentCapabilities
     */
    open_support_ticket_channel?: ConversationVirtualAgentCapabilitiesOpenSupportTicketChannelEnum;
    /**
     * Email to send support ticket to
     * @type {string}
     * @memberof ConversationVirtualAgentCapabilities
     */
    open_support_ticket_channel_email?: string;
    /**
     * Department ID to open a Zoho Desk ticket for
     * @type {string}
     * @memberof ConversationVirtualAgentCapabilities
     */
    open_support_ticket_zoho_desk_department_id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    pause_subscription?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    resume_subscription?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    transfer_chat_to_live_agent?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    update_subscription_credit_card?: boolean;
    /**
     * True if Zoho Desk is connected to UltraCart
     * @type {boolean}
     * @memberof ConversationVirtualAgentCapabilities
     */
    zoho_desk_available?: boolean;
    /**
     * Array of Zoho Desk Department if zoho desk is connected to UltraCart
     * @type {Array<ConversationVirtualAgentCapabilityZohoDeskDepartment>}
     * @memberof ConversationVirtualAgentCapabilities
     */
    zoho_desk_departments?: Array<ConversationVirtualAgentCapabilityZohoDeskDepartment>;
}



/**
 * @export
 */
export const ConversationVirtualAgentCapabilitiesOpenSupportTicketChannelEnum = {
    None: 'none',
    Email: 'email',
    UltracartTask: 'ultracart_task',
    ZohoDeskTicket: 'zoho_desk_ticket'
} as const;
export type ConversationVirtualAgentCapabilitiesOpenSupportTicketChannelEnum = typeof ConversationVirtualAgentCapabilitiesOpenSupportTicketChannelEnum[keyof typeof ConversationVirtualAgentCapabilitiesOpenSupportTicketChannelEnum];


/**
 * Check if a given object implements the ConversationVirtualAgentCapabilities interface.
 */
export function instanceOfConversationVirtualAgentCapabilities(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationVirtualAgentCapabilitiesFromJSON(json: any): ConversationVirtualAgentCapabilities {
    return ConversationVirtualAgentCapabilitiesFromJSONTyped(json, false);
}

export function ConversationVirtualAgentCapabilitiesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationVirtualAgentCapabilities {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'access_storefront_and_item': !exists(json, 'access_storefront_and_item') ? undefined : json['access_storefront_and_item'],
        'cancel_subscription': !exists(json, 'cancel_subscription') ? undefined : json['cancel_subscription'],
        'delay_subscription': !exists(json, 'delay_subscription') ? undefined : json['delay_subscription'],
        'lookup_order_information': !exists(json, 'lookup_order_information') ? undefined : json['lookup_order_information'],
        'lookup_subscription_information': !exists(json, 'lookup_subscription_information') ? undefined : json['lookup_subscription_information'],
        'open_support_ticket': !exists(json, 'open_support_ticket') ? undefined : json['open_support_ticket'],
        'open_support_ticket_channel': !exists(json, 'open_support_ticket_channel') ? undefined : json['open_support_ticket_channel'],
        'open_support_ticket_channel_email': !exists(json, 'open_support_ticket_channel_email') ? undefined : json['open_support_ticket_channel_email'],
        'open_support_ticket_zoho_desk_department_id': !exists(json, 'open_support_ticket_zoho_desk_department_id') ? undefined : json['open_support_ticket_zoho_desk_department_id'],
        'pause_subscription': !exists(json, 'pause_subscription') ? undefined : json['pause_subscription'],
        'resume_subscription': !exists(json, 'resume_subscription') ? undefined : json['resume_subscription'],
        'transfer_chat_to_live_agent': !exists(json, 'transfer_chat_to_live_agent') ? undefined : json['transfer_chat_to_live_agent'],
        'update_subscription_credit_card': !exists(json, 'update_subscription_credit_card') ? undefined : json['update_subscription_credit_card'],
        'zoho_desk_available': !exists(json, 'zoho_desk_available') ? undefined : json['zoho_desk_available'],
        'zoho_desk_departments': !exists(json, 'zoho_desk_departments') ? undefined : ((json['zoho_desk_departments'] as Array<any>).map(ConversationVirtualAgentCapabilityZohoDeskDepartmentFromJSON)),
    };
}

export function ConversationVirtualAgentCapabilitiesToJSON(value?: ConversationVirtualAgentCapabilities | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'access_storefront_and_item': value.access_storefront_and_item,
        'cancel_subscription': value.cancel_subscription,
        'delay_subscription': value.delay_subscription,
        'lookup_order_information': value.lookup_order_information,
        'lookup_subscription_information': value.lookup_subscription_information,
        'open_support_ticket': value.open_support_ticket,
        'open_support_ticket_channel': value.open_support_ticket_channel,
        'open_support_ticket_channel_email': value.open_support_ticket_channel_email,
        'open_support_ticket_zoho_desk_department_id': value.open_support_ticket_zoho_desk_department_id,
        'pause_subscription': value.pause_subscription,
        'resume_subscription': value.resume_subscription,
        'transfer_chat_to_live_agent': value.transfer_chat_to_live_agent,
        'update_subscription_credit_card': value.update_subscription_credit_card,
        'zoho_desk_available': value.zoho_desk_available,
        'zoho_desk_departments': value.zoho_desk_departments === undefined ? undefined : ((value.zoho_desk_departments as Array<any>).map(ConversationVirtualAgentCapabilityZohoDeskDepartmentToJSON)),
    };
}

