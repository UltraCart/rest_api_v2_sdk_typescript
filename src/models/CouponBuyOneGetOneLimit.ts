/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CouponBuyOneGetOneLimit
 */
export interface CouponBuyOneGetOneLimit {
    /**
     * An optional list of item tags which will receive a discount.
     * @type {Array<string>}
     * @memberof CouponBuyOneGetOneLimit
     */
    item_tags?: Array<string>;
    /**
     * An optional list of items of which one must be purchased to receive free quantity of the same item.
     * @type {Array<string>}
     * @memberof CouponBuyOneGetOneLimit
     */
    items?: Array<string>;
    /**
     * The limit of free items that may be received when purchasing multiple items
     * @type {number}
     * @memberof CouponBuyOneGetOneLimit
     */
    limit?: number;
}



/**
 * Check if a given object implements the CouponBuyOneGetOneLimit interface.
 */
export function instanceOfCouponBuyOneGetOneLimit(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CouponBuyOneGetOneLimitFromJSON(json: any): CouponBuyOneGetOneLimit {
    return CouponBuyOneGetOneLimitFromJSONTyped(json, false);
}

export function CouponBuyOneGetOneLimitFromJSONTyped(json: any, ignoreDiscriminator: boolean): CouponBuyOneGetOneLimit {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'item_tags': !exists(json, 'item_tags') ? undefined : json['item_tags'],
        'items': !exists(json, 'items') ? undefined : json['items'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
    };
}

export function CouponBuyOneGetOneLimitToJSON(value?: CouponBuyOneGetOneLimit | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'item_tags': value.item_tags,
        'items': value.items,
        'limit': value.limit,
    };
}

