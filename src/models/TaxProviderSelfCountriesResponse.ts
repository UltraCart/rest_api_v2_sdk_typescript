/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TaxCountryCode,
    TaxCountryCodeFromJSON,
    TaxCountryCodeFromJSONTyped,
    TaxCountryCodeToJSON,
} from './TaxCountryCode';

/**
 * 
 * @export
 * @interface TaxProviderSelfCountriesResponse
 */
export interface TaxProviderSelfCountriesResponse {
    /**
     * countries
     * @type {Array<TaxCountryCode>}
     * @memberof TaxProviderSelfCountriesResponse
     */
    countries?: Array<TaxCountryCode>;
}



/**
 * Check if a given object implements the TaxProviderSelfCountriesResponse interface.
 */
export function instanceOfTaxProviderSelfCountriesResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaxProviderSelfCountriesResponseFromJSON(json: any): TaxProviderSelfCountriesResponse {
    return TaxProviderSelfCountriesResponseFromJSONTyped(json, false);
}

export function TaxProviderSelfCountriesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxProviderSelfCountriesResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countries': !exists(json, 'countries') ? undefined : ((json['countries'] as Array<any>).map(TaxCountryCodeFromJSON)),
    };
}

export function TaxProviderSelfCountriesResponseToJSON(value?: TaxProviderSelfCountriesResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countries': value.countries === undefined ? undefined : ((value.countries as Array<any>).map(TaxCountryCodeToJSON)),
    };
}

