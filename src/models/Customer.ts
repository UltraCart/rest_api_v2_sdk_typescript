/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomerActivity,
    CustomerActivityFromJSON,
    CustomerActivityFromJSONTyped,
    CustomerActivityToJSON,
} from './CustomerActivity';
import {
    CustomerAttachment,
    CustomerAttachmentFromJSON,
    CustomerAttachmentFromJSONTyped,
    CustomerAttachmentToJSON,
} from './CustomerAttachment';
import {
    CustomerBilling,
    CustomerBillingFromJSON,
    CustomerBillingFromJSONTyped,
    CustomerBillingToJSON,
} from './CustomerBilling';
import {
    CustomerCard,
    CustomerCardFromJSON,
    CustomerCardFromJSONTyped,
    CustomerCardToJSON,
} from './CustomerCard';
import {
    CustomerEDI,
    CustomerEDIFromJSON,
    CustomerEDIFromJSONTyped,
    CustomerEDIToJSON,
} from './CustomerEDI';
import {
    CustomerEmail,
    CustomerEmailFromJSON,
    CustomerEmailFromJSONTyped,
    CustomerEmailToJSON,
} from './CustomerEmail';
import {
    CustomerLoyalty,
    CustomerLoyaltyFromJSON,
    CustomerLoyaltyFromJSONTyped,
    CustomerLoyaltyToJSON,
} from './CustomerLoyalty';
import {
    CustomerOrdersSummary,
    CustomerOrdersSummaryFromJSON,
    CustomerOrdersSummaryFromJSONTyped,
    CustomerOrdersSummaryToJSON,
} from './CustomerOrdersSummary';
import {
    CustomerPricingTier,
    CustomerPricingTierFromJSON,
    CustomerPricingTierFromJSONTyped,
    CustomerPricingTierToJSON,
} from './CustomerPricingTier';
import {
    CustomerPrivacy,
    CustomerPrivacyFromJSON,
    CustomerPrivacyFromJSONTyped,
    CustomerPrivacyToJSON,
} from './CustomerPrivacy';
import {
    CustomerProperty,
    CustomerPropertyFromJSON,
    CustomerPropertyFromJSONTyped,
    CustomerPropertyToJSON,
} from './CustomerProperty';
import {
    CustomerQuotesSummary,
    CustomerQuotesSummaryFromJSON,
    CustomerQuotesSummaryFromJSONTyped,
    CustomerQuotesSummaryToJSON,
} from './CustomerQuotesSummary';
import {
    CustomerReviewer,
    CustomerReviewerFromJSON,
    CustomerReviewerFromJSONTyped,
    CustomerReviewerToJSON,
} from './CustomerReviewer';
import {
    CustomerShipping,
    CustomerShippingFromJSON,
    CustomerShippingFromJSONTyped,
    CustomerShippingToJSON,
} from './CustomerShipping';
import {
    CustomerSoftwareEntitlement,
    CustomerSoftwareEntitlementFromJSON,
    CustomerSoftwareEntitlementFromJSONTyped,
    CustomerSoftwareEntitlementToJSON,
} from './CustomerSoftwareEntitlement';
import {
    CustomerTag,
    CustomerTagFromJSON,
    CustomerTagFromJSONTyped,
    CustomerTagToJSON,
} from './CustomerTag';
import {
    CustomerTaxCodes,
    CustomerTaxCodesFromJSON,
    CustomerTaxCodesFromJSONTyped,
    CustomerTaxCodesToJSON,
} from './CustomerTaxCodes';
import {
    Order,
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
} from './Order';

/**
 * 
 * @export
 * @interface Customer
 */
export interface Customer {
    /**
     * 
     * @type {CustomerActivity}
     * @memberof Customer
     */
    activity?: CustomerActivity;
    /**
     * Affiliate oid
     * @type {number}
     * @memberof Customer
     */
    affiliate_oid?: number;
    /**
     * Allow 3rd party billing
     * @type {boolean}
     * @memberof Customer
     */
    allow_3rd_party_billing?: boolean;
    /**
     * Allow COD
     * @type {boolean}
     * @memberof Customer
     */
    allow_cod?: boolean;
    /**
     * Allow Drop Shipping
     * @type {boolean}
     * @memberof Customer
     */
    allow_drop_shipping?: boolean;
    /**
     * Allow purchase orders by this customer
     * @type {boolean}
     * @memberof Customer
     */
    allow_purchase_order?: boolean;
    /**
     * Allow quote request
     * @type {boolean}
     * @memberof Customer
     */
    allow_quote_request?: boolean;
    /**
     * Allow selection of residential or business address type
     * @type {boolean}
     * @memberof Customer
     */
    allow_selection_of_address_type?: boolean;
    /**
     * Attachments
     * @type {Array<CustomerAttachment>}
     * @memberof Customer
     */
    attachments?: Array<CustomerAttachment>;
    /**
     * Auto approve COD
     * @type {boolean}
     * @memberof Customer
     */
    auto_approve_cod?: boolean;
    /**
     * Auto approve purchase orders by this customer
     * @type {boolean}
     * @memberof Customer
     */
    auto_approve_purchase_order?: boolean;
    /**
     * Automatic merchant notes are added to every order placed
     * @type {string}
     * @memberof Customer
     */
    automatic_merchant_notes?: string;
    /**
     * Billing addresses for this customer
     * @type {Array<CustomerBilling>}
     * @memberof Customer
     */
    billing?: Array<CustomerBilling>;
    /**
     * Business notes (internally visible only)
     * @type {string}
     * @memberof Customer
     */
    business_notes?: string;
    /**
     * Credit Cards for this customer
     * @type {Array<CustomerCard>}
     * @memberof Customer
     */
    cards?: Array<CustomerCard>;
    /**
     * Additional emails to CC notification
     * @type {Array<CustomerEmail>}
     * @memberof Customer
     */
    cc_emails?: Array<CustomerEmail>;
    /**
     * Customer profile object identifier
     * @type {number}
     * @memberof Customer
     */
    customer_profile_oid?: number;
    /**
     * DHL account number
     * @type {string}
     * @memberof Customer
     */
    dhl_account_number?: string;
    /**
     * DHL duty account number
     * @type {string}
     * @memberof Customer
     */
    dhl_duty_account_number?: string;
    /**
     * Do not send mail (null will not update)
     * @type {boolean}
     * @memberof Customer
     */
    do_not_send_mail?: boolean;
    /**
     * 
     * @type {CustomerEDI}
     * @memberof Customer
     */
    edi?: CustomerEDI;
    /**
     * Email address of this customer profile
     * @type {string}
     * @memberof Customer
     */
    email?: string;
    /**
     * Exempt shipping handling charge
     * @type {boolean}
     * @memberof Customer
     */
    exempt_shipping_handling_charge?: boolean;
    /**
     * FedEx account number
     * @type {string}
     * @memberof Customer
     */
    fedex_account_number?: string;
    /**
     * This customer always receives free shipping
     * @type {boolean}
     * @memberof Customer
     */
    free_shipping?: boolean;
    /**
     * If free_shipping is true, this is the minimum subtotal required for free shipping
     * @type {number}
     * @memberof Customer
     */
    free_shipping_minimum?: number;
    /**
     * Last modified by
     * @type {string}
     * @memberof Customer
     */
    last_modified_by?: string;
    /**
     * Last modified date
     * @type {string}
     * @memberof Customer
     */
    last_modified_dts?: string;
    /**
     * 
     * @type {CustomerLoyalty}
     * @memberof Customer
     */
    loyalty?: CustomerLoyalty;
    /**
     * Maximum item count
     * @type {number}
     * @memberof Customer
     */
    maximum_item_count?: number;
    /**
     * Merchant ID
     * @type {string}
     * @memberof Customer
     */
    merchant_id?: string;
    /**
     * Minimum item count
     * @type {number}
     * @memberof Customer
     */
    minimum_item_count?: number;
    /**
     * Minimum subtotal
     * @type {number}
     * @memberof Customer
     */
    minimum_subtotal?: number;
    /**
     * No coupons
     * @type {boolean}
     * @memberof Customer
     */
    no_coupons?: boolean;
    /**
     * No free shipping regardless of coupons or item level settings
     * @type {boolean}
     * @memberof Customer
     */
    no_free_shipping?: boolean;
    /**
     * No realtime charge
     * @type {boolean}
     * @memberof Customer
     */
    no_realtime_charge?: boolean;
    /**
     * Orders associated with this customer profile
     * @type {Array<Order>}
     * @memberof Customer
     */
    orders?: Array<Order>;
    /**
     * 
     * @type {CustomerOrdersSummary}
     * @memberof Customer
     */
    orders_summary?: CustomerOrdersSummary;
    /**
     * Password (may only be set, never read)
     * @type {string}
     * @memberof Customer
     */
    password?: string;
    /**
     * Pricing tiers for this customer
     * @type {Array<CustomerPricingTier>}
     * @memberof Customer
     */
    pricing_tiers?: Array<CustomerPricingTier>;
    /**
     * 
     * @type {CustomerPrivacy}
     * @memberof Customer
     */
    privacy?: CustomerPrivacy;
    /**
     * Properties for this customer
     * @type {Array<CustomerProperty>}
     * @memberof Customer
     */
    properties?: Array<CustomerProperty>;
    /**
     * QuickBooks class to import this customer as
     * @type {string}
     * @memberof Customer
     */
    qb_class?: string;
    /**
     * QuickBooks name to import this customer as
     * @type {string}
     * @memberof Customer
     */
    qb_code?: string;
    /**
     * QuickBooks tax exemption reason code
     * @type {number}
     * @memberof Customer
     */
    qb_tax_exemption_reason_code?: number;
    /**
     * Quotes associated with this customer profile
     * @type {Array<Order>}
     * @memberof Customer
     */
    quotes?: Array<Order>;
    /**
     * 
     * @type {CustomerQuotesSummary}
     * @memberof Customer
     */
    quotes_summary?: CustomerQuotesSummary;
    /**
     * Referral Source
     * @type {string}
     * @memberof Customer
     */
    referral_source?: string;
    /**
     * 
     * @type {CustomerReviewer}
     * @memberof Customer
     */
    reviewer?: CustomerReviewer;
    /**
     * Sales rep code
     * @type {string}
     * @memberof Customer
     */
    sales_rep_code?: string;
    /**
     * Send signup notification, if true during customer creation, will send a notification.
     * @type {boolean}
     * @memberof Customer
     */
    send_signup_notification?: boolean;
    /**
     * Shipping addresses for this customer
     * @type {Array<CustomerShipping>}
     * @memberof Customer
     */
    shipping?: Array<CustomerShipping>;
    /**
     * Signup date
     * @type {string}
     * @memberof Customer
     */
    signup_dts?: string;
    /**
     * Software entitlements owned by this customer
     * @type {Array<CustomerSoftwareEntitlement>}
     * @memberof Customer
     */
    software_entitlements?: Array<CustomerSoftwareEntitlement>;
    /**
     * Suppress buySAFE (deprecated)
     * @type {boolean}
     * @memberof Customer
     */
    suppress_buysafe?: boolean;
    /**
     * Tags for this customer
     * @type {Array<CustomerTag>}
     * @memberof Customer
     */
    tags?: Array<CustomerTag>;
    /**
     * 
     * @type {CustomerTaxCodes}
     * @memberof Customer
     */
    tax_codes?: CustomerTaxCodes;
    /**
     * True if the customer is tax exempt
     * @type {boolean}
     * @memberof Customer
     */
    tax_exempt?: boolean;
    /**
     * Tax ID
     * @type {string}
     * @memberof Customer
     */
    tax_id?: string;
    /**
     * Terms for this customer
     * @type {string}
     * @memberof Customer
     */
    terms?: string;
    /**
     * True if the customer should be tracked separately in QuickBooks
     * @type {boolean}
     * @memberof Customer
     */
    track_separately?: boolean;
    /**
     * Unapproved
     * @type {boolean}
     * @memberof Customer
     */
    unapproved?: boolean;
    /**
     * UPS account number
     * @type {string}
     * @memberof Customer
     */
    ups_account_number?: string;
    /**
     * Website url
     * @type {string}
     * @memberof Customer
     */
    website_url?: string;
}



/**
 * Check if a given object implements the Customer interface.
 */
export function instanceOfCustomer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerFromJSON(json: any): Customer {
    return CustomerFromJSONTyped(json, false);
}

export function CustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Customer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activity': !exists(json, 'activity') ? undefined : CustomerActivityFromJSON(json['activity']),
        'affiliate_oid': !exists(json, 'affiliate_oid') ? undefined : json['affiliate_oid'],
        'allow_3rd_party_billing': !exists(json, 'allow_3rd_party_billing') ? undefined : json['allow_3rd_party_billing'],
        'allow_cod': !exists(json, 'allow_cod') ? undefined : json['allow_cod'],
        'allow_drop_shipping': !exists(json, 'allow_drop_shipping') ? undefined : json['allow_drop_shipping'],
        'allow_purchase_order': !exists(json, 'allow_purchase_order') ? undefined : json['allow_purchase_order'],
        'allow_quote_request': !exists(json, 'allow_quote_request') ? undefined : json['allow_quote_request'],
        'allow_selection_of_address_type': !exists(json, 'allow_selection_of_address_type') ? undefined : json['allow_selection_of_address_type'],
        'attachments': !exists(json, 'attachments') ? undefined : ((json['attachments'] as Array<any>).map(CustomerAttachmentFromJSON)),
        'auto_approve_cod': !exists(json, 'auto_approve_cod') ? undefined : json['auto_approve_cod'],
        'auto_approve_purchase_order': !exists(json, 'auto_approve_purchase_order') ? undefined : json['auto_approve_purchase_order'],
        'automatic_merchant_notes': !exists(json, 'automatic_merchant_notes') ? undefined : json['automatic_merchant_notes'],
        'billing': !exists(json, 'billing') ? undefined : ((json['billing'] as Array<any>).map(CustomerBillingFromJSON)),
        'business_notes': !exists(json, 'business_notes') ? undefined : json['business_notes'],
        'cards': !exists(json, 'cards') ? undefined : ((json['cards'] as Array<any>).map(CustomerCardFromJSON)),
        'cc_emails': !exists(json, 'cc_emails') ? undefined : ((json['cc_emails'] as Array<any>).map(CustomerEmailFromJSON)),
        'customer_profile_oid': !exists(json, 'customer_profile_oid') ? undefined : json['customer_profile_oid'],
        'dhl_account_number': !exists(json, 'dhl_account_number') ? undefined : json['dhl_account_number'],
        'dhl_duty_account_number': !exists(json, 'dhl_duty_account_number') ? undefined : json['dhl_duty_account_number'],
        'do_not_send_mail': !exists(json, 'do_not_send_mail') ? undefined : json['do_not_send_mail'],
        'edi': !exists(json, 'edi') ? undefined : CustomerEDIFromJSON(json['edi']),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'exempt_shipping_handling_charge': !exists(json, 'exempt_shipping_handling_charge') ? undefined : json['exempt_shipping_handling_charge'],
        'fedex_account_number': !exists(json, 'fedex_account_number') ? undefined : json['fedex_account_number'],
        'free_shipping': !exists(json, 'free_shipping') ? undefined : json['free_shipping'],
        'free_shipping_minimum': !exists(json, 'free_shipping_minimum') ? undefined : json['free_shipping_minimum'],
        'last_modified_by': !exists(json, 'last_modified_by') ? undefined : json['last_modified_by'],
        'last_modified_dts': !exists(json, 'last_modified_dts') ? undefined : json['last_modified_dts'],
        'loyalty': !exists(json, 'loyalty') ? undefined : CustomerLoyaltyFromJSON(json['loyalty']),
        'maximum_item_count': !exists(json, 'maximum_item_count') ? undefined : json['maximum_item_count'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'minimum_item_count': !exists(json, 'minimum_item_count') ? undefined : json['minimum_item_count'],
        'minimum_subtotal': !exists(json, 'minimum_subtotal') ? undefined : json['minimum_subtotal'],
        'no_coupons': !exists(json, 'no_coupons') ? undefined : json['no_coupons'],
        'no_free_shipping': !exists(json, 'no_free_shipping') ? undefined : json['no_free_shipping'],
        'no_realtime_charge': !exists(json, 'no_realtime_charge') ? undefined : json['no_realtime_charge'],
        'orders': !exists(json, 'orders') ? undefined : ((json['orders'] as Array<any>).map(OrderFromJSON)),
        'orders_summary': !exists(json, 'orders_summary') ? undefined : CustomerOrdersSummaryFromJSON(json['orders_summary']),
        'password': !exists(json, 'password') ? undefined : json['password'],
        'pricing_tiers': !exists(json, 'pricing_tiers') ? undefined : ((json['pricing_tiers'] as Array<any>).map(CustomerPricingTierFromJSON)),
        'privacy': !exists(json, 'privacy') ? undefined : CustomerPrivacyFromJSON(json['privacy']),
        'properties': !exists(json, 'properties') ? undefined : ((json['properties'] as Array<any>).map(CustomerPropertyFromJSON)),
        'qb_class': !exists(json, 'qb_class') ? undefined : json['qb_class'],
        'qb_code': !exists(json, 'qb_code') ? undefined : json['qb_code'],
        'qb_tax_exemption_reason_code': !exists(json, 'qb_tax_exemption_reason_code') ? undefined : json['qb_tax_exemption_reason_code'],
        'quotes': !exists(json, 'quotes') ? undefined : ((json['quotes'] as Array<any>).map(OrderFromJSON)),
        'quotes_summary': !exists(json, 'quotes_summary') ? undefined : CustomerQuotesSummaryFromJSON(json['quotes_summary']),
        'referral_source': !exists(json, 'referral_source') ? undefined : json['referral_source'],
        'reviewer': !exists(json, 'reviewer') ? undefined : CustomerReviewerFromJSON(json['reviewer']),
        'sales_rep_code': !exists(json, 'sales_rep_code') ? undefined : json['sales_rep_code'],
        'send_signup_notification': !exists(json, 'send_signup_notification') ? undefined : json['send_signup_notification'],
        'shipping': !exists(json, 'shipping') ? undefined : ((json['shipping'] as Array<any>).map(CustomerShippingFromJSON)),
        'signup_dts': !exists(json, 'signup_dts') ? undefined : json['signup_dts'],
        'software_entitlements': !exists(json, 'software_entitlements') ? undefined : ((json['software_entitlements'] as Array<any>).map(CustomerSoftwareEntitlementFromJSON)),
        'suppress_buysafe': !exists(json, 'suppress_buysafe') ? undefined : json['suppress_buysafe'],
        'tags': !exists(json, 'tags') ? undefined : ((json['tags'] as Array<any>).map(CustomerTagFromJSON)),
        'tax_codes': !exists(json, 'tax_codes') ? undefined : CustomerTaxCodesFromJSON(json['tax_codes']),
        'tax_exempt': !exists(json, 'tax_exempt') ? undefined : json['tax_exempt'],
        'tax_id': !exists(json, 'tax_id') ? undefined : json['tax_id'],
        'terms': !exists(json, 'terms') ? undefined : json['terms'],
        'track_separately': !exists(json, 'track_separately') ? undefined : json['track_separately'],
        'unapproved': !exists(json, 'unapproved') ? undefined : json['unapproved'],
        'ups_account_number': !exists(json, 'ups_account_number') ? undefined : json['ups_account_number'],
        'website_url': !exists(json, 'website_url') ? undefined : json['website_url'],
    };
}

export function CustomerToJSON(value?: Customer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activity': CustomerActivityToJSON(value.activity),
        'affiliate_oid': value.affiliate_oid,
        'allow_3rd_party_billing': value.allow_3rd_party_billing,
        'allow_cod': value.allow_cod,
        'allow_drop_shipping': value.allow_drop_shipping,
        'allow_purchase_order': value.allow_purchase_order,
        'allow_quote_request': value.allow_quote_request,
        'allow_selection_of_address_type': value.allow_selection_of_address_type,
        'attachments': value.attachments === undefined ? undefined : ((value.attachments as Array<any>).map(CustomerAttachmentToJSON)),
        'auto_approve_cod': value.auto_approve_cod,
        'auto_approve_purchase_order': value.auto_approve_purchase_order,
        'automatic_merchant_notes': value.automatic_merchant_notes,
        'billing': value.billing === undefined ? undefined : ((value.billing as Array<any>).map(CustomerBillingToJSON)),
        'business_notes': value.business_notes,
        'cards': value.cards === undefined ? undefined : ((value.cards as Array<any>).map(CustomerCardToJSON)),
        'cc_emails': value.cc_emails === undefined ? undefined : ((value.cc_emails as Array<any>).map(CustomerEmailToJSON)),
        'customer_profile_oid': value.customer_profile_oid,
        'dhl_account_number': value.dhl_account_number,
        'dhl_duty_account_number': value.dhl_duty_account_number,
        'do_not_send_mail': value.do_not_send_mail,
        'edi': CustomerEDIToJSON(value.edi),
        'email': value.email,
        'exempt_shipping_handling_charge': value.exempt_shipping_handling_charge,
        'fedex_account_number': value.fedex_account_number,
        'free_shipping': value.free_shipping,
        'free_shipping_minimum': value.free_shipping_minimum,
        'last_modified_by': value.last_modified_by,
        'last_modified_dts': value.last_modified_dts,
        'loyalty': CustomerLoyaltyToJSON(value.loyalty),
        'maximum_item_count': value.maximum_item_count,
        'merchant_id': value.merchant_id,
        'minimum_item_count': value.minimum_item_count,
        'minimum_subtotal': value.minimum_subtotal,
        'no_coupons': value.no_coupons,
        'no_free_shipping': value.no_free_shipping,
        'no_realtime_charge': value.no_realtime_charge,
        'orders': value.orders === undefined ? undefined : ((value.orders as Array<any>).map(OrderToJSON)),
        'orders_summary': CustomerOrdersSummaryToJSON(value.orders_summary),
        'password': value.password,
        'pricing_tiers': value.pricing_tiers === undefined ? undefined : ((value.pricing_tiers as Array<any>).map(CustomerPricingTierToJSON)),
        'privacy': CustomerPrivacyToJSON(value.privacy),
        'properties': value.properties === undefined ? undefined : ((value.properties as Array<any>).map(CustomerPropertyToJSON)),
        'qb_class': value.qb_class,
        'qb_code': value.qb_code,
        'qb_tax_exemption_reason_code': value.qb_tax_exemption_reason_code,
        'quotes': value.quotes === undefined ? undefined : ((value.quotes as Array<any>).map(OrderToJSON)),
        'quotes_summary': CustomerQuotesSummaryToJSON(value.quotes_summary),
        'referral_source': value.referral_source,
        'reviewer': CustomerReviewerToJSON(value.reviewer),
        'sales_rep_code': value.sales_rep_code,
        'send_signup_notification': value.send_signup_notification,
        'shipping': value.shipping === undefined ? undefined : ((value.shipping as Array<any>).map(CustomerShippingToJSON)),
        'signup_dts': value.signup_dts,
        'software_entitlements': value.software_entitlements === undefined ? undefined : ((value.software_entitlements as Array<any>).map(CustomerSoftwareEntitlementToJSON)),
        'suppress_buysafe': value.suppress_buysafe,
        'tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(CustomerTagToJSON)),
        'tax_codes': CustomerTaxCodesToJSON(value.tax_codes),
        'tax_exempt': value.tax_exempt,
        'tax_id': value.tax_id,
        'terms': value.terms,
        'track_separately': value.track_separately,
        'unapproved': value.unapproved,
        'ups_account_number': value.ups_account_number,
        'website_url': value.website_url,
    };
}

