/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomerWishListItem
 */
export interface CustomerWishListItem {
    /**
     * Add date
     * @type {string}
     * @memberof CustomerWishListItem
     */
    add_dts?: string;
    /**
     * Comments
     * @type {string}
     * @memberof CustomerWishListItem
     */
    comments?: string;
    /**
     * Customer profile object identifier
     * @type {number}
     * @memberof CustomerWishListItem
     */
    customer_profile_oid?: number;
    /**
     * Customer wishlist item object identifier
     * @type {number}
     * @memberof CustomerWishListItem
     */
    customer_wishlist_item_oid?: number;
    /**
     * Merchant item object identifier
     * @type {number}
     * @memberof CustomerWishListItem
     */
    merchant_item_oid?: number;
    /**
     * Position in wishlist
     * @type {number}
     * @memberof CustomerWishListItem
     */
    position?: number;
    /**
     * Priority of wishlist item, 3 being low priority and 5 is high priority.
     * @type {number}
     * @memberof CustomerWishListItem
     */
    priority?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CustomerWishListItem)[] = ["add_dts", "comments", "customer_profile_oid", "customer_wishlist_item_oid", "merchant_item_oid", "position", "priority"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CustomerWishListItem interface.
 */
export function instanceOfCustomerWishListItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerWishListItemFromJSON(json: any): CustomerWishListItem {
    return CustomerWishListItemFromJSONTyped(json, false);
}

export function CustomerWishListItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerWishListItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'add_dts': !exists(json, 'add_dts') ? undefined : json['add_dts'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
        'customer_profile_oid': !exists(json, 'customer_profile_oid') ? undefined : json['customer_profile_oid'],
        'customer_wishlist_item_oid': !exists(json, 'customer_wishlist_item_oid') ? undefined : json['customer_wishlist_item_oid'],
        'merchant_item_oid': !exists(json, 'merchant_item_oid') ? undefined : json['merchant_item_oid'],
        'position': !exists(json, 'position') ? undefined : json['position'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
    };
}

export function CustomerWishListItemToJSON(value?: CustomerWishListItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'add_dts': value.add_dts,
        'comments': value.comments,
        'customer_profile_oid': value.customer_profile_oid,
        'customer_wishlist_item_oid': value.customer_wishlist_item_oid,
        'merchant_item_oid': value.merchant_item_oid,
        'position': value.position,
        'priority': value.priority,
    };
}

