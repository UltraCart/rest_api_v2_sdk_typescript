/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChannelPartnerOrderItem,
    ChannelPartnerOrderItemFromJSON,
    ChannelPartnerOrderItemFromJSONTyped,
    ChannelPartnerOrderItemToJSON,
} from './ChannelPartnerOrderItem';
import {
    ChannelPartnerOrderTransaction,
    ChannelPartnerOrderTransactionFromJSON,
    ChannelPartnerOrderTransactionFromJSONTyped,
    ChannelPartnerOrderTransactionToJSON,
} from './ChannelPartnerOrderTransaction';

/**
 * 
 * @export
 * @interface ChannelPartnerOrder
 */
export interface ChannelPartnerOrder {
    /**
     * advertising_source
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    advertisingSource?: string;
    /**
     * Affiliate Id
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    affiliate_id?: string;
    /**
     * Affiliate Sub Id
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    affiliate_sub_id?: string;
    /**
     * Arbitrary shipping handling total
     * @type {number}
     * @memberof ChannelPartnerOrder
     */
    arbitrary_shipping_handling_total?: number;
    /**
     * Arbitrary tax for overriding calculated taxes
     * @type {number}
     * @memberof ChannelPartnerOrder
     */
    arbitrary_tax?: number;
    /**
     * Arbitrary tax rate
     * @type {number}
     * @memberof ChannelPartnerOrder
     */
    arbitrary_tax_rate?: number;
    /**
     * Arbitrary taxable subtotal
     * @type {number}
     * @memberof ChannelPartnerOrder
     */
    arbitrary_taxable_subtotal?: number;
    /**
     * If true any matching customer profile based on email is associated with this order
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    associate_with_customer_profile_if_present?: boolean;
    /**
     * If true any purchase orders are automatically approved
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    auto_approve_purchase_order?: boolean;
    /**
     * Billing Address line 1
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_address1?: string;
    /**
     * Billing Address line 2
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_address2?: string;
    /**
     * Billing City
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_city?: string;
    /**
     * Billing Company
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_company?: string;
    /**
     * Billing ISO-3166 two letter country code
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_country_code?: string;
    /**
     * Billing Day phone
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_day_phone?: string;
    /**
     * Billing Evening phone
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_evening_phone?: string;
    /**
     * Billing First name
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_first_name?: string;
    /**
     * Billing Last name
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_last_name?: string;
    /**
     * Billing Postal code
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_postal_code?: string;
    /**
     * Billing State for United States otherwise region or province for other countries
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_state_region?: string;
    /**
     * Billing Title
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    billto_title?: string;
    /**
     * CC email.
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    cc_email?: string;
    /**
     * The id for this order within the channel partner system.
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    channel_partner_order_id?: string;
    /**
     * If true this order is marked as an auto order (recurring)
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    consider_recurring?: boolean;
    /**
     * Array of coupon codes
     * @type {Array<string>}
     * @memberof ChannelPartnerOrder
     */
    coupons?: Array<string>;
    /**
     * The amount authorized externally
     * @type {number}
     * @memberof ChannelPartnerOrder
     */
    credit_card_authorization_amount?: number;
    /**
     * Date/Time of credit card authorization in ISO8601 format
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    credit_card_authorization_dts?: string;
    /**
     * The reference number provided by an externally processed transaction
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    credit_card_authorization_number?: string;
    /**
     * Credit card expiration month
     * @type {number}
     * @memberof ChannelPartnerOrder
     */
    credit_card_expiration_month?: number;
    /**
     * Credit card expiration year
     * @type {number}
     * @memberof ChannelPartnerOrder
     */
    credit_card_expiration_year?: number;
    /**
     * Credit card type
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    credit_card_type?: string;
    /**
     * Custom field 1
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    custom_field1?: string;
    /**
     * Custom field 2
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    custom_field2?: string;
    /**
     * Custom field 3
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    custom_field3?: string;
    /**
     * Custom field 4
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    custom_field4?: string;
    /**
     * Custom field 5
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    custom_field5?: string;
    /**
     * Custom field 6
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    custom_field6?: string;
    /**
     * Custom field 7
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    custom_field7?: string;
    /**
     * Date the customer is requesting delivery on. Typically used for perishable product delivery.
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    delivery_date?: string;
    /**
     * Email
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    email?: string;
    /**
     * True if this order is a gift
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    gift?: boolean;
    /**
     * Email address of the gift recipient
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    gift_email?: string;
    /**
     * Message to the gift recipient
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    gift_message?: string;
    /**
     * The token provided by UltraCart hosted fields when a credit card number is uploaded into the system.  This is the only way to provide a credit card number.
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    hosted_fields_card_token?: string;
    /**
     * The token provided by UltraCart hosted fields when a credit card cvv is uploaded into the system.  This is the only way to provide a cvv number.
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    hosted_fields_cvv_token?: string;
    /**
     * Insurance application id
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    insurance_application_id?: string;
    /**
     * Insurance claim id
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    insurance_claim_id?: string;
    /**
     * IP Address of the customer
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    ip_address?: string;
    /**
     * Items
     * @type {Array<ChannelPartnerOrderItem>}
     * @memberof ChannelPartnerOrder
     */
    items?: Array<ChannelPartnerOrderItem>;
    /**
     * If true the least expensive shipping method is automatically chosen during the order import
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    least_cost_route?: boolean;
    /**
     * An optional array of shipping methods to restict choices if least_cost_route is true
     * @type {Array<string>}
     * @memberof ChannelPartnerOrder
     */
    least_cost_route_shipping_methods?: Array<string>;
    /**
     * If true the customer is subscribed to any configured mailing lists
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    mailing_list_opt_in?: boolean;
    /**
     * If true no payment processing is done and the order is placed into Accounts Receivable
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    no_realtime_payment_processing?: boolean;
    /**
     * Payment method
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    payment_method?: ChannelPartnerOrderPaymentMethodEnum;
    /**
     * Purchase order number
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    purchase_order_number?: string;
    /**
     * The rotating transaction gateway code for the gateway used to charge this order
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    rotating_transaction_gateway_code?: string;
    /**
     * Screen branding theme code
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    screen_branding_theme_code?: string;
    /**
     * Date the customer is requesting that the order ship on.  Typically used for perishable product delivery.
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    ship_on_date?: string;
    /**
     * True if the shipping adress is residential.  Effects the methods that are available to the customer as well as the price of the shipping method.
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    ship_to_residential?: boolean;
    /**
     * Shipping method
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipping_method?: string;
    /**
     * Shipping Address line 1
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_address1?: string;
    /**
     * Shipping Address line 2
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_address2?: string;
    /**
     * Shipping City
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_city?: string;
    /**
     * Shipping Company
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_company?: string;
    /**
     * Shipping ISO-3166 two letter country code
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_country_code?: string;
    /**
     * Shipping Day phone
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_day_phone?: string;
    /**
     * Shipping Evening phone
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_evening_phone?: string;
    /**
     * Shipping First name
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_first_name?: string;
    /**
     * Shipping Last name
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_last_name?: string;
    /**
     * Shipping Postal code
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_postal_code?: string;
    /**
     * Shipping State for United States otherwise region or province for other countries
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_state_region?: string;
    /**
     * Shipping Title
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    shipto_title?: string;
    /**
     * If true the order is placed directly into the shipping department
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    skip_payment_processing?: boolean;
    /**
     * Special instructions from the customer regarding shipping
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    special_instructions?: string;
    /**
     * If true the order bypasses shipping and is marked completed
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    store_completed?: boolean;
    /**
     * If true any failed payments are placed into Accounts Receivable.  If false any failed payments result in a rejected order resulting in errors thrown during the insert routine
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    store_if_payment_declines?: boolean;
    /**
     * The optional shipping county used to determine exact taxes
     * @type {string}
     * @memberof ChannelPartnerOrder
     */
    tax_county?: string;
    /**
     * If true this order is marked as being tax exempt
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    tax_exempt?: boolean;
    /**
     * 
     * @type {ChannelPartnerOrderTransaction}
     * @memberof ChannelPartnerOrder
     */
    transaction?: ChannelPartnerOrderTransaction;
    /**
     * If true all warnings are considered errors, this is true by default
     * @type {boolean}
     * @memberof ChannelPartnerOrder
     */
    treat_warnings_as_errors?: boolean;
}


/**
 * @export
 */
export const ChannelPartnerOrderPaymentMethodEnum = {
    Affirm: 'Affirm',
    Amazon: 'Amazon',
    Check: 'Check',
    Cod: 'COD',
    CreditCard: 'Credit Card',
    LoanHero: 'LoanHero',
    MoneyOrder: 'Money Order',
    PayPal: 'PayPal',
    PurchaseOrder: 'Purchase Order',
    QuoteRequest: 'Quote Request',
    WireTransfer: 'Wire Transfer'
} as const;
export type ChannelPartnerOrderPaymentMethodEnum = typeof ChannelPartnerOrderPaymentMethodEnum[keyof typeof ChannelPartnerOrderPaymentMethodEnum];


export function ChannelPartnerOrderFromJSON(json: any): ChannelPartnerOrder {
    return ChannelPartnerOrderFromJSONTyped(json, false);
}

export function ChannelPartnerOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelPartnerOrder {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'advertisingSource': !exists(json, 'advertisingSource') ? undefined : json['advertisingSource'],
        'affiliate_id': !exists(json, 'affiliate_id') ? undefined : json['affiliate_id'],
        'affiliate_sub_id': !exists(json, 'affiliate_sub_id') ? undefined : json['affiliate_sub_id'],
        'arbitrary_shipping_handling_total': !exists(json, 'arbitrary_shipping_handling_total') ? undefined : json['arbitrary_shipping_handling_total'],
        'arbitrary_tax': !exists(json, 'arbitrary_tax') ? undefined : json['arbitrary_tax'],
        'arbitrary_tax_rate': !exists(json, 'arbitrary_tax_rate') ? undefined : json['arbitrary_tax_rate'],
        'arbitrary_taxable_subtotal': !exists(json, 'arbitrary_taxable_subtotal') ? undefined : json['arbitrary_taxable_subtotal'],
        'associate_with_customer_profile_if_present': !exists(json, 'associate_with_customer_profile_if_present') ? undefined : json['associate_with_customer_profile_if_present'],
        'auto_approve_purchase_order': !exists(json, 'auto_approve_purchase_order') ? undefined : json['auto_approve_purchase_order'],
        'billto_address1': !exists(json, 'billto_address1') ? undefined : json['billto_address1'],
        'billto_address2': !exists(json, 'billto_address2') ? undefined : json['billto_address2'],
        'billto_city': !exists(json, 'billto_city') ? undefined : json['billto_city'],
        'billto_company': !exists(json, 'billto_company') ? undefined : json['billto_company'],
        'billto_country_code': !exists(json, 'billto_country_code') ? undefined : json['billto_country_code'],
        'billto_day_phone': !exists(json, 'billto_day_phone') ? undefined : json['billto_day_phone'],
        'billto_evening_phone': !exists(json, 'billto_evening_phone') ? undefined : json['billto_evening_phone'],
        'billto_first_name': !exists(json, 'billto_first_name') ? undefined : json['billto_first_name'],
        'billto_last_name': !exists(json, 'billto_last_name') ? undefined : json['billto_last_name'],
        'billto_postal_code': !exists(json, 'billto_postal_code') ? undefined : json['billto_postal_code'],
        'billto_state_region': !exists(json, 'billto_state_region') ? undefined : json['billto_state_region'],
        'billto_title': !exists(json, 'billto_title') ? undefined : json['billto_title'],
        'cc_email': !exists(json, 'cc_email') ? undefined : json['cc_email'],
        'channel_partner_order_id': !exists(json, 'channel_partner_order_id') ? undefined : json['channel_partner_order_id'],
        'consider_recurring': !exists(json, 'consider_recurring') ? undefined : json['consider_recurring'],
        'coupons': !exists(json, 'coupons') ? undefined : json['coupons'],
        'credit_card_authorization_amount': !exists(json, 'credit_card_authorization_amount') ? undefined : json['credit_card_authorization_amount'],
        'credit_card_authorization_dts': !exists(json, 'credit_card_authorization_dts') ? undefined : json['credit_card_authorization_dts'],
        'credit_card_authorization_number': !exists(json, 'credit_card_authorization_number') ? undefined : json['credit_card_authorization_number'],
        'credit_card_expiration_month': !exists(json, 'credit_card_expiration_month') ? undefined : json['credit_card_expiration_month'],
        'credit_card_expiration_year': !exists(json, 'credit_card_expiration_year') ? undefined : json['credit_card_expiration_year'],
        'credit_card_type': !exists(json, 'credit_card_type') ? undefined : json['credit_card_type'],
        'custom_field1': !exists(json, 'custom_field1') ? undefined : json['custom_field1'],
        'custom_field2': !exists(json, 'custom_field2') ? undefined : json['custom_field2'],
        'custom_field3': !exists(json, 'custom_field3') ? undefined : json['custom_field3'],
        'custom_field4': !exists(json, 'custom_field4') ? undefined : json['custom_field4'],
        'custom_field5': !exists(json, 'custom_field5') ? undefined : json['custom_field5'],
        'custom_field6': !exists(json, 'custom_field6') ? undefined : json['custom_field6'],
        'custom_field7': !exists(json, 'custom_field7') ? undefined : json['custom_field7'],
        'delivery_date': !exists(json, 'delivery_date') ? undefined : json['delivery_date'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'gift': !exists(json, 'gift') ? undefined : json['gift'],
        'gift_email': !exists(json, 'gift_email') ? undefined : json['gift_email'],
        'gift_message': !exists(json, 'gift_message') ? undefined : json['gift_message'],
        'hosted_fields_card_token': !exists(json, 'hosted_fields_card_token') ? undefined : json['hosted_fields_card_token'],
        'hosted_fields_cvv_token': !exists(json, 'hosted_fields_cvv_token') ? undefined : json['hosted_fields_cvv_token'],
        'insurance_application_id': !exists(json, 'insurance_application_id') ? undefined : json['insurance_application_id'],
        'insurance_claim_id': !exists(json, 'insurance_claim_id') ? undefined : json['insurance_claim_id'],
        'ip_address': !exists(json, 'ip_address') ? undefined : json['ip_address'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(ChannelPartnerOrderItemFromJSON)),
        'least_cost_route': !exists(json, 'least_cost_route') ? undefined : json['least_cost_route'],
        'least_cost_route_shipping_methods': !exists(json, 'least_cost_route_shipping_methods') ? undefined : json['least_cost_route_shipping_methods'],
        'mailing_list_opt_in': !exists(json, 'mailing_list_opt_in') ? undefined : json['mailing_list_opt_in'],
        'no_realtime_payment_processing': !exists(json, 'no_realtime_payment_processing') ? undefined : json['no_realtime_payment_processing'],
        'payment_method': !exists(json, 'payment_method') ? undefined : json['payment_method'],
        'purchase_order_number': !exists(json, 'purchase_order_number') ? undefined : json['purchase_order_number'],
        'rotating_transaction_gateway_code': !exists(json, 'rotating_transaction_gateway_code') ? undefined : json['rotating_transaction_gateway_code'],
        'screen_branding_theme_code': !exists(json, 'screen_branding_theme_code') ? undefined : json['screen_branding_theme_code'],
        'ship_on_date': !exists(json, 'ship_on_date') ? undefined : json['ship_on_date'],
        'ship_to_residential': !exists(json, 'ship_to_residential') ? undefined : json['ship_to_residential'],
        'shipping_method': !exists(json, 'shipping_method') ? undefined : json['shipping_method'],
        'shipto_address1': !exists(json, 'shipto_address1') ? undefined : json['shipto_address1'],
        'shipto_address2': !exists(json, 'shipto_address2') ? undefined : json['shipto_address2'],
        'shipto_city': !exists(json, 'shipto_city') ? undefined : json['shipto_city'],
        'shipto_company': !exists(json, 'shipto_company') ? undefined : json['shipto_company'],
        'shipto_country_code': !exists(json, 'shipto_country_code') ? undefined : json['shipto_country_code'],
        'shipto_day_phone': !exists(json, 'shipto_day_phone') ? undefined : json['shipto_day_phone'],
        'shipto_evening_phone': !exists(json, 'shipto_evening_phone') ? undefined : json['shipto_evening_phone'],
        'shipto_first_name': !exists(json, 'shipto_first_name') ? undefined : json['shipto_first_name'],
        'shipto_last_name': !exists(json, 'shipto_last_name') ? undefined : json['shipto_last_name'],
        'shipto_postal_code': !exists(json, 'shipto_postal_code') ? undefined : json['shipto_postal_code'],
        'shipto_state_region': !exists(json, 'shipto_state_region') ? undefined : json['shipto_state_region'],
        'shipto_title': !exists(json, 'shipto_title') ? undefined : json['shipto_title'],
        'skip_payment_processing': !exists(json, 'skip_payment_processing') ? undefined : json['skip_payment_processing'],
        'special_instructions': !exists(json, 'special_instructions') ? undefined : json['special_instructions'],
        'store_completed': !exists(json, 'store_completed') ? undefined : json['store_completed'],
        'store_if_payment_declines': !exists(json, 'store_if_payment_declines') ? undefined : json['store_if_payment_declines'],
        'tax_county': !exists(json, 'tax_county') ? undefined : json['tax_county'],
        'tax_exempt': !exists(json, 'tax_exempt') ? undefined : json['tax_exempt'],
        'transaction': !exists(json, 'transaction') ? undefined : ChannelPartnerOrderTransactionFromJSON(json['transaction']),
        'treat_warnings_as_errors': !exists(json, 'treat_warnings_as_errors') ? undefined : json['treat_warnings_as_errors'],
    };
}

export function ChannelPartnerOrderToJSON(value?: ChannelPartnerOrder | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'advertisingSource': value.advertisingSource,
        'affiliate_id': value.affiliate_id,
        'affiliate_sub_id': value.affiliate_sub_id,
        'arbitrary_shipping_handling_total': value.arbitrary_shipping_handling_total,
        'arbitrary_tax': value.arbitrary_tax,
        'arbitrary_tax_rate': value.arbitrary_tax_rate,
        'arbitrary_taxable_subtotal': value.arbitrary_taxable_subtotal,
        'associate_with_customer_profile_if_present': value.associate_with_customer_profile_if_present,
        'auto_approve_purchase_order': value.auto_approve_purchase_order,
        'billto_address1': value.billto_address1,
        'billto_address2': value.billto_address2,
        'billto_city': value.billto_city,
        'billto_company': value.billto_company,
        'billto_country_code': value.billto_country_code,
        'billto_day_phone': value.billto_day_phone,
        'billto_evening_phone': value.billto_evening_phone,
        'billto_first_name': value.billto_first_name,
        'billto_last_name': value.billto_last_name,
        'billto_postal_code': value.billto_postal_code,
        'billto_state_region': value.billto_state_region,
        'billto_title': value.billto_title,
        'cc_email': value.cc_email,
        'channel_partner_order_id': value.channel_partner_order_id,
        'consider_recurring': value.consider_recurring,
        'coupons': value.coupons,
        'credit_card_authorization_amount': value.credit_card_authorization_amount,
        'credit_card_authorization_dts': value.credit_card_authorization_dts,
        'credit_card_authorization_number': value.credit_card_authorization_number,
        'credit_card_expiration_month': value.credit_card_expiration_month,
        'credit_card_expiration_year': value.credit_card_expiration_year,
        'credit_card_type': value.credit_card_type,
        'custom_field1': value.custom_field1,
        'custom_field2': value.custom_field2,
        'custom_field3': value.custom_field3,
        'custom_field4': value.custom_field4,
        'custom_field5': value.custom_field5,
        'custom_field6': value.custom_field6,
        'custom_field7': value.custom_field7,
        'delivery_date': value.delivery_date,
        'email': value.email,
        'gift': value.gift,
        'gift_email': value.gift_email,
        'gift_message': value.gift_message,
        'hosted_fields_card_token': value.hosted_fields_card_token,
        'hosted_fields_cvv_token': value.hosted_fields_cvv_token,
        'insurance_application_id': value.insurance_application_id,
        'insurance_claim_id': value.insurance_claim_id,
        'ip_address': value.ip_address,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(ChannelPartnerOrderItemToJSON)),
        'least_cost_route': value.least_cost_route,
        'least_cost_route_shipping_methods': value.least_cost_route_shipping_methods,
        'mailing_list_opt_in': value.mailing_list_opt_in,
        'no_realtime_payment_processing': value.no_realtime_payment_processing,
        'payment_method': value.payment_method,
        'purchase_order_number': value.purchase_order_number,
        'rotating_transaction_gateway_code': value.rotating_transaction_gateway_code,
        'screen_branding_theme_code': value.screen_branding_theme_code,
        'ship_on_date': value.ship_on_date,
        'ship_to_residential': value.ship_to_residential,
        'shipping_method': value.shipping_method,
        'shipto_address1': value.shipto_address1,
        'shipto_address2': value.shipto_address2,
        'shipto_city': value.shipto_city,
        'shipto_company': value.shipto_company,
        'shipto_country_code': value.shipto_country_code,
        'shipto_day_phone': value.shipto_day_phone,
        'shipto_evening_phone': value.shipto_evening_phone,
        'shipto_first_name': value.shipto_first_name,
        'shipto_last_name': value.shipto_last_name,
        'shipto_postal_code': value.shipto_postal_code,
        'shipto_state_region': value.shipto_state_region,
        'shipto_title': value.shipto_title,
        'skip_payment_processing': value.skip_payment_processing,
        'special_instructions': value.special_instructions,
        'store_completed': value.store_completed,
        'store_if_payment_declines': value.store_if_payment_declines,
        'tax_county': value.tax_county,
        'tax_exempt': value.tax_exempt,
        'transaction': ChannelPartnerOrderTransactionToJSON(value.transaction),
        'treat_warnings_as_errors': value.treat_warnings_as_errors,
    };
}

