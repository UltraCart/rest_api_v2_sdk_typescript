/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CartSettingsPaymentAmazon,
    CartSettingsPaymentAmazonFromJSON,
    CartSettingsPaymentAmazonFromJSONTyped,
    CartSettingsPaymentAmazonToJSON,
} from './CartSettingsPaymentAmazon';
import {
    CartSettingsPaymentCreditCard,
    CartSettingsPaymentCreditCardFromJSON,
    CartSettingsPaymentCreditCardFromJSONTyped,
    CartSettingsPaymentCreditCardToJSON,
} from './CartSettingsPaymentCreditCard';
import {
    CartSettingsPaymentPayPal,
    CartSettingsPaymentPayPalFromJSON,
    CartSettingsPaymentPayPalFromJSONTyped,
    CartSettingsPaymentPayPalToJSON,
} from './CartSettingsPaymentPayPal';

/**
 * 
 * @export
 * @interface CartSettingsPayment
 */
export interface CartSettingsPayment {
    /**
     * 
     * @type {CartSettingsPaymentAmazon}
     * @memberof CartSettingsPayment
     */
    amazon?: CartSettingsPaymentAmazon;
    /**
     * 
     * @type {CartSettingsPaymentCreditCard}
     * @memberof CartSettingsPayment
     */
    credit_card?: CartSettingsPaymentCreditCard;
    /**
     * True if this card requires a payment from the customer
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    need_payment?: boolean;
    /**
     * 
     * @type {CartSettingsPaymentPayPal}
     * @memberof CartSettingsPayment
     */
    paypal?: CartSettingsPaymentPayPal;
    /**
     * True if Amazon payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_amazon?: boolean;
    /**
     * True if check payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_check?: boolean;
    /**
     * True if COD payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_cod?: boolean;
    /**
     * True if credit card payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_credit_card?: boolean;
    /**
     * True if money order payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_money_order?: boolean;
    /**
     * True if PayPal payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_paypal?: boolean;
    /**
     * True if purchase order payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_purchase_order?: boolean;
    /**
     * True if quote requests payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_quote_request?: boolean;
    /**
     * True if wire transfer payments are available on this order
     * @type {boolean}
     * @memberof CartSettingsPayment
     */
    supports_wire_transfer?: boolean;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CartSettingsPayment)[] = ["amazon", "credit_card", "need_payment", "paypal", "supports_amazon", "supports_check", "supports_cod", "supports_credit_card", "supports_money_order", "supports_paypal", "supports_purchase_order", "supports_quote_request", "supports_wire_transfer"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CartSettingsPayment interface.
 */
export function instanceOfCartSettingsPayment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartSettingsPaymentFromJSON(json: any): CartSettingsPayment {
    return CartSettingsPaymentFromJSONTyped(json, false);
}

export function CartSettingsPaymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartSettingsPayment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amazon': !exists(json, 'amazon') ? undefined : CartSettingsPaymentAmazonFromJSON(json['amazon']),
        'credit_card': !exists(json, 'credit_card') ? undefined : CartSettingsPaymentCreditCardFromJSON(json['credit_card']),
        'need_payment': !exists(json, 'need_payment') ? undefined : json['need_payment'],
        'paypal': !exists(json, 'paypal') ? undefined : CartSettingsPaymentPayPalFromJSON(json['paypal']),
        'supports_amazon': !exists(json, 'supports_amazon') ? undefined : json['supports_amazon'],
        'supports_check': !exists(json, 'supports_check') ? undefined : json['supports_check'],
        'supports_cod': !exists(json, 'supports_cod') ? undefined : json['supports_cod'],
        'supports_credit_card': !exists(json, 'supports_credit_card') ? undefined : json['supports_credit_card'],
        'supports_money_order': !exists(json, 'supports_money_order') ? undefined : json['supports_money_order'],
        'supports_paypal': !exists(json, 'supports_paypal') ? undefined : json['supports_paypal'],
        'supports_purchase_order': !exists(json, 'supports_purchase_order') ? undefined : json['supports_purchase_order'],
        'supports_quote_request': !exists(json, 'supports_quote_request') ? undefined : json['supports_quote_request'],
        'supports_wire_transfer': !exists(json, 'supports_wire_transfer') ? undefined : json['supports_wire_transfer'],
    };
}

export function CartSettingsPaymentToJSON(value?: CartSettingsPayment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amazon': CartSettingsPaymentAmazonToJSON(value.amazon),
        'credit_card': CartSettingsPaymentCreditCardToJSON(value.credit_card),
        'need_payment': value.need_payment,
        'paypal': CartSettingsPaymentPayPalToJSON(value.paypal),
        'supports_amazon': value.supports_amazon,
        'supports_check': value.supports_check,
        'supports_cod': value.supports_cod,
        'supports_credit_card': value.supports_credit_card,
        'supports_money_order': value.supports_money_order,
        'supports_paypal': value.supports_paypal,
        'supports_purchase_order': value.supports_purchase_order,
        'supports_quote_request': value.supports_quote_request,
        'supports_wire_transfer': value.supports_wire_transfer,
    };
}

