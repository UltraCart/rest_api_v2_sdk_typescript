/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReportDataSetRow,
    ReportDataSetRowFromJSON,
    ReportDataSetRowFromJSONTyped,
    ReportDataSetRowToJSON,
} from './ReportDataSetRow';

/**
 * 
 * @export
 * @interface ReportDataSetPage
 */
export interface ReportDataSetPage {
    /**
     * A unique identifier assigned to the data set that is returned.
     * @type {string}
     * @memberof ReportDataSetPage
     */
    data_set_uuid?: string;
    /**
     * Merchant that owns this data set
     * @type {string}
     * @memberof ReportDataSetPage
     */
    merchant_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ReportDataSetPage
     */
    next_page_token?: string;
    /**
     * 
     * @type {number}
     * @memberof ReportDataSetPage
     */
    next_start_index?: number;
    /**
     * 
     * @type {number}
     * @memberof ReportDataSetPage
     */
    page_number?: number;
    /**
     * 
     * @type {number}
     * @memberof ReportDataSetPage
     */
    row_count?: number;
    /**
     * Rows returned for the data set
     * @type {Array<ReportDataSetRow>}
     * @memberof ReportDataSetPage
     */
    rows?: Array<ReportDataSetRow>;
    /**
     * Signed S3 URL where the page rows can be downloaded from
     * @type {string}
     * @memberof ReportDataSetPage
     */
    rows_s3_url?: string;
    /**
     * Zero based index of the starting row
     * @type {number}
     * @memberof ReportDataSetPage
     */
    start_index?: number;
    /**
     * The BigQuery destination table id that contains the result.
     * @type {string}
     * @memberof ReportDataSetPage
     */
    table_id?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ReportDataSetPage)[] = ["data_set_uuid", "merchant_id", "next_page_token", "next_start_index", "page_number", "row_count", "rows", "rows_s3_url", "start_index", "table_id"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ReportDataSetPage interface.
 */
export function instanceOfReportDataSetPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReportDataSetPageFromJSON(json: any): ReportDataSetPage {
    return ReportDataSetPageFromJSONTyped(json, false);
}

export function ReportDataSetPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportDataSetPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data_set_uuid': !exists(json, 'data_set_uuid') ? undefined : json['data_set_uuid'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'next_page_token': !exists(json, 'next_page_token') ? undefined : json['next_page_token'],
        'next_start_index': !exists(json, 'next_start_index') ? undefined : json['next_start_index'],
        'page_number': !exists(json, 'page_number') ? undefined : json['page_number'],
        'row_count': !exists(json, 'row_count') ? undefined : json['row_count'],
        'rows': !exists(json, 'rows') ? undefined : ((json['rows'] as Array<any>).map(ReportDataSetRowFromJSON)),
        'rows_s3_url': !exists(json, 'rows_s3_url') ? undefined : json['rows_s3_url'],
        'start_index': !exists(json, 'start_index') ? undefined : json['start_index'],
        'table_id': !exists(json, 'table_id') ? undefined : json['table_id'],
    };
}

export function ReportDataSetPageToJSON(value?: ReportDataSetPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data_set_uuid': value.data_set_uuid,
        'merchant_id': value.merchant_id,
        'next_page_token': value.next_page_token,
        'next_start_index': value.next_start_index,
        'page_number': value.page_number,
        'row_count': value.row_count,
        'rows': value.rows === undefined ? undefined : ((value.rows as Array<any>).map(ReportDataSetRowToJSON)),
        'rows_s3_url': value.rows_s3_url,
        'start_index': value.start_index,
        'table_id': value.table_id,
    };
}

