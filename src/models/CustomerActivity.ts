/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Activity,
    ActivityFromJSON,
    ActivityFromJSONTyped,
    ActivityToJSON,
} from './Activity';
import {
    ListSegmentMembership,
    ListSegmentMembershipFromJSON,
    ListSegmentMembershipFromJSONTyped,
    ListSegmentMembershipToJSON,
} from './ListSegmentMembership';
import {
    Metric,
    MetricFromJSON,
    MetricFromJSONTyped,
    MetricToJSON,
} from './Metric';
import {
    Property,
    PropertyFromJSON,
    PropertyFromJSONTyped,
    PropertyToJSON,
} from './Property';

/**
 * 
 * @export
 * @interface CustomerActivity
 */
export interface CustomerActivity {
    /**
     * 
     * @type {Array<Activity>}
     * @memberof CustomerActivity
     */
    activities?: Array<Activity>;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerActivity
     */
    global_unsubscribed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CustomerActivity
     */
    global_unsubscribed_dts?: string;
    /**
     * 
     * @type {Array<ListSegmentMembership>}
     * @memberof CustomerActivity
     */
    memberships?: Array<ListSegmentMembership>;
    /**
     * 
     * @type {Array<Metric>}
     * @memberof CustomerActivity
     */
    metrics?: Array<Metric>;
    /**
     * 
     * @type {Array<Property>}
     * @memberof CustomerActivity
     */
    properties_list?: Array<Property>;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerActivity
     */
    spam_complaint?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CustomerActivity
     */
    spam_complaint_dts?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CustomerActivity)[] = ["activities", "global_unsubscribed", "global_unsubscribed_dts", "memberships", "metrics", "properties_list", "spam_complaint", "spam_complaint_dts"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CustomerActivity interface.
 */
export function instanceOfCustomerActivity(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerActivityFromJSON(json: any): CustomerActivity {
    return CustomerActivityFromJSONTyped(json, false);
}

export function CustomerActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerActivity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activities': !exists(json, 'activities') ? undefined : ((json['activities'] as Array<any>).map(ActivityFromJSON)),
        'global_unsubscribed': !exists(json, 'global_unsubscribed') ? undefined : json['global_unsubscribed'],
        'global_unsubscribed_dts': !exists(json, 'global_unsubscribed_dts') ? undefined : json['global_unsubscribed_dts'],
        'memberships': !exists(json, 'memberships') ? undefined : ((json['memberships'] as Array<any>).map(ListSegmentMembershipFromJSON)),
        'metrics': !exists(json, 'metrics') ? undefined : ((json['metrics'] as Array<any>).map(MetricFromJSON)),
        'properties_list': !exists(json, 'properties_list') ? undefined : ((json['properties_list'] as Array<any>).map(PropertyFromJSON)),
        'spam_complaint': !exists(json, 'spam_complaint') ? undefined : json['spam_complaint'],
        'spam_complaint_dts': !exists(json, 'spam_complaint_dts') ? undefined : json['spam_complaint_dts'],
    };
}

export function CustomerActivityToJSON(value?: CustomerActivity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activities': value.activities === undefined ? undefined : ((value.activities as Array<any>).map(ActivityToJSON)),
        'global_unsubscribed': value.global_unsubscribed,
        'global_unsubscribed_dts': value.global_unsubscribed_dts,
        'memberships': value.memberships === undefined ? undefined : ((value.memberships as Array<any>).map(ListSegmentMembershipToJSON)),
        'metrics': value.metrics === undefined ? undefined : ((value.metrics as Array<any>).map(MetricToJSON)),
        'properties_list': value.properties_list === undefined ? undefined : ((value.properties_list as Array<any>).map(PropertyToJSON)),
        'spam_complaint': value.spam_complaint,
        'spam_complaint_dts': value.spam_complaint_dts,
    };
}

