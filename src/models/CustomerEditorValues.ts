/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChannelPartner,
    ChannelPartnerFromJSON,
    ChannelPartnerFromJSONTyped,
    ChannelPartnerToJSON,
} from './ChannelPartner';
import {
    Country,
    CountryFromJSON,
    CountryFromJSONTyped,
    CountryToJSON,
} from './Country';
import {
    CustomerAffiliate,
    CustomerAffiliateFromJSON,
    CustomerAffiliateFromJSONTyped,
    CustomerAffiliateToJSON,
} from './CustomerAffiliate';

/**
 * 
 * @export
 * @interface CustomerEditorValues
 */
export interface CustomerEditorValues {
    /**
     * affiliates
     * @type {Array<CustomerAffiliate>}
     * @memberof CustomerEditorValues
     */
    affiliates?: Array<CustomerAffiliate>;
    /**
     * card_exp_months
     * @type {Array<string>}
     * @memberof CustomerEditorValues
     */
    card_exp_months?: Array<string>;
    /**
     * card_exp_years
     * @type {Array<string>}
     * @memberof CustomerEditorValues
     */
    card_exp_years?: Array<string>;
    /**
     * card_types
     * @type {Array<string>}
     * @memberof CustomerEditorValues
     */
    card_types?: Array<string>;
    /**
     * countries
     * @type {Array<Country>}
     * @memberof CustomerEditorValues
     */
    countries?: Array<Country>;
    /**
     * EDI channel partners
     * @type {Array<ChannelPartner>}
     * @memberof CustomerEditorValues
     */
    edi_channel_partners?: Array<ChannelPartner>;
    /**
     * loyalty_ledger_descriptions
     * @type {Array<string>}
     * @memberof CustomerEditorValues
     */
    loyalty_ledger_descriptions?: Array<string>;
    /**
     * loyalty_program_type
     * @type {string}
     * @memberof CustomerEditorValues
     */
    loyalty_program_type?: string;
    /**
     * qb_classes
     * @type {Array<string>}
     * @memberof CustomerEditorValues
     */
    qb_classes?: Array<string>;
    /**
     * sales_rep_codes
     * @type {Array<string>}
     * @memberof CustomerEditorValues
     */
    sales_rep_codes?: Array<string>;
    /**
     * state_optional_countries
     * @type {Array<Country>}
     * @memberof CustomerEditorValues
     */
    state_optional_countries?: Array<Country>;
    /**
     * terms
     * @type {Array<string>}
     * @memberof CustomerEditorValues
     */
    terms?: Array<string>;
}



/**
 * Check if a given object implements the CustomerEditorValues interface.
 */
export function instanceOfCustomerEditorValues(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerEditorValuesFromJSON(json: any): CustomerEditorValues {
    return CustomerEditorValuesFromJSONTyped(json, false);
}

export function CustomerEditorValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerEditorValues {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'affiliates': !exists(json, 'affiliates') ? undefined : ((json['affiliates'] as Array<any>).map(CustomerAffiliateFromJSON)),
        'card_exp_months': !exists(json, 'card_exp_months') ? undefined : json['card_exp_months'],
        'card_exp_years': !exists(json, 'card_exp_years') ? undefined : json['card_exp_years'],
        'card_types': !exists(json, 'card_types') ? undefined : json['card_types'],
        'countries': !exists(json, 'countries') ? undefined : ((json['countries'] as Array<any>).map(CountryFromJSON)),
        'edi_channel_partners': !exists(json, 'edi_channel_partners') ? undefined : ((json['edi_channel_partners'] as Array<any>).map(ChannelPartnerFromJSON)),
        'loyalty_ledger_descriptions': !exists(json, 'loyalty_ledger_descriptions') ? undefined : json['loyalty_ledger_descriptions'],
        'loyalty_program_type': !exists(json, 'loyalty_program_type') ? undefined : json['loyalty_program_type'],
        'qb_classes': !exists(json, 'qb_classes') ? undefined : json['qb_classes'],
        'sales_rep_codes': !exists(json, 'sales_rep_codes') ? undefined : json['sales_rep_codes'],
        'state_optional_countries': !exists(json, 'state_optional_countries') ? undefined : ((json['state_optional_countries'] as Array<any>).map(CountryFromJSON)),
        'terms': !exists(json, 'terms') ? undefined : json['terms'],
    };
}

export function CustomerEditorValuesToJSON(value?: CustomerEditorValues | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'affiliates': value.affiliates === undefined ? undefined : ((value.affiliates as Array<any>).map(CustomerAffiliateToJSON)),
        'card_exp_months': value.card_exp_months,
        'card_exp_years': value.card_exp_years,
        'card_types': value.card_types,
        'countries': value.countries === undefined ? undefined : ((value.countries as Array<any>).map(CountryToJSON)),
        'edi_channel_partners': value.edi_channel_partners === undefined ? undefined : ((value.edi_channel_partners as Array<any>).map(ChannelPartnerToJSON)),
        'loyalty_ledger_descriptions': value.loyalty_ledger_descriptions,
        'loyalty_program_type': value.loyalty_program_type,
        'qb_classes': value.qb_classes,
        'sales_rep_codes': value.sales_rep_codes,
        'state_optional_countries': value.state_optional_countries === undefined ? undefined : ((value.state_optional_countries as Array<any>).map(CountryToJSON)),
        'terms': value.terms,
    };
}

