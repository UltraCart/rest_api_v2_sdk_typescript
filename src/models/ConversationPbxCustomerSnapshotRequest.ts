/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ModelError,
    ModelErrorFromJSON,
    ModelErrorFromJSONTyped,
    ModelErrorToJSON,
} from './ModelError';
import {
    ResponseMetadata,
    ResponseMetadataFromJSON,
    ResponseMetadataFromJSONTyped,
    ResponseMetadataToJSON,
} from './ResponseMetadata';
import {
    Warning,
    WarningFromJSON,
    WarningFromJSONTyped,
    WarningToJSON,
} from './Warning';

/**
 * 
 * @export
 * @interface ConversationPbxCustomerSnapshotRequest
 */
export interface ConversationPbxCustomerSnapshotRequest {
    /**
     * 
     * @type {string}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    auto_order_expand?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    customer_expand?: string;
    /**
     * 
     * @type {ModelError}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    error?: ModelError;
    /**
     * 
     * @type {ResponseMetadata}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    metadata?: ResponseMetadata;
    /**
     * 
     * @type {string}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    order_expand?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    phone_number?: string;
    /**
     * Indicates if API call was successful
     * @type {boolean}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    success?: boolean;
    /**
     * 
     * @type {Warning}
     * @memberof ConversationPbxCustomerSnapshotRequest
     */
    warning?: Warning;
}



/**
 * Check if a given object implements the ConversationPbxCustomerSnapshotRequest interface.
 */
export function instanceOfConversationPbxCustomerSnapshotRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationPbxCustomerSnapshotRequestFromJSON(json: any): ConversationPbxCustomerSnapshotRequest {
    return ConversationPbxCustomerSnapshotRequestFromJSONTyped(json, false);
}

export function ConversationPbxCustomerSnapshotRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationPbxCustomerSnapshotRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'auto_order_expand': !exists(json, 'auto_order_expand') ? undefined : json['auto_order_expand'],
        'customer_expand': !exists(json, 'customer_expand') ? undefined : json['customer_expand'],
        'error': !exists(json, 'error') ? undefined : ModelErrorFromJSON(json['error']),
        'metadata': !exists(json, 'metadata') ? undefined : ResponseMetadataFromJSON(json['metadata']),
        'order_expand': !exists(json, 'order_expand') ? undefined : json['order_expand'],
        'phone_number': !exists(json, 'phone_number') ? undefined : json['phone_number'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'warning': !exists(json, 'warning') ? undefined : WarningFromJSON(json['warning']),
    };
}

export function ConversationPbxCustomerSnapshotRequestToJSON(value?: ConversationPbxCustomerSnapshotRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'auto_order_expand': value.auto_order_expand,
        'customer_expand': value.customer_expand,
        'error': ModelErrorToJSON(value.error),
        'metadata': ResponseMetadataToJSON(value.metadata),
        'order_expand': value.order_expand,
        'phone_number': value.phone_number,
        'success': value.success,
        'warning': WarningToJSON(value.warning),
    };
}

