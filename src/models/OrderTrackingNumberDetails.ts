/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderTrackingNumberDetail,
    OrderTrackingNumberDetailFromJSON,
    OrderTrackingNumberDetailFromJSONTyped,
    OrderTrackingNumberDetailToJSON,
} from './OrderTrackingNumberDetail';

/**
 * 
 * @export
 * @interface OrderTrackingNumberDetails
 */
export interface OrderTrackingNumberDetails {
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    actual_delivery_date?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    actual_delivery_date_formatted?: string;
    /**
     * 
     * @type {Array<OrderTrackingNumberDetail>}
     * @memberof OrderTrackingNumberDetails
     */
    details?: Array<OrderTrackingNumberDetail>;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    easypost_tracker_id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    expected_delivery_date?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    expected_delivery_date_formatted?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    map_url?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    order_placed_date?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    order_placed_date_formatted?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    payment_processed_date?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    payment_processed_date_formatted?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    shipped_date?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    shipped_date_formatted?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    shipping_method?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    status_description?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    tracking_number?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderTrackingNumberDetails
     */
    tracking_url?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof OrderTrackingNumberDetails)[] = ["actual_delivery_date", "actual_delivery_date_formatted", "details", "easypost_tracker_id", "expected_delivery_date", "expected_delivery_date_formatted", "map_url", "order_placed_date", "order_placed_date_formatted", "payment_processed_date", "payment_processed_date_formatted", "shipped_date", "shipped_date_formatted", "shipping_method", "status", "status_description", "tracking_number", "tracking_url"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the OrderTrackingNumberDetails interface.
 */
export function instanceOfOrderTrackingNumberDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderTrackingNumberDetailsFromJSON(json: any): OrderTrackingNumberDetails {
    return OrderTrackingNumberDetailsFromJSONTyped(json, false);
}

export function OrderTrackingNumberDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderTrackingNumberDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actual_delivery_date': !exists(json, 'actual_delivery_date') ? undefined : json['actual_delivery_date'],
        'actual_delivery_date_formatted': !exists(json, 'actual_delivery_date_formatted') ? undefined : json['actual_delivery_date_formatted'],
        'details': !exists(json, 'details') ? undefined : ((json['details'] as Array<any>).map(OrderTrackingNumberDetailFromJSON)),
        'easypost_tracker_id': !exists(json, 'easypost_tracker_id') ? undefined : json['easypost_tracker_id'],
        'expected_delivery_date': !exists(json, 'expected_delivery_date') ? undefined : json['expected_delivery_date'],
        'expected_delivery_date_formatted': !exists(json, 'expected_delivery_date_formatted') ? undefined : json['expected_delivery_date_formatted'],
        'map_url': !exists(json, 'map_url') ? undefined : json['map_url'],
        'order_placed_date': !exists(json, 'order_placed_date') ? undefined : json['order_placed_date'],
        'order_placed_date_formatted': !exists(json, 'order_placed_date_formatted') ? undefined : json['order_placed_date_formatted'],
        'payment_processed_date': !exists(json, 'payment_processed_date') ? undefined : json['payment_processed_date'],
        'payment_processed_date_formatted': !exists(json, 'payment_processed_date_formatted') ? undefined : json['payment_processed_date_formatted'],
        'shipped_date': !exists(json, 'shipped_date') ? undefined : json['shipped_date'],
        'shipped_date_formatted': !exists(json, 'shipped_date_formatted') ? undefined : json['shipped_date_formatted'],
        'shipping_method': !exists(json, 'shipping_method') ? undefined : json['shipping_method'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'status_description': !exists(json, 'status_description') ? undefined : json['status_description'],
        'tracking_number': !exists(json, 'tracking_number') ? undefined : json['tracking_number'],
        'tracking_url': !exists(json, 'tracking_url') ? undefined : json['tracking_url'],
    };
}

export function OrderTrackingNumberDetailsToJSON(value?: OrderTrackingNumberDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actual_delivery_date': value.actual_delivery_date,
        'actual_delivery_date_formatted': value.actual_delivery_date_formatted,
        'details': value.details === undefined ? undefined : ((value.details as Array<any>).map(OrderTrackingNumberDetailToJSON)),
        'easypost_tracker_id': value.easypost_tracker_id,
        'expected_delivery_date': value.expected_delivery_date,
        'expected_delivery_date_formatted': value.expected_delivery_date_formatted,
        'map_url': value.map_url,
        'order_placed_date': value.order_placed_date,
        'order_placed_date_formatted': value.order_placed_date_formatted,
        'payment_processed_date': value.payment_processed_date,
        'payment_processed_date_formatted': value.payment_processed_date_formatted,
        'shipped_date': value.shipped_date,
        'shipped_date_formatted': value.shipped_date_formatted,
        'shipping_method': value.shipping_method,
        'status': value.status,
        'status_description': value.status_description,
        'tracking_number': value.tracking_number,
        'tracking_url': value.tracking_url,
    };
}

