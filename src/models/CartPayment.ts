/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CartPaymentAffirm,
    CartPaymentAffirmFromJSON,
    CartPaymentAffirmFromJSONTyped,
    CartPaymentAffirmToJSON,
} from './CartPaymentAffirm';
import {
    CartPaymentAmazon,
    CartPaymentAmazonFromJSON,
    CartPaymentAmazonFromJSONTyped,
    CartPaymentAmazonToJSON,
} from './CartPaymentAmazon';
import {
    CartPaymentCheck,
    CartPaymentCheckFromJSON,
    CartPaymentCheckFromJSONTyped,
    CartPaymentCheckToJSON,
} from './CartPaymentCheck';
import {
    CartPaymentCreditCard,
    CartPaymentCreditCardFromJSON,
    CartPaymentCreditCardFromJSONTyped,
    CartPaymentCreditCardToJSON,
} from './CartPaymentCreditCard';
import {
    CartPaymentHealthBenefitCard,
    CartPaymentHealthBenefitCardFromJSON,
    CartPaymentHealthBenefitCardFromJSONTyped,
    CartPaymentHealthBenefitCardToJSON,
} from './CartPaymentHealthBenefitCard';
import {
    CartPaymentPurchaseOrder,
    CartPaymentPurchaseOrderFromJSON,
    CartPaymentPurchaseOrderFromJSONTyped,
    CartPaymentPurchaseOrderToJSON,
} from './CartPaymentPurchaseOrder';

/**
 * 
 * @export
 * @interface CartPayment
 */
export interface CartPayment {
    /**
     * 
     * @type {CartPaymentAffirm}
     * @memberof CartPayment
     */
    affirm?: CartPaymentAffirm;
    /**
     * 
     * @type {CartPaymentAmazon}
     * @memberof CartPayment
     */
    amazon?: CartPaymentAmazon;
    /**
     * 
     * @type {CartPaymentCheck}
     * @memberof CartPayment
     */
    check?: CartPaymentCheck;
    /**
     * 
     * @type {CartPaymentCreditCard}
     * @memberof CartPayment
     */
    credit_card?: CartPaymentCreditCard;
    /**
     * 
     * @type {CartPaymentHealthBenefitCard}
     * @memberof CartPayment
     */
    health_benefit_card?: CartPaymentHealthBenefitCard;
    /**
     * Payment method
     * @type {string}
     * @memberof CartPayment
     */
    payment_method?: string;
    /**
     * 
     * @type {CartPaymentPurchaseOrder}
     * @memberof CartPayment
     */
    purchase_order?: CartPaymentPurchaseOrder;
    /**
     * Rotating transaction gateway code
     * @type {string}
     * @memberof CartPayment
     */
    rtg_code?: string;
}



/**
 * Check if a given object implements the CartPayment interface.
 */
export function instanceOfCartPayment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartPaymentFromJSON(json: any): CartPayment {
    return CartPaymentFromJSONTyped(json, false);
}

export function CartPaymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartPayment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'affirm': !exists(json, 'affirm') ? undefined : CartPaymentAffirmFromJSON(json['affirm']),
        'amazon': !exists(json, 'amazon') ? undefined : CartPaymentAmazonFromJSON(json['amazon']),
        'check': !exists(json, 'check') ? undefined : CartPaymentCheckFromJSON(json['check']),
        'credit_card': !exists(json, 'credit_card') ? undefined : CartPaymentCreditCardFromJSON(json['credit_card']),
        'health_benefit_card': !exists(json, 'health_benefit_card') ? undefined : CartPaymentHealthBenefitCardFromJSON(json['health_benefit_card']),
        'payment_method': !exists(json, 'payment_method') ? undefined : json['payment_method'],
        'purchase_order': !exists(json, 'purchase_order') ? undefined : CartPaymentPurchaseOrderFromJSON(json['purchase_order']),
        'rtg_code': !exists(json, 'rtg_code') ? undefined : json['rtg_code'],
    };
}

export function CartPaymentToJSON(value?: CartPayment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'affirm': CartPaymentAffirmToJSON(value.affirm),
        'amazon': CartPaymentAmazonToJSON(value.amazon),
        'check': CartPaymentCheckToJSON(value.check),
        'credit_card': CartPaymentCreditCardToJSON(value.credit_card),
        'health_benefit_card': CartPaymentHealthBenefitCardToJSON(value.health_benefit_card),
        'payment_method': value.payment_method,
        'purchase_order': CartPaymentPurchaseOrderToJSON(value.purchase_order),
        'rtg_code': value.rtg_code,
    };
}

