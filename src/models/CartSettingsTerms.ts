/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CartSettingsTerms
 */
export interface CartSettingsTerms {
    /**
     * HTML version of the terms
     * @type {string}
     * @memberof CartSettingsTerms
     */
    html?: string;
    /**
     * Text version of the terms.
     * @type {string}
     * @memberof CartSettingsTerms
     */
    text?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CartSettingsTerms)[] = ["html", "text"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CartSettingsTerms interface.
 */
export function instanceOfCartSettingsTerms(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartSettingsTermsFromJSON(json: any): CartSettingsTerms {
    return CartSettingsTermsFromJSONTyped(json, false);
}

export function CartSettingsTermsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartSettingsTerms {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'html': !exists(json, 'html') ? undefined : json['html'],
        'text': !exists(json, 'text') ? undefined : json['text'],
    };
}

export function CartSettingsTermsToJSON(value?: CartSettingsTerms | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'html': value.html,
        'text': value.text,
    };
}

