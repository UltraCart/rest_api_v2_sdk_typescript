/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntegrationLogFile
 */
export interface IntegrationLogFile {
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogFile
     */
    mime_type?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogFile
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof IntegrationLogFile
     */
    size?: number;
    /**
     * 
     * @type {string}
     * @memberof IntegrationLogFile
     */
    uuid?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof IntegrationLogFile)[] = ["mime_type", "name", "size", "uuid"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the IntegrationLogFile interface.
 */
export function instanceOfIntegrationLogFile(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IntegrationLogFileFromJSON(json: any): IntegrationLogFile {
    return IntegrationLogFileFromJSONTyped(json, false);
}

export function IntegrationLogFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationLogFile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'mime_type': !exists(json, 'mime_type') ? undefined : json['mime_type'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'size': !exists(json, 'size') ? undefined : json['size'],
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
    };
}

export function IntegrationLogFileToJSON(value?: IntegrationLogFile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'mime_type': value.mime_type,
        'name': value.name,
        'size': value.size,
        'uuid': value.uuid,
    };
}

