/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConversationParticipant,
    ConversationParticipantFromJSON,
    ConversationParticipantFromJSONTyped,
    ConversationParticipantToJSON,
} from './ConversationParticipant';

/**
 * 
 * @export
 * @interface ConversationSummary
 */
export interface ConversationSummary {
    /**
     * 
     * @type {boolean}
     * @memberof ConversationSummary
     */
    closed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ConversationSummary
     */
    conversation_arn?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSummary
     */
    conversation_uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSummary
     */
    last_conversation_message_body?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSummary
     */
    last_conversation_participant_arn?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSummary
     */
    last_conversation_participant_name?: string;
    /**
     * Last message date/time
     * @type {string}
     * @memberof ConversationSummary
     */
    last_message_dts?: string;
    /**
     * The communication medium of the customer.
     * @type {string}
     * @memberof ConversationSummary
     */
    medium?: ConversationSummaryMediumEnum;
    /**
     * 
     * @type {string}
     * @memberof ConversationSummary
     */
    merchant_id?: string;
    /**
     * 
     * @type {number}
     * @memberof ConversationSummary
     */
    message_count?: number;
    /**
     * 
     * @type {Array<ConversationParticipant>}
     * @memberof ConversationSummary
     */
    participants?: Array<ConversationParticipant>;
    /**
     * Start of the conversation date/time
     * @type {string}
     * @memberof ConversationSummary
     */
    start_dts?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationSummary
     */
    unread_messages?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationSummary
     */
    visible?: boolean;
}


/**
 * @export
 */
export const ConversationSummaryMediumEnum = {
    Sms: 'sms',
    Websocket: 'websocket'
} as const;
export type ConversationSummaryMediumEnum = typeof ConversationSummaryMediumEnum[keyof typeof ConversationSummaryMediumEnum];


export function ConversationSummaryFromJSON(json: any): ConversationSummary {
    return ConversationSummaryFromJSONTyped(json, false);
}

export function ConversationSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'closed': !exists(json, 'closed') ? undefined : json['closed'],
        'conversation_arn': !exists(json, 'conversation_arn') ? undefined : json['conversation_arn'],
        'conversation_uuid': !exists(json, 'conversation_uuid') ? undefined : json['conversation_uuid'],
        'last_conversation_message_body': !exists(json, 'last_conversation_message_body') ? undefined : json['last_conversation_message_body'],
        'last_conversation_participant_arn': !exists(json, 'last_conversation_participant_arn') ? undefined : json['last_conversation_participant_arn'],
        'last_conversation_participant_name': !exists(json, 'last_conversation_participant_name') ? undefined : json['last_conversation_participant_name'],
        'last_message_dts': !exists(json, 'last_message_dts') ? undefined : json['last_message_dts'],
        'medium': !exists(json, 'medium') ? undefined : json['medium'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'message_count': !exists(json, 'message_count') ? undefined : json['message_count'],
        'participants': !exists(json, 'participants') ? undefined : ((json['participants'] as Array<any>).map(ConversationParticipantFromJSON)),
        'start_dts': !exists(json, 'start_dts') ? undefined : json['start_dts'],
        'unread_messages': !exists(json, 'unread_messages') ? undefined : json['unread_messages'],
        'visible': !exists(json, 'visible') ? undefined : json['visible'],
    };
}

export function ConversationSummaryToJSON(value?: ConversationSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'closed': value.closed,
        'conversation_arn': value.conversation_arn,
        'conversation_uuid': value.conversation_uuid,
        'last_conversation_message_body': value.last_conversation_message_body,
        'last_conversation_participant_arn': value.last_conversation_participant_arn,
        'last_conversation_participant_name': value.last_conversation_participant_name,
        'last_message_dts': value.last_message_dts,
        'medium': value.medium,
        'merchant_id': value.merchant_id,
        'message_count': value.message_count,
        'participants': value.participants === undefined ? undefined : ((value.participants as Array<any>).map(ConversationParticipantToJSON)),
        'start_dts': value.start_dts,
        'unread_messages': value.unread_messages,
        'visible': value.visible,
    };
}

