/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationAgentProfile
 */
export interface ConversationAgentProfile {
    /**
     * AI powered chat bot
     * @type {boolean}
     * @memberof ConversationAgentProfile
     */
    ai?: boolean;
    /**
     * Additional instructions for this AI when handle web chats
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    ai_chat_instructions?: string;
    /**
     * Persona of this AI agent
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    ai_persona?: string;
    /**
     * Additional instructions for this AI when handle SMS messages
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    ai_sms_instructions?: string;
    /**
     * The number of engagement chats that can be pushed on them at any given time.
     * @type {number}
     * @memberof ConversationAgentProfile
     */
    chat_limit?: number;
    /**
     * The default language the agent is chatting in
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    default_language_iso_code?: string;
    /**
     * Default status when the agent loads conversations app.
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    default_status?: ConversationAgentProfileDefaultStatusEnum;
    /**
     * An alternate name that the agent wants to use in chat.
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    display_name?: string;
    /**
     * Their actual user name for profile settings display as placeholder test
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    name?: string;
    /**
     * An upload key used to update the profile image.
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    profile_image_upload_key?: string;
    /**
     * Their current profile image URL
     * @type {string}
     * @memberof ConversationAgentProfile
     */
    profile_image_url?: string;
    /**
     * User ID associated with the agent.  Populated by getAgentProfiles call only.
     * @type {number}
     * @memberof ConversationAgentProfile
     */
    user_id?: number;
}



/**
 * @export
 */
export const ConversationAgentProfileDefaultStatusEnum = {
    Available: 'available',
    Busy: 'busy',
    Unavailable: 'unavailable'
} as const;
export type ConversationAgentProfileDefaultStatusEnum = typeof ConversationAgentProfileDefaultStatusEnum[keyof typeof ConversationAgentProfileDefaultStatusEnum];


/**
 * Check if a given object implements the ConversationAgentProfile interface.
 */
export function instanceOfConversationAgentProfile(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationAgentProfileFromJSON(json: any): ConversationAgentProfile {
    return ConversationAgentProfileFromJSONTyped(json, false);
}

export function ConversationAgentProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationAgentProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ai': !exists(json, 'ai') ? undefined : json['ai'],
        'ai_chat_instructions': !exists(json, 'ai_chat_instructions') ? undefined : json['ai_chat_instructions'],
        'ai_persona': !exists(json, 'ai_persona') ? undefined : json['ai_persona'],
        'ai_sms_instructions': !exists(json, 'ai_sms_instructions') ? undefined : json['ai_sms_instructions'],
        'chat_limit': !exists(json, 'chat_limit') ? undefined : json['chat_limit'],
        'default_language_iso_code': !exists(json, 'default_language_iso_code') ? undefined : json['default_language_iso_code'],
        'default_status': !exists(json, 'default_status') ? undefined : json['default_status'],
        'display_name': !exists(json, 'display_name') ? undefined : json['display_name'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'profile_image_upload_key': !exists(json, 'profile_image_upload_key') ? undefined : json['profile_image_upload_key'],
        'profile_image_url': !exists(json, 'profile_image_url') ? undefined : json['profile_image_url'],
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
    };
}

export function ConversationAgentProfileToJSON(value?: ConversationAgentProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ai': value.ai,
        'ai_chat_instructions': value.ai_chat_instructions,
        'ai_persona': value.ai_persona,
        'ai_sms_instructions': value.ai_sms_instructions,
        'chat_limit': value.chat_limit,
        'default_language_iso_code': value.default_language_iso_code,
        'default_status': value.default_status,
        'display_name': value.display_name,
        'name': value.name,
        'profile_image_upload_key': value.profile_image_upload_key,
        'profile_image_url': value.profile_image_url,
        'user_id': value.user_id,
    };
}

