/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemCheckout
 */
export interface ItemCheckout {
    /**
     * True to suppress buySAFE (deprecated)
     * @type {boolean}
     * @memberof ItemCheckout
     */
    suppress_buysafe?: boolean;
    /**
     * Terms for purchasing this item
     * @type {string}
     * @memberof ItemCheckout
     */
    terms?: string;
    /**
     * Terms only apply if the item is on auto order
     * @type {boolean}
     * @memberof ItemCheckout
     */
    terms_if_auto_order?: boolean;
    /**
     * Terms translated text instance identifier
     * @type {number}
     * @memberof ItemCheckout
     */
    terms_translated_text_instance_oid?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ItemCheckout)[] = ["suppress_buysafe", "terms", "terms_if_auto_order", "terms_translated_text_instance_oid"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ItemCheckout interface.
 */
export function instanceOfItemCheckout(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemCheckoutFromJSON(json: any): ItemCheckout {
    return ItemCheckoutFromJSONTyped(json, false);
}

export function ItemCheckoutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemCheckout {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'suppress_buysafe': !exists(json, 'suppress_buysafe') ? undefined : json['suppress_buysafe'],
        'terms': !exists(json, 'terms') ? undefined : json['terms'],
        'terms_if_auto_order': !exists(json, 'terms_if_auto_order') ? undefined : json['terms_if_auto_order'],
        'terms_translated_text_instance_oid': !exists(json, 'terms_translated_text_instance_oid') ? undefined : json['terms_translated_text_instance_oid'],
    };
}

export function ItemCheckoutToJSON(value?: ItemCheckout | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'suppress_buysafe': value.suppress_buysafe,
        'terms': value.terms,
        'terms_if_auto_order': value.terms_if_auto_order,
        'terms_translated_text_instance_oid': value.terms_translated_text_instance_oid,
    };
}

