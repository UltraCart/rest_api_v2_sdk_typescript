/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AutoOrderItemFutureSchedule,
    AutoOrderItemFutureScheduleFromJSON,
    AutoOrderItemFutureScheduleFromJSONTyped,
    AutoOrderItemFutureScheduleToJSON,
} from './AutoOrderItemFutureSchedule';
import {
    AutoOrderItemOption,
    AutoOrderItemOptionFromJSON,
    AutoOrderItemOptionFromJSONTyped,
    AutoOrderItemOptionToJSON,
} from './AutoOrderItemOption';
import {
    AutoOrderItemSimpleSchedule,
    AutoOrderItemSimpleScheduleFromJSON,
    AutoOrderItemSimpleScheduleFromJSONTyped,
    AutoOrderItemSimpleScheduleToJSON,
} from './AutoOrderItemSimpleSchedule';

/**
 * 
 * @export
 * @interface AutoOrderItem
 */
export interface AutoOrderItem {
    /**
     * Arbitrary item id that should be rebilled instead of the normal schedule
     * @type {string}
     * @memberof AutoOrderItem
     */
    arbitrary_item_id?: string;
    /**
     * An arbitrary percentage discount to provide on future rebills
     * @type {number}
     * @memberof AutoOrderItem
     */
    arbitrary_percentage_discount?: number;
    /**
     * Arbitrary quantity to rebill
     * @type {number}
     * @memberof AutoOrderItem
     */
    arbitrary_quantity?: number;
    /**
     * The number of days to rebill if the frequency is set to an arbitrary number of days
     * @type {number}
     * @memberof AutoOrderItem
     */
    arbitrary_schedule_days?: number;
    /**
     * Arbitrary unit cost that rebills of this item should occur at
     * @type {number}
     * @memberof AutoOrderItem
     */
    arbitrary_unit_cost?: number;
    /**
     * The number of rebills to give the arbitrary unit cost on before reverting to normal pricing.
     * @type {number}
     * @memberof AutoOrderItem
     */
    arbitrary_unit_cost_remaining_orders?: number;
    /**
     * Primary key of AutoOrderItem
     * @type {number}
     * @memberof AutoOrderItem
     */
    auto_order_item_oid?: number;
    /**
     * Calculated Date/time that this item is scheduled to rebill.  Will be null if no more shipments are going to occur on this item
     * @type {string}
     * @memberof AutoOrderItem
     */
    calculated_next_shipment_dts?: string;
    /**
     * Date/time of the first order of this item.  Null if item added to auto order and has not been rebilled yet.
     * @type {string}
     * @memberof AutoOrderItem
     */
    first_order_dts?: string;
    /**
     * Frequency of the rebill if not a fixed schedule
     * @type {string}
     * @memberof AutoOrderItem
     */
    frequency?: AutoOrderItemFrequencyEnum;
    /**
     * The future rebill schedule for this item up to the next ten rebills
     * @type {Array<AutoOrderItemFutureSchedule>}
     * @memberof AutoOrderItem
     */
    future_schedules?: Array<AutoOrderItemFutureSchedule>;
    /**
     * Date/time of the last order of this item
     * @type {string}
     * @memberof AutoOrderItem
     */
    last_order_dts?: string;
    /**
     * The life time value of this item including the original purchase
     * @type {number}
     * @memberof AutoOrderItem
     */
    life_time_value?: number;
    /**
     * Calculated next item id
     * @type {string}
     * @memberof AutoOrderItem
     */
    next_item_id?: string;
    /**
     * The date/time of when the next pre-shipment notice should be sent
     * @type {string}
     * @memberof AutoOrderItem
     */
    next_preshipment_notice_dts?: string;
    /**
     * Date/time that this item is scheduled to rebill
     * @type {string}
     * @memberof AutoOrderItem
     */
    next_shipment_dts?: string;
    /**
     * Date/time after which no additional rebills of this item should occur
     * @type {string}
     * @memberof AutoOrderItem
     */
    no_order_after_dts?: string;
    /**
     * The number of times this item has rebilled
     * @type {number}
     * @memberof AutoOrderItem
     */
    number_of_rebills?: number;
    /**
     * Options associated with this item
     * @type {Array<AutoOrderItemOption>}
     * @memberof AutoOrderItem
     */
    options?: Array<AutoOrderItemOption>;
    /**
     * The original item id purchased.  This item controls scheduling.  If you wish to modify a schedule, for example, from monthly to yearly, change this item from your monthly item to your yearly item, and then change the next_shipment_dts to your desired date.
     * @type {string}
     * @memberof AutoOrderItem
     */
    original_item_id?: string;
    /**
     * The original quantity purchased
     * @type {number}
     * @memberof AutoOrderItem
     */
    original_quantity?: number;
    /**
     * True if paused.  This field is an object instead of a primitive for backwards compatibility.
     * @type {boolean}
     * @memberof AutoOrderItem
     */
    paused?: boolean;
    /**
     * The PayPal Payer ID tied to this item
     * @type {string}
     * @memberof AutoOrderItem
     */
    paypal_payer_id?: string;
    /**
     * The PayPal Profile ID tied to this item
     * @type {string}
     * @memberof AutoOrderItem
     */
    paypal_recurring_payment_profile_id?: string;
    /**
     * True if the preshipment notice associated with the next rebill has been sent
     * @type {boolean}
     * @memberof AutoOrderItem
     */
    preshipment_notice_sent?: boolean;
    /**
     * The value of the rebills of this item
     * @type {number}
     * @memberof AutoOrderItem
     */
    rebill_value?: number;
    /**
     * The number of rebills remaining before this item is complete
     * @type {number}
     * @memberof AutoOrderItem
     */
    remaining_repeat_count?: number;
    /**
     * 
     * @type {AutoOrderItemSimpleSchedule}
     * @memberof AutoOrderItem
     */
    simple_schedule?: AutoOrderItemSimpleSchedule;
}



/**
 * @export
 */
export const AutoOrderItemFrequencyEnum = {
    Weekly: 'Weekly',
    Biweekly: 'Biweekly',
    Every: 'Every...',
    Every10Days: 'Every 10 Days',
    Every24Days: 'Every 24 Days',
    Every28Days: 'Every 28 Days',
    Monthly: 'Monthly',
    Every45Days: 'Every 45 Days',
    Every2Months: 'Every 2 Months',
    Every3Months: 'Every 3 Months',
    Every4Months: 'Every 4 Months',
    Every5Months: 'Every 5 Months',
    Every6Months: 'Every 6 Months',
    Yearly: 'Yearly',
    Every4Weeks: 'Every 4 Weeks',
    Every6Weeks: 'Every 6 Weeks',
    Every8Weeks: 'Every 8 Weeks'
} as const;
export type AutoOrderItemFrequencyEnum = typeof AutoOrderItemFrequencyEnum[keyof typeof AutoOrderItemFrequencyEnum];


/**
 * Check if a given object implements the AutoOrderItem interface.
 */
export function instanceOfAutoOrderItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AutoOrderItemFromJSON(json: any): AutoOrderItem {
    return AutoOrderItemFromJSONTyped(json, false);
}

export function AutoOrderItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AutoOrderItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'arbitrary_item_id': !exists(json, 'arbitrary_item_id') ? undefined : json['arbitrary_item_id'],
        'arbitrary_percentage_discount': !exists(json, 'arbitrary_percentage_discount') ? undefined : json['arbitrary_percentage_discount'],
        'arbitrary_quantity': !exists(json, 'arbitrary_quantity') ? undefined : json['arbitrary_quantity'],
        'arbitrary_schedule_days': !exists(json, 'arbitrary_schedule_days') ? undefined : json['arbitrary_schedule_days'],
        'arbitrary_unit_cost': !exists(json, 'arbitrary_unit_cost') ? undefined : json['arbitrary_unit_cost'],
        'arbitrary_unit_cost_remaining_orders': !exists(json, 'arbitrary_unit_cost_remaining_orders') ? undefined : json['arbitrary_unit_cost_remaining_orders'],
        'auto_order_item_oid': !exists(json, 'auto_order_item_oid') ? undefined : json['auto_order_item_oid'],
        'calculated_next_shipment_dts': !exists(json, 'calculated_next_shipment_dts') ? undefined : json['calculated_next_shipment_dts'],
        'first_order_dts': !exists(json, 'first_order_dts') ? undefined : json['first_order_dts'],
        'frequency': !exists(json, 'frequency') ? undefined : json['frequency'],
        'future_schedules': !exists(json, 'future_schedules') ? undefined : ((json['future_schedules'] as Array<any>).map(AutoOrderItemFutureScheduleFromJSON)),
        'last_order_dts': !exists(json, 'last_order_dts') ? undefined : json['last_order_dts'],
        'life_time_value': !exists(json, 'life_time_value') ? undefined : json['life_time_value'],
        'next_item_id': !exists(json, 'next_item_id') ? undefined : json['next_item_id'],
        'next_preshipment_notice_dts': !exists(json, 'next_preshipment_notice_dts') ? undefined : json['next_preshipment_notice_dts'],
        'next_shipment_dts': !exists(json, 'next_shipment_dts') ? undefined : json['next_shipment_dts'],
        'no_order_after_dts': !exists(json, 'no_order_after_dts') ? undefined : json['no_order_after_dts'],
        'number_of_rebills': !exists(json, 'number_of_rebills') ? undefined : json['number_of_rebills'],
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(AutoOrderItemOptionFromJSON)),
        'original_item_id': !exists(json, 'original_item_id') ? undefined : json['original_item_id'],
        'original_quantity': !exists(json, 'original_quantity') ? undefined : json['original_quantity'],
        'paused': !exists(json, 'paused') ? undefined : json['paused'],
        'paypal_payer_id': !exists(json, 'paypal_payer_id') ? undefined : json['paypal_payer_id'],
        'paypal_recurring_payment_profile_id': !exists(json, 'paypal_recurring_payment_profile_id') ? undefined : json['paypal_recurring_payment_profile_id'],
        'preshipment_notice_sent': !exists(json, 'preshipment_notice_sent') ? undefined : json['preshipment_notice_sent'],
        'rebill_value': !exists(json, 'rebill_value') ? undefined : json['rebill_value'],
        'remaining_repeat_count': !exists(json, 'remaining_repeat_count') ? undefined : json['remaining_repeat_count'],
        'simple_schedule': !exists(json, 'simple_schedule') ? undefined : AutoOrderItemSimpleScheduleFromJSON(json['simple_schedule']),
    };
}

export function AutoOrderItemToJSON(value?: AutoOrderItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'arbitrary_item_id': value.arbitrary_item_id,
        'arbitrary_percentage_discount': value.arbitrary_percentage_discount,
        'arbitrary_quantity': value.arbitrary_quantity,
        'arbitrary_schedule_days': value.arbitrary_schedule_days,
        'arbitrary_unit_cost': value.arbitrary_unit_cost,
        'arbitrary_unit_cost_remaining_orders': value.arbitrary_unit_cost_remaining_orders,
        'auto_order_item_oid': value.auto_order_item_oid,
        'calculated_next_shipment_dts': value.calculated_next_shipment_dts,
        'first_order_dts': value.first_order_dts,
        'frequency': value.frequency,
        'future_schedules': value.future_schedules === undefined ? undefined : ((value.future_schedules as Array<any>).map(AutoOrderItemFutureScheduleToJSON)),
        'last_order_dts': value.last_order_dts,
        'life_time_value': value.life_time_value,
        'next_item_id': value.next_item_id,
        'next_preshipment_notice_dts': value.next_preshipment_notice_dts,
        'next_shipment_dts': value.next_shipment_dts,
        'no_order_after_dts': value.no_order_after_dts,
        'number_of_rebills': value.number_of_rebills,
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(AutoOrderItemOptionToJSON)),
        'original_item_id': value.original_item_id,
        'original_quantity': value.original_quantity,
        'paused': value.paused,
        'paypal_payer_id': value.paypal_payer_id,
        'paypal_recurring_payment_profile_id': value.paypal_recurring_payment_profile_id,
        'preshipment_notice_sent': value.preshipment_notice_sent,
        'rebill_value': value.rebill_value,
        'remaining_repeat_count': value.remaining_repeat_count,
        'simple_schedule': AutoOrderItemSimpleScheduleToJSON(value.simple_schedule),
    };
}

