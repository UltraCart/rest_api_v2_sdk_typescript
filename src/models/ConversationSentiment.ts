/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationSentiment
 */
export interface ConversationSentiment {
    /**
     * The last time the detect sentiment was run on this conversation
     * @type {string}
     * @memberof ConversationSentiment
     */
    last_detect_sentiment?: string;
    /**
     * The mixed score
     * @type {number}
     * @memberof ConversationSentiment
     */
    mixed?: number;
    /**
     * The negative score
     * @type {number}
     * @memberof ConversationSentiment
     */
    negative?: number;
    /**
     * The neutral score
     * @type {number}
     * @memberof ConversationSentiment
     */
    neutral?: number;
    /**
     * The positive score
     * @type {number}
     * @memberof ConversationSentiment
     */
    positive?: number;
    /**
     * The overall sentiment
     * @type {string}
     * @memberof ConversationSentiment
     */
    sentiment?: ConversationSentimentSentimentEnum;
}


/**
 * @export
 */
export const ConversationSentimentSentimentEnum = {
    Positive: 'POSITIVE',
    Neutral: 'NEUTRAL',
    Negative: 'NEGATIVE',
    Mixed: 'MIXED'
} as const;
export type ConversationSentimentSentimentEnum = typeof ConversationSentimentSentimentEnum[keyof typeof ConversationSentimentSentimentEnum];


export function ConversationSentimentFromJSON(json: any): ConversationSentiment {
    return ConversationSentimentFromJSONTyped(json, false);
}

export function ConversationSentimentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationSentiment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'last_detect_sentiment': !exists(json, 'last_detect_sentiment') ? undefined : json['last_detect_sentiment'],
        'mixed': !exists(json, 'mixed') ? undefined : json['mixed'],
        'negative': !exists(json, 'negative') ? undefined : json['negative'],
        'neutral': !exists(json, 'neutral') ? undefined : json['neutral'],
        'positive': !exists(json, 'positive') ? undefined : json['positive'],
        'sentiment': !exists(json, 'sentiment') ? undefined : json['sentiment'],
    };
}

export function ConversationSentimentToJSON(value?: ConversationSentiment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'last_detect_sentiment': value.last_detect_sentiment,
        'mixed': value.mixed,
        'negative': value.negative,
        'neutral': value.neutral,
        'positive': value.positive,
        'sentiment': value.sentiment,
    };
}

