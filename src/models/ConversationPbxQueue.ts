/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConversationPbxQueueMembers,
    ConversationPbxQueueMembersFromJSON,
    ConversationPbxQueueMembersFromJSONTyped,
    ConversationPbxQueueMembersToJSON,
} from './ConversationPbxQueueMembers';

/**
 * 
 * @export
 * @interface ConversationPbxQueue
 */
export interface ConversationPbxQueue {
    /**
     * If true, the customer is told their queue position upon entering the queue
     * @type {boolean}
     * @memberof ConversationPbxQueue
     */
    announce_queue_position?: boolean;
    /**
     * Conversation Pbx Queue unique identifier
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    conversation_pbx_queue_uuid?: string;
    /**
     * The voicemail mailbox associated with this queue
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    conversation_voicemail_mailbox_uuid?: string;
    /**
     * The audio to play while holding in a queue
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    hold_conversation_pbx_audio_uuid?: string;
    /**
     * The maximum number of seconds for a customer to hold in a queue
     * @type {number}
     * @memberof ConversationPbxQueue
     */
    max_hold_seconds?: number;
    /**
     * 
     * @type {ConversationPbxQueueMembers}
     * @memberof ConversationPbxQueue
     */
    members?: ConversationPbxQueueMembers;
    /**
     * Merchant Id
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    merchant_id?: string;
    /**
     * Name of queue
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    name?: string;
    /**
     * When no agent is available after the max_hold_seconds, say this
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    no_agent_available_play_audio_uuid?: string;
    /**
     * When no agent is available after the max_hold_seconds, say this
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    no_agent_available_say?: string;
    /**
     * The type of voice used to say text when no agent is available
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    no_agent_available_say_voice?: string;
    /**
     * Audio played when customer enters a queue
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    play_audio_uuid?: string;
    /**
     * If true, any calls in this queue are recorded
     * @type {boolean}
     * @memberof ConversationPbxQueue
     */
    record_call?: boolean;
    /**
     * Say text when a customer enters queue
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    say?: string;
    /**
     * The type of voice to use when say text is spoken
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    say_voice?: string;
    /**
     * Twilio taskrouter workflow sid
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    twilio_taskrouter_workflow_sid?: string;
    /**
     * Twilio workspace queue sid
     * @type {string}
     * @memberof ConversationPbxQueue
     */
    twilio_workspace_queue_sid?: string;
    /**
     * If true, this queue has a voicemail associated with it
     * @type {boolean}
     * @memberof ConversationPbxQueue
     */
    voicemail?: boolean;
    /**
     * Wait time in seconds before critical
     * @type {number}
     * @memberof ConversationPbxQueue
     */
    wait_critical_seconds?: number;
    /**
     * Wait time in seconds before warning
     * @type {number}
     * @memberof ConversationPbxQueue
     */
    wait_warning_seconds?: number;
    /**
     * Wrap up time in seconds
     * @type {number}
     * @memberof ConversationPbxQueue
     */
    wrap_up_seconds?: number;
}

export function ConversationPbxQueueFromJSON(json: any): ConversationPbxQueue {
    return ConversationPbxQueueFromJSONTyped(json, false);
}

export function ConversationPbxQueueFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationPbxQueue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'announce_queue_position': !exists(json, 'announce_queue_position') ? undefined : json['announce_queue_position'],
        'conversation_pbx_queue_uuid': !exists(json, 'conversation_pbx_queue_uuid') ? undefined : json['conversation_pbx_queue_uuid'],
        'conversation_voicemail_mailbox_uuid': !exists(json, 'conversation_voicemail_mailbox_uuid') ? undefined : json['conversation_voicemail_mailbox_uuid'],
        'hold_conversation_pbx_audio_uuid': !exists(json, 'hold_conversation_pbx_audio_uuid') ? undefined : json['hold_conversation_pbx_audio_uuid'],
        'max_hold_seconds': !exists(json, 'max_hold_seconds') ? undefined : json['max_hold_seconds'],
        'members': !exists(json, 'members') ? undefined : ConversationPbxQueueMembersFromJSON(json['members']),
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'no_agent_available_play_audio_uuid': !exists(json, 'no_agent_available_play_audio_uuid') ? undefined : json['no_agent_available_play_audio_uuid'],
        'no_agent_available_say': !exists(json, 'no_agent_available_say') ? undefined : json['no_agent_available_say'],
        'no_agent_available_say_voice': !exists(json, 'no_agent_available_say_voice') ? undefined : json['no_agent_available_say_voice'],
        'play_audio_uuid': !exists(json, 'play_audio_uuid') ? undefined : json['play_audio_uuid'],
        'record_call': !exists(json, 'record_call') ? undefined : json['record_call'],
        'say': !exists(json, 'say') ? undefined : json['say'],
        'say_voice': !exists(json, 'say_voice') ? undefined : json['say_voice'],
        'twilio_taskrouter_workflow_sid': !exists(json, 'twilio_taskrouter_workflow_sid') ? undefined : json['twilio_taskrouter_workflow_sid'],
        'twilio_workspace_queue_sid': !exists(json, 'twilio_workspace_queue_sid') ? undefined : json['twilio_workspace_queue_sid'],
        'voicemail': !exists(json, 'voicemail') ? undefined : json['voicemail'],
        'wait_critical_seconds': !exists(json, 'wait_critical_seconds') ? undefined : json['wait_critical_seconds'],
        'wait_warning_seconds': !exists(json, 'wait_warning_seconds') ? undefined : json['wait_warning_seconds'],
        'wrap_up_seconds': !exists(json, 'wrap_up_seconds') ? undefined : json['wrap_up_seconds'],
    };
}

export function ConversationPbxQueueToJSON(value?: ConversationPbxQueue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'announce_queue_position': value.announce_queue_position,
        'conversation_pbx_queue_uuid': value.conversation_pbx_queue_uuid,
        'conversation_voicemail_mailbox_uuid': value.conversation_voicemail_mailbox_uuid,
        'hold_conversation_pbx_audio_uuid': value.hold_conversation_pbx_audio_uuid,
        'max_hold_seconds': value.max_hold_seconds,
        'members': ConversationPbxQueueMembersToJSON(value.members),
        'merchant_id': value.merchant_id,
        'name': value.name,
        'no_agent_available_play_audio_uuid': value.no_agent_available_play_audio_uuid,
        'no_agent_available_say': value.no_agent_available_say,
        'no_agent_available_say_voice': value.no_agent_available_say_voice,
        'play_audio_uuid': value.play_audio_uuid,
        'record_call': value.record_call,
        'say': value.say,
        'say_voice': value.say_voice,
        'twilio_taskrouter_workflow_sid': value.twilio_taskrouter_workflow_sid,
        'twilio_workspace_queue_sid': value.twilio_workspace_queue_sid,
        'voicemail': value.voicemail,
        'wait_critical_seconds': value.wait_critical_seconds,
        'wait_warning_seconds': value.wait_warning_seconds,
        'wrap_up_seconds': value.wrap_up_seconds,
    };
}

