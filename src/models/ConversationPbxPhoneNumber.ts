/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationPbxPhoneNumber
 */
export interface ConversationPbxPhoneNumber {
    /**
     * Action
     * @type {string}
     * @memberof ConversationPbxPhoneNumber
     */
    action?: ConversationPbxPhoneNumberActionEnum;
    /**
     * Action target.  This is the UUID associated with the configuration object of that particular type.
     * @type {string}
     * @memberof ConversationPbxPhoneNumber
     */
    action_target?: string;
    /**
     * Conversation Pbx Phone Number UUID
     * @type {string}
     * @memberof ConversationPbxPhoneNumber
     */
    conversation_pbx_phone_number_uuid?: string;
    /**
     * Merchant Id
     * @type {string}
     * @memberof ConversationPbxPhoneNumber
     */
    merchant_id?: string;
    /**
     * Phone number
     * @type {string}
     * @memberof ConversationPbxPhoneNumber
     */
    phone_number?: string;
}



/**
 * @export
 */
export const ConversationPbxPhoneNumberActionEnum = {
    TimeBased: 'time based',
    Menu: 'menu',
    Queue: 'queue',
    Voicemail: 'voicemail',
    Agent: 'agent'
} as const;
export type ConversationPbxPhoneNumberActionEnum = typeof ConversationPbxPhoneNumberActionEnum[keyof typeof ConversationPbxPhoneNumberActionEnum];


/**
 * Check if a given object implements the ConversationPbxPhoneNumber interface.
 */
export function instanceOfConversationPbxPhoneNumber(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationPbxPhoneNumberFromJSON(json: any): ConversationPbxPhoneNumber {
    return ConversationPbxPhoneNumberFromJSONTyped(json, false);
}

export function ConversationPbxPhoneNumberFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationPbxPhoneNumber {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': !exists(json, 'action') ? undefined : json['action'],
        'action_target': !exists(json, 'action_target') ? undefined : json['action_target'],
        'conversation_pbx_phone_number_uuid': !exists(json, 'conversation_pbx_phone_number_uuid') ? undefined : json['conversation_pbx_phone_number_uuid'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'phone_number': !exists(json, 'phone_number') ? undefined : json['phone_number'],
    };
}

export function ConversationPbxPhoneNumberToJSON(value?: ConversationPbxPhoneNumber | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'action_target': value.action_target,
        'conversation_pbx_phone_number_uuid': value.conversation_pbx_phone_number_uuid,
        'merchant_id': value.merchant_id,
        'phone_number': value.phone_number,
    };
}

