/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Currency,
    CurrencyFromJSON,
    CurrencyFromJSONTyped,
    CurrencyToJSON,
} from './Currency';

/**
 * 
 * @export
 * @interface EmailOrder
 */
export interface EmailOrder {
    /**
     * email
     * @type {string}
     * @memberof EmailOrder
     */
    email?: string;
    /**
     * order_dts
     * @type {string}
     * @memberof EmailOrder
     */
    order_dts?: string;
    /**
     * order_id
     * @type {string}
     * @memberof EmailOrder
     */
    order_id?: string;
    /**
     * 
     * @type {Currency}
     * @memberof EmailOrder
     */
    total?: Currency;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof EmailOrder)[] = ["email", "order_dts", "order_id", "total"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the EmailOrder interface.
 */
export function instanceOfEmailOrder(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EmailOrderFromJSON(json: any): EmailOrder {
    return EmailOrderFromJSONTyped(json, false);
}

export function EmailOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailOrder {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'order_dts': !exists(json, 'order_dts') ? undefined : json['order_dts'],
        'order_id': !exists(json, 'order_id') ? undefined : json['order_id'],
        'total': !exists(json, 'total') ? undefined : CurrencyFromJSON(json['total']),
    };
}

export function EmailOrderToJSON(value?: EmailOrder | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'order_dts': value.order_dts,
        'order_id': value.order_id,
        'total': CurrencyToJSON(value.total),
    };
}

