/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScreenRecordingFilterGeoDistance
 */
export interface ScreenRecordingFilterGeoDistance {
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterGeoDistance
     */
    distance?: number;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecordingFilterGeoDistance
     */
    distance_uom?: string;
    /**
     * 
     * @type {string}
     * @memberof ScreenRecordingFilterGeoDistance
     */
    from_address?: string;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterGeoDistance
     */
    lat?: number;
    /**
     * 
     * @type {number}
     * @memberof ScreenRecordingFilterGeoDistance
     */
    lon?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ScreenRecordingFilterGeoDistance)[] = ["distance", "distance_uom", "from_address", "lat", "lon"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ScreenRecordingFilterGeoDistance interface.
 */
export function instanceOfScreenRecordingFilterGeoDistance(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScreenRecordingFilterGeoDistanceFromJSON(json: any): ScreenRecordingFilterGeoDistance {
    return ScreenRecordingFilterGeoDistanceFromJSONTyped(json, false);
}

export function ScreenRecordingFilterGeoDistanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenRecordingFilterGeoDistance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'distance': !exists(json, 'distance') ? undefined : json['distance'],
        'distance_uom': !exists(json, 'distance_uom') ? undefined : json['distance_uom'],
        'from_address': !exists(json, 'from_address') ? undefined : json['from_address'],
        'lat': !exists(json, 'lat') ? undefined : json['lat'],
        'lon': !exists(json, 'lon') ? undefined : json['lon'],
    };
}

export function ScreenRecordingFilterGeoDistanceToJSON(value?: ScreenRecordingFilterGeoDistance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'distance': value.distance,
        'distance_uom': value.distance_uom,
        'from_address': value.from_address,
        'lat': value.lat,
        'lon': value.lon,
    };
}

