/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemPricingTier,
    ItemPricingTierFromJSON,
    ItemPricingTierFromJSONTyped,
    ItemPricingTierToJSON,
} from './ItemPricingTier';

/**
 * 
 * @export
 * @interface ItemPricing
 */
export interface ItemPricing {
    /**
     * Allow arbitrary cost
     * @type {boolean}
     * @memberof ItemPricing
     */
    allow_arbitrary_cost?: boolean;
    /**
     * Arbitrary cost velocity code
     * @type {string}
     * @memberof ItemPricing
     */
    arbitrary_cost_velocity_code?: string;
    /**
     * Cost if customer selects to receive item on auto order.  Set to zero to delete.
     * @type {number}
     * @memberof ItemPricing
     */
    auto_order_cost?: number;
    /**
     * Automatic pricing tier name
     * @type {string}
     * @memberof ItemPricing
     */
    automatic_pricing_tier_name?: string;
    /**
     * Automatic pricing tier object identifier
     * @type {number}
     * @memberof ItemPricing
     */
    automatic_pricing_tier_oid?: number;
    /**
     * Cost of goods sold
     * @type {number}
     * @memberof ItemPricing
     */
    cogs?: number;
    /**
     * Cost
     * @type {number}
     * @memberof ItemPricing
     */
    cost?: number;
    /**
     * Currency code
     * @type {string}
     * @memberof ItemPricing
     */
    currency_code?: string;
    /**
     * Manufacturer suggested retail price
     * @type {number}
     * @memberof ItemPricing
     */
    manufacturer_suggested_retail_price?: number;
    /**
     * Maximum arbitrary cost
     * @type {number}
     * @memberof ItemPricing
     */
    maximum_arbitrary_cost?: number;
    /**
     * Minimum advertised price
     * @type {number}
     * @memberof ItemPricing
     */
    minimum_advertised_price?: number;
    /**
     * Minimum arbitrary cost
     * @type {number}
     * @memberof ItemPricing
     */
    minimum_arbitrary_cost?: number;
    /**
     * Mix and match group
     * @type {string}
     * @memberof ItemPricing
     */
    mix_and_match_group?: string;
    /**
     * Mix and match group object identifier
     * @type {number}
     * @memberof ItemPricing
     */
    mix_and_match_group_oid?: number;
    /**
     * Sale cost
     * @type {number}
     * @memberof ItemPricing
     */
    sale_cost?: number;
    /**
     * Sale end
     * @type {string}
     * @memberof ItemPricing
     */
    sale_end?: string;
    /**
     * Sale start
     * @type {string}
     * @memberof ItemPricing
     */
    sale_start?: string;
    /**
     * Tiers
     * @type {Array<ItemPricingTier>}
     * @memberof ItemPricing
     */
    tiers?: Array<ItemPricingTier>;
}



/**
 * Check if a given object implements the ItemPricing interface.
 */
export function instanceOfItemPricing(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemPricingFromJSON(json: any): ItemPricing {
    return ItemPricingFromJSONTyped(json, false);
}

export function ItemPricingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemPricing {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allow_arbitrary_cost': !exists(json, 'allow_arbitrary_cost') ? undefined : json['allow_arbitrary_cost'],
        'arbitrary_cost_velocity_code': !exists(json, 'arbitrary_cost_velocity_code') ? undefined : json['arbitrary_cost_velocity_code'],
        'auto_order_cost': !exists(json, 'auto_order_cost') ? undefined : json['auto_order_cost'],
        'automatic_pricing_tier_name': !exists(json, 'automatic_pricing_tier_name') ? undefined : json['automatic_pricing_tier_name'],
        'automatic_pricing_tier_oid': !exists(json, 'automatic_pricing_tier_oid') ? undefined : json['automatic_pricing_tier_oid'],
        'cogs': !exists(json, 'cogs') ? undefined : json['cogs'],
        'cost': !exists(json, 'cost') ? undefined : json['cost'],
        'currency_code': !exists(json, 'currency_code') ? undefined : json['currency_code'],
        'manufacturer_suggested_retail_price': !exists(json, 'manufacturer_suggested_retail_price') ? undefined : json['manufacturer_suggested_retail_price'],
        'maximum_arbitrary_cost': !exists(json, 'maximum_arbitrary_cost') ? undefined : json['maximum_arbitrary_cost'],
        'minimum_advertised_price': !exists(json, 'minimum_advertised_price') ? undefined : json['minimum_advertised_price'],
        'minimum_arbitrary_cost': !exists(json, 'minimum_arbitrary_cost') ? undefined : json['minimum_arbitrary_cost'],
        'mix_and_match_group': !exists(json, 'mix_and_match_group') ? undefined : json['mix_and_match_group'],
        'mix_and_match_group_oid': !exists(json, 'mix_and_match_group_oid') ? undefined : json['mix_and_match_group_oid'],
        'sale_cost': !exists(json, 'sale_cost') ? undefined : json['sale_cost'],
        'sale_end': !exists(json, 'sale_end') ? undefined : json['sale_end'],
        'sale_start': !exists(json, 'sale_start') ? undefined : json['sale_start'],
        'tiers': !exists(json, 'tiers') ? undefined : ((json['tiers'] as Array<any>).map(ItemPricingTierFromJSON)),
    };
}

export function ItemPricingToJSON(value?: ItemPricing | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allow_arbitrary_cost': value.allow_arbitrary_cost,
        'arbitrary_cost_velocity_code': value.arbitrary_cost_velocity_code,
        'auto_order_cost': value.auto_order_cost,
        'automatic_pricing_tier_name': value.automatic_pricing_tier_name,
        'automatic_pricing_tier_oid': value.automatic_pricing_tier_oid,
        'cogs': value.cogs,
        'cost': value.cost,
        'currency_code': value.currency_code,
        'manufacturer_suggested_retail_price': value.manufacturer_suggested_retail_price,
        'maximum_arbitrary_cost': value.maximum_arbitrary_cost,
        'minimum_advertised_price': value.minimum_advertised_price,
        'minimum_arbitrary_cost': value.minimum_arbitrary_cost,
        'mix_and_match_group': value.mix_and_match_group,
        'mix_and_match_group_oid': value.mix_and_match_group_oid,
        'sale_cost': value.sale_cost,
        'sale_end': value.sale_end,
        'sale_start': value.sale_start,
        'tiers': value.tiers === undefined ? undefined : ((value.tiers as Array<any>).map(ItemPricingTierToJSON)),
    };
}

