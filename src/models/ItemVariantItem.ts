/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemVariantItem
 */
export interface ItemVariantItem {
    /**
     * Description
     * @type {string}
     * @memberof ItemVariantItem
     */
    description?: string;
    /**
     * Multimedia object identifier
     * @type {number}
     * @memberof ItemVariantItem
     */
    merchant_item_multimedia_oid?: number;
    /**
     * Variant item id
     * @type {string}
     * @memberof ItemVariantItem
     */
    variant_merchant_item_id?: string;
    /**
     * Variant item object identifier
     * @type {number}
     * @memberof ItemVariantItem
     */
    variant_merchant_item_oid?: number;
    /**
     * Variation options
     * @type {Array<string>}
     * @memberof ItemVariantItem
     */
    variation_options?: Array<string>;
    /**
     * Variations
     * @type {Array<string>}
     * @memberof ItemVariantItem
     */
    variations?: Array<string>;
}



/**
 * Check if a given object implements the ItemVariantItem interface.
 */
export function instanceOfItemVariantItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemVariantItemFromJSON(json: any): ItemVariantItem {
    return ItemVariantItemFromJSONTyped(json, false);
}

export function ItemVariantItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemVariantItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'merchant_item_multimedia_oid': !exists(json, 'merchant_item_multimedia_oid') ? undefined : json['merchant_item_multimedia_oid'],
        'variant_merchant_item_id': !exists(json, 'variant_merchant_item_id') ? undefined : json['variant_merchant_item_id'],
        'variant_merchant_item_oid': !exists(json, 'variant_merchant_item_oid') ? undefined : json['variant_merchant_item_oid'],
        'variation_options': !exists(json, 'variation_options') ? undefined : json['variation_options'],
        'variations': !exists(json, 'variations') ? undefined : json['variations'],
    };
}

export function ItemVariantItemToJSON(value?: ItemVariantItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'merchant_item_multimedia_oid': value.merchant_item_multimedia_oid,
        'variant_merchant_item_id': value.variant_merchant_item_id,
        'variant_merchant_item_oid': value.variant_merchant_item_oid,
        'variation_options': value.variation_options,
        'variations': value.variations,
    };
}

