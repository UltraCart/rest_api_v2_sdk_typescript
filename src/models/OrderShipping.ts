/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderTrackingNumberDetails,
    OrderTrackingNumberDetailsFromJSON,
    OrderTrackingNumberDetailsFromJSONTyped,
    OrderTrackingNumberDetailsToJSON,
} from './OrderTrackingNumberDetails';
import {
    Weight,
    WeightFromJSON,
    WeightFromJSONTyped,
    WeightToJSON,
} from './Weight';

/**
 * 
 * @export
 * @interface OrderShipping
 */
export interface OrderShipping {
    /**
     * Address line 1
     * @type {string}
     * @memberof OrderShipping
     */
    address1?: string;
    /**
     * Address line 2
     * @type {string}
     * @memberof OrderShipping
     */
    address2?: string;
    /**
     * City
     * @type {string}
     * @memberof OrderShipping
     */
    city?: string;
    /**
     * Company
     * @type {string}
     * @memberof OrderShipping
     */
    company?: string;
    /**
     * ISO-3166 two letter country code
     * @type {string}
     * @memberof OrderShipping
     */
    country_code?: string;
    /**
     * Day time phone
     * @type {string}
     * @memberof OrderShipping
     */
    day_phone?: string;
    /**
     * Day time phone (E164 format)
     * @type {string}
     * @memberof OrderShipping
     */
    day_phone_e164?: string;
    /**
     * Date the customer is requesting delivery on.  Typically used for perishable product delivery.
     * @type {string}
     * @memberof OrderShipping
     */
    delivery_date?: string;
    /**
     * Evening phone
     * @type {string}
     * @memberof OrderShipping
     */
    evening_phone?: string;
    /**
     * Evening phone (E164 format)
     * @type {string}
     * @memberof OrderShipping
     */
    evening_phone_e164?: string;
    /**
     * First name
     * @type {string}
     * @memberof OrderShipping
     */
    first_name?: string;
    /**
     * Last name
     * @type {string}
     * @memberof OrderShipping
     */
    last_name?: string;
    /**
     * If true, instructs UltraCart to apply the cheapest shipping method to this order.  Used only for channel partner order inserts.
     * @type {boolean}
     * @memberof OrderShipping
     */
    least_cost_route?: boolean;
    /**
     * List of shipping methods to consider if least_code_route is true. Used only for channel parter order inserts.
     * @type {Array<string>}
     * @memberof OrderShipping
     */
    least_cost_route_shipping_methods?: Array<string>;
    /**
     * Lift gate requested (LTL shipping methods only)
     * @type {boolean}
     * @memberof OrderShipping
     */
    lift_gate?: boolean;
    /**
     * Date/time the order should be picked up locally.
     * @type {string}
     * @memberof OrderShipping
     */
    pickup_dts?: string;
    /**
     * Postal code
     * @type {string}
     * @memberof OrderShipping
     */
    postal_code?: string;
    /**
     * RMA number
     * @type {string}
     * @memberof OrderShipping
     */
    rma?: string;
    /**
     * Date the customer is requesting that the order ship on.  Typically used for perishable product delivery.
     * @type {string}
     * @memberof OrderShipping
     */
    ship_on_date?: string;
    /**
     * True if the shipping address is residential.  Effects the methods that are available to the customer as well as the price of the shipping method.
     * @type {boolean}
     * @memberof OrderShipping
     */
    ship_to_residential?: boolean;
    /**
     * Shipping 3rd party account number
     * @type {string}
     * @memberof OrderShipping
     */
    shipping_3rd_party_account_number?: string;
    /**
     * Date/time the order shipped on.  This date is set once the first shipment is sent to the customer.
     * @type {string}
     * @memberof OrderShipping
     */
    shipping_date?: string;
    /**
     * Shipping department status
     * @type {string}
     * @memberof OrderShipping
     */
    shipping_department_status?: string;
    /**
     * Shipping method
     * @type {string}
     * @memberof OrderShipping
     */
    shipping_method?: string;
    /**
     * Shipping method accounting code
     * @type {string}
     * @memberof OrderShipping
     */
    shipping_method_accounting_code?: string;
    /**
     * Special instructions from the customer regarding shipping
     * @type {string}
     * @memberof OrderShipping
     */
    special_instructions?: string;
    /**
     * State
     * @type {string}
     * @memberof OrderShipping
     */
    state_region?: string;
    /**
     * Title
     * @type {string}
     * @memberof OrderShipping
     */
    title?: string;
    /**
     * Tracking number details
     * @type {Array<OrderTrackingNumberDetails>}
     * @memberof OrderShipping
     */
    tracking_number_details?: Array<OrderTrackingNumberDetails>;
    /**
     * Tracking numbers
     * @type {Array<string>}
     * @memberof OrderShipping
     */
    tracking_numbers?: Array<string>;
    /**
     * 
     * @type {Weight}
     * @memberof OrderShipping
     */
    weight?: Weight;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof OrderShipping)[] = ["address1", "address2", "city", "company", "country_code", "day_phone", "day_phone_e164", "delivery_date", "evening_phone", "evening_phone_e164", "first_name", "last_name", "least_cost_route", "least_cost_route_shipping_methods", "lift_gate", "pickup_dts", "postal_code", "rma", "ship_on_date", "ship_to_residential", "shipping_3rd_party_account_number", "shipping_date", "shipping_department_status", "shipping_method", "shipping_method_accounting_code", "special_instructions", "state_region", "title", "tracking_number_details", "tracking_numbers", "weight"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the OrderShipping interface.
 */
export function instanceOfOrderShipping(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderShippingFromJSON(json: any): OrderShipping {
    return OrderShippingFromJSONTyped(json, false);
}

export function OrderShippingFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderShipping {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address1': !exists(json, 'address1') ? undefined : json['address1'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'country_code': !exists(json, 'country_code') ? undefined : json['country_code'],
        'day_phone': !exists(json, 'day_phone') ? undefined : json['day_phone'],
        'day_phone_e164': !exists(json, 'day_phone_e164') ? undefined : json['day_phone_e164'],
        'delivery_date': !exists(json, 'delivery_date') ? undefined : json['delivery_date'],
        'evening_phone': !exists(json, 'evening_phone') ? undefined : json['evening_phone'],
        'evening_phone_e164': !exists(json, 'evening_phone_e164') ? undefined : json['evening_phone_e164'],
        'first_name': !exists(json, 'first_name') ? undefined : json['first_name'],
        'last_name': !exists(json, 'last_name') ? undefined : json['last_name'],
        'least_cost_route': !exists(json, 'least_cost_route') ? undefined : json['least_cost_route'],
        'least_cost_route_shipping_methods': !exists(json, 'least_cost_route_shipping_methods') ? undefined : json['least_cost_route_shipping_methods'],
        'lift_gate': !exists(json, 'lift_gate') ? undefined : json['lift_gate'],
        'pickup_dts': !exists(json, 'pickup_dts') ? undefined : json['pickup_dts'],
        'postal_code': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'rma': !exists(json, 'rma') ? undefined : json['rma'],
        'ship_on_date': !exists(json, 'ship_on_date') ? undefined : json['ship_on_date'],
        'ship_to_residential': !exists(json, 'ship_to_residential') ? undefined : json['ship_to_residential'],
        'shipping_3rd_party_account_number': !exists(json, 'shipping_3rd_party_account_number') ? undefined : json['shipping_3rd_party_account_number'],
        'shipping_date': !exists(json, 'shipping_date') ? undefined : json['shipping_date'],
        'shipping_department_status': !exists(json, 'shipping_department_status') ? undefined : json['shipping_department_status'],
        'shipping_method': !exists(json, 'shipping_method') ? undefined : json['shipping_method'],
        'shipping_method_accounting_code': !exists(json, 'shipping_method_accounting_code') ? undefined : json['shipping_method_accounting_code'],
        'special_instructions': !exists(json, 'special_instructions') ? undefined : json['special_instructions'],
        'state_region': !exists(json, 'state_region') ? undefined : json['state_region'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'tracking_number_details': !exists(json, 'tracking_number_details') ? undefined : ((json['tracking_number_details'] as Array<any>).map(OrderTrackingNumberDetailsFromJSON)),
        'tracking_numbers': !exists(json, 'tracking_numbers') ? undefined : json['tracking_numbers'],
        'weight': !exists(json, 'weight') ? undefined : WeightFromJSON(json['weight']),
    };
}

export function OrderShippingToJSON(value?: OrderShipping | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address1': value.address1,
        'address2': value.address2,
        'city': value.city,
        'company': value.company,
        'country_code': value.country_code,
        'day_phone': value.day_phone,
        'day_phone_e164': value.day_phone_e164,
        'delivery_date': value.delivery_date,
        'evening_phone': value.evening_phone,
        'evening_phone_e164': value.evening_phone_e164,
        'first_name': value.first_name,
        'last_name': value.last_name,
        'least_cost_route': value.least_cost_route,
        'least_cost_route_shipping_methods': value.least_cost_route_shipping_methods,
        'lift_gate': value.lift_gate,
        'pickup_dts': value.pickup_dts,
        'postal_code': value.postal_code,
        'rma': value.rma,
        'ship_on_date': value.ship_on_date,
        'ship_to_residential': value.ship_to_residential,
        'shipping_3rd_party_account_number': value.shipping_3rd_party_account_number,
        'shipping_date': value.shipping_date,
        'shipping_department_status': value.shipping_department_status,
        'shipping_method': value.shipping_method,
        'shipping_method_accounting_code': value.shipping_method_accounting_code,
        'special_instructions': value.special_instructions,
        'state_region': value.state_region,
        'title': value.title,
        'tracking_number_details': value.tracking_number_details === undefined ? undefined : ((value.tracking_number_details as Array<any>).map(OrderTrackingNumberDetailsToJSON)),
        'tracking_numbers': value.tracking_numbers,
        'weight': WeightToJSON(value.weight),
    };
}

