/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationCannedMessage
 */
export interface ConversationCannedMessage {
    /**
     * 
     * @type {string}
     * @memberof ConversationCannedMessage
     */
    canned_message?: string;
    /**
     * 
     * @type {number}
     * @memberof ConversationCannedMessage
     */
    conversation_canned_message_oid?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof ConversationCannedMessage
     */
    conversation_department_oids?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof ConversationCannedMessage
     */
    short_code?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ConversationCannedMessage)[] = ["canned_message", "conversation_canned_message_oid", "conversation_department_oids", "short_code"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ConversationCannedMessage interface.
 */
export function instanceOfConversationCannedMessage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationCannedMessageFromJSON(json: any): ConversationCannedMessage {
    return ConversationCannedMessageFromJSONTyped(json, false);
}

export function ConversationCannedMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationCannedMessage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'canned_message': !exists(json, 'canned_message') ? undefined : json['canned_message'],
        'conversation_canned_message_oid': !exists(json, 'conversation_canned_message_oid') ? undefined : json['conversation_canned_message_oid'],
        'conversation_department_oids': !exists(json, 'conversation_department_oids') ? undefined : json['conversation_department_oids'],
        'short_code': !exists(json, 'short_code') ? undefined : json['short_code'],
    };
}

export function ConversationCannedMessageToJSON(value?: ConversationCannedMessage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'canned_message': value.canned_message,
        'conversation_canned_message_oid': value.conversation_canned_message_oid,
        'conversation_department_oids': value.conversation_department_oids,
        'short_code': value.short_code,
    };
}

