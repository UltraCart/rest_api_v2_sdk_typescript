/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PointOfSaleRegister
 */
export interface PointOfSaleRegister {
    /**
     * The merchant id that owns this point of sale register.
     * @type {string}
     * @memberof PointOfSaleRegister
     */
    merchant_id?: string;
    /**
     * Name of the register.
     * @type {string}
     * @memberof PointOfSaleRegister
     */
    name?: string;
    /**
     * Object identifier of the point of sale location where this register is located.
     * @type {number}
     * @memberof PointOfSaleRegister
     */
    pos_location_oid?: number;
    /**
     * Object identifier of the point of sale register.
     * @type {number}
     * @memberof PointOfSaleRegister
     */
    pos_register_oid?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof PointOfSaleRegister)[] = ["merchant_id", "name", "pos_location_oid", "pos_register_oid"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the PointOfSaleRegister interface.
 */
export function instanceOfPointOfSaleRegister(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PointOfSaleRegisterFromJSON(json: any): PointOfSaleRegister {
    return PointOfSaleRegisterFromJSONTyped(json, false);
}

export function PointOfSaleRegisterFromJSONTyped(json: any, ignoreDiscriminator: boolean): PointOfSaleRegister {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'pos_location_oid': !exists(json, 'pos_location_oid') ? undefined : json['pos_location_oid'],
        'pos_register_oid': !exists(json, 'pos_register_oid') ? undefined : json['pos_register_oid'],
    };
}

export function PointOfSaleRegisterToJSON(value?: PointOfSaleRegister | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'merchant_id': value.merchant_id,
        'name': value.name,
        'pos_location_oid': value.pos_location_oid,
        'pos_register_oid': value.pos_register_oid,
    };
}

