/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderReplacementItem
 */
export interface OrderReplacementItem {
    /**
     * Cost to charge the customer if specified.  If not specified then the default item cost is used.
     * @type {number}
     * @memberof OrderReplacementItem
     */
    arbitrary_unit_cost?: number;
    /**
     * Item ID
     * @type {string}
     * @memberof OrderReplacementItem
     */
    merchant_item_id?: string;
    /**
     * Quantity
     * @type {number}
     * @memberof OrderReplacementItem
     */
    quantity?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof OrderReplacementItem)[] = ["arbitrary_unit_cost", "merchant_item_id", "quantity"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the OrderReplacementItem interface.
 */
export function instanceOfOrderReplacementItem(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderReplacementItemFromJSON(json: any): OrderReplacementItem {
    return OrderReplacementItemFromJSONTyped(json, false);
}

export function OrderReplacementItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderReplacementItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'arbitrary_unit_cost': !exists(json, 'arbitrary_unit_cost') ? undefined : json['arbitrary_unit_cost'],
        'merchant_item_id': !exists(json, 'merchant_item_id') ? undefined : json['merchant_item_id'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
    };
}

export function OrderReplacementItemToJSON(value?: OrderReplacementItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'arbitrary_unit_cost': value.arbitrary_unit_cost,
        'merchant_item_id': value.merchant_item_id,
        'quantity': value.quantity,
    };
}

