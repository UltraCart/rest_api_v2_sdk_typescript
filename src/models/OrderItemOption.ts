/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Currency,
    CurrencyFromJSON,
    CurrencyFromJSONTyped,
    CurrencyToJSON,
} from './Currency';
import {
    Distance,
    DistanceFromJSON,
    DistanceFromJSONTyped,
    DistanceToJSON,
} from './Distance';
import {
    OrderItemOptionFileAttachment,
    OrderItemOptionFileAttachmentFromJSON,
    OrderItemOptionFileAttachmentFromJSONTyped,
    OrderItemOptionFileAttachmentToJSON,
} from './OrderItemOptionFileAttachment';
import {
    Weight,
    WeightFromJSON,
    WeightFromJSONTyped,
    WeightToJSON,
} from './Weight';

/**
 * 
 * @export
 * @interface OrderItemOption
 */
export interface OrderItemOption {
    /**
     * How the additional dimensions are applied to the item.
     * @type {string}
     * @memberof OrderItemOption
     */
    additional_dimension_application?: OrderItemOptionAdditionalDimensionApplicationEnum;
    /**
     * 
     * @type {Currency}
     * @memberof OrderItemOption
     */
    cost_change?: Currency;
    /**
     * 
     * @type {OrderItemOptionFileAttachment}
     * @memberof OrderItemOption
     */
    file_attachment?: OrderItemOptionFileAttachment;
    /**
     * 
     * @type {Distance}
     * @memberof OrderItemOption
     */
    height?: Distance;
    /**
     * True if this option is hidden from display on the order
     * @type {boolean}
     * @memberof OrderItemOption
     */
    hidden?: boolean;
    /**
     * Label
     * @type {string}
     * @memberof OrderItemOption
     */
    label?: string;
    /**
     * 
     * @type {Distance}
     * @memberof OrderItemOption
     */
    length?: Distance;
    /**
     * True if the cost associated with this option is a one time fee or multiplied by the quantity of the item
     * @type {boolean}
     * @memberof OrderItemOption
     */
    one_time_fee?: boolean;
    /**
     * Value
     * @type {string}
     * @memberof OrderItemOption
     */
    value?: string;
    /**
     * 
     * @type {Weight}
     * @memberof OrderItemOption
     */
    weight_change?: Weight;
    /**
     * 
     * @type {Distance}
     * @memberof OrderItemOption
     */
    width?: Distance;
}



/**
 * @export
 */
export const OrderItemOptionAdditionalDimensionApplicationEnum = {
    None: 'none',
    SetItemTo: 'set item to',
    AddItem: 'add item'
} as const;
export type OrderItemOptionAdditionalDimensionApplicationEnum = typeof OrderItemOptionAdditionalDimensionApplicationEnum[keyof typeof OrderItemOptionAdditionalDimensionApplicationEnum];


/**
 * Check if a given object implements the OrderItemOption interface.
 */
export function instanceOfOrderItemOption(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderItemOptionFromJSON(json: any): OrderItemOption {
    return OrderItemOptionFromJSONTyped(json, false);
}

export function OrderItemOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderItemOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'additional_dimension_application': !exists(json, 'additional_dimension_application') ? undefined : json['additional_dimension_application'],
        'cost_change': !exists(json, 'cost_change') ? undefined : CurrencyFromJSON(json['cost_change']),
        'file_attachment': !exists(json, 'file_attachment') ? undefined : OrderItemOptionFileAttachmentFromJSON(json['file_attachment']),
        'height': !exists(json, 'height') ? undefined : DistanceFromJSON(json['height']),
        'hidden': !exists(json, 'hidden') ? undefined : json['hidden'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'length': !exists(json, 'length') ? undefined : DistanceFromJSON(json['length']),
        'one_time_fee': !exists(json, 'one_time_fee') ? undefined : json['one_time_fee'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'weight_change': !exists(json, 'weight_change') ? undefined : WeightFromJSON(json['weight_change']),
        'width': !exists(json, 'width') ? undefined : DistanceFromJSON(json['width']),
    };
}

export function OrderItemOptionToJSON(value?: OrderItemOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'additional_dimension_application': value.additional_dimension_application,
        'cost_change': CurrencyToJSON(value.cost_change),
        'file_attachment': OrderItemOptionFileAttachmentToJSON(value.file_attachment),
        'height': DistanceToJSON(value.height),
        'hidden': value.hidden,
        'label': value.label,
        'length': DistanceToJSON(value.length),
        'one_time_fee': value.one_time_fee,
        'value': value.value,
        'weight_change': WeightToJSON(value.weight_change),
        'width': DistanceToJSON(value.width),
    };
}

