/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GroupUserMembership
 */
export interface GroupUserMembership {
    /**
     * The email for this user.
     * @type {string}
     * @memberof GroupUserMembership
     */
    email?: string;
    /**
     * The full name for this user.
     * @type {string}
     * @memberof GroupUserMembership
     */
    fullName?: string;
    /**
     * The login for this user.
     * @type {string}
     * @memberof GroupUserMembership
     */
    login?: string;
    /**
     * True if this user belongs to the parent group, false otherwise.
     * @type {boolean}
     * @memberof GroupUserMembership
     */
    member?: boolean;
    /**
     * The user id for this user.
     * @type {number}
     * @memberof GroupUserMembership
     */
    user_id?: number;
}



/**
 * Check if a given object implements the GroupUserMembership interface.
 */
export function instanceOfGroupUserMembership(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GroupUserMembershipFromJSON(json: any): GroupUserMembership {
    return GroupUserMembershipFromJSONTyped(json, false);
}

export function GroupUserMembershipFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupUserMembership {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'login': !exists(json, 'login') ? undefined : json['login'],
        'member': !exists(json, 'member') ? undefined : json['member'],
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
    };
}

export function GroupUserMembershipToJSON(value?: GroupUserMembership | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'fullName': value.fullName,
        'login': value.login,
        'member': value.member,
        'user_id': value.user_id,
    };
}

