/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Currency,
    CurrencyFromJSON,
    CurrencyFromJSONTyped,
    CurrencyToJSON,
} from './Currency';

/**
 * 
 * @export
 * @interface CartGiftCertificate
 */
export interface CartGiftCertificate {
    /**
     * 
     * @type {Currency}
     * @memberof CartGiftCertificate
     */
    gift_certificate_amount?: Currency;
    /**
     * Gift certificate code
     * @type {string}
     * @memberof CartGiftCertificate
     */
    gift_certificate_code?: string;
    /**
     * 
     * @type {Currency}
     * @memberof CartGiftCertificate
     */
    gift_certificate_remaining_balance_after_order?: Currency;
}



/**
 * Check if a given object implements the CartGiftCertificate interface.
 */
export function instanceOfCartGiftCertificate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartGiftCertificateFromJSON(json: any): CartGiftCertificate {
    return CartGiftCertificateFromJSONTyped(json, false);
}

export function CartGiftCertificateFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartGiftCertificate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gift_certificate_amount': !exists(json, 'gift_certificate_amount') ? undefined : CurrencyFromJSON(json['gift_certificate_amount']),
        'gift_certificate_code': !exists(json, 'gift_certificate_code') ? undefined : json['gift_certificate_code'],
        'gift_certificate_remaining_balance_after_order': !exists(json, 'gift_certificate_remaining_balance_after_order') ? undefined : CurrencyFromJSON(json['gift_certificate_remaining_balance_after_order']),
    };
}

export function CartGiftCertificateToJSON(value?: CartGiftCertificate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gift_certificate_amount': CurrencyToJSON(value.gift_certificate_amount),
        'gift_certificate_code': value.gift_certificate_code,
        'gift_certificate_remaining_balance_after_order': CurrencyToJSON(value.gift_certificate_remaining_balance_after_order),
    };
}

