/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GiftCertificateQuery
 */
export interface GiftCertificateQuery {
    /**
     * Gift certificate code
     * @type {string}
     * @memberof GiftCertificateQuery
     */
    code?: string;
    /**
     * Email address of this gift certificate
     * @type {string}
     * @memberof GiftCertificateQuery
     */
    email?: string;
    /**
     * Expiration date end
     * @type {string}
     * @memberof GiftCertificateQuery
     */
    expiration_dts_end?: string;
    /**
     * Expiration date start
     * @type {string}
     * @memberof GiftCertificateQuery
     */
    expiration_dts_start?: string;
    /**
     * Original balance end
     * @type {number}
     * @memberof GiftCertificateQuery
     */
    original_balance_end?: number;
    /**
     * Original balance start
     * @type {number}
     * @memberof GiftCertificateQuery
     */
    original_balance_start?: number;
    /**
     * Gift certificate reference order id
     * @type {string}
     * @memberof GiftCertificateQuery
     */
    reference_order_id?: string;
    /**
     * Remaining balance end
     * @type {number}
     * @memberof GiftCertificateQuery
     */
    remaining_balance_end?: number;
    /**
     * Remaining balance start
     * @type {number}
     * @memberof GiftCertificateQuery
     */
    remaining_balance_start?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof GiftCertificateQuery)[] = ["code", "email", "expiration_dts_end", "expiration_dts_start", "original_balance_end", "original_balance_start", "reference_order_id", "remaining_balance_end", "remaining_balance_start"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the GiftCertificateQuery interface.
 */
export function instanceOfGiftCertificateQuery(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GiftCertificateQueryFromJSON(json: any): GiftCertificateQuery {
    return GiftCertificateQueryFromJSONTyped(json, false);
}

export function GiftCertificateQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): GiftCertificateQuery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'expiration_dts_end': !exists(json, 'expiration_dts_end') ? undefined : json['expiration_dts_end'],
        'expiration_dts_start': !exists(json, 'expiration_dts_start') ? undefined : json['expiration_dts_start'],
        'original_balance_end': !exists(json, 'original_balance_end') ? undefined : json['original_balance_end'],
        'original_balance_start': !exists(json, 'original_balance_start') ? undefined : json['original_balance_start'],
        'reference_order_id': !exists(json, 'reference_order_id') ? undefined : json['reference_order_id'],
        'remaining_balance_end': !exists(json, 'remaining_balance_end') ? undefined : json['remaining_balance_end'],
        'remaining_balance_start': !exists(json, 'remaining_balance_start') ? undefined : json['remaining_balance_start'],
    };
}

export function GiftCertificateQueryToJSON(value?: GiftCertificateQuery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'email': value.email,
        'expiration_dts_end': value.expiration_dts_end,
        'expiration_dts_start': value.expiration_dts_start,
        'original_balance_end': value.original_balance_end,
        'original_balance_start': value.original_balance_start,
        'reference_order_id': value.reference_order_id,
        'remaining_balance_end': value.remaining_balance_end,
        'remaining_balance_start': value.remaining_balance_start,
    };
}

