/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CouponFreeItemWithItemPurchase
 */
export interface CouponFreeItemWithItemPurchase {
    /**
     * An optional list of item tags which will receive a discount of one of the required purchased items is purchased.
     * @type {Array<string>}
     * @memberof CouponFreeItemWithItemPurchase
     */
    item_tags?: Array<string>;
    /**
     * A list of free items which will receive a discount if one of the required purchase items is purchased.
     * @type {Array<string>}
     * @memberof CouponFreeItemWithItemPurchase
     */
    items?: Array<string>;
    /**
     * The (optional) maximum quantity of discounted items.
     * @type {number}
     * @memberof CouponFreeItemWithItemPurchase
     */
    limit?: number;
    /**
     * If true then the free item is matched 1:1 with the free item in the list.
     * @type {boolean}
     * @memberof CouponFreeItemWithItemPurchase
     */
    match_required_purchase_item_to_free_item?: boolean;
    /**
     * Required items (at least one from the list) that must be purchased for coupon to be valid
     * @type {Array<string>}
     * @memberof CouponFreeItemWithItemPurchase
     */
    required_purchase_items?: Array<string>;
    /**
     * An optional list of item tags which are required to be purchased.
     * @type {Array<string>}
     * @memberof CouponFreeItemWithItemPurchase
     */
    required_purchase_items_tags?: Array<string>;
}

export function CouponFreeItemWithItemPurchaseFromJSON(json: any): CouponFreeItemWithItemPurchase {
    return CouponFreeItemWithItemPurchaseFromJSONTyped(json, false);
}

export function CouponFreeItemWithItemPurchaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CouponFreeItemWithItemPurchase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'item_tags': !exists(json, 'item_tags') ? undefined : json['item_tags'],
        'items': !exists(json, 'items') ? undefined : json['items'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'match_required_purchase_item_to_free_item': !exists(json, 'match_required_purchase_item_to_free_item') ? undefined : json['match_required_purchase_item_to_free_item'],
        'required_purchase_items': !exists(json, 'required_purchase_items') ? undefined : json['required_purchase_items'],
        'required_purchase_items_tags': !exists(json, 'required_purchase_items_tags') ? undefined : json['required_purchase_items_tags'],
    };
}

export function CouponFreeItemWithItemPurchaseToJSON(value?: CouponFreeItemWithItemPurchase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'item_tags': value.item_tags,
        'items': value.items,
        'limit': value.limit,
        'match_required_purchase_item_to_free_item': value.match_required_purchase_item_to_free_item,
        'required_purchase_items': value.required_purchase_items,
        'required_purchase_items_tags': value.required_purchase_items_tags,
    };
}

