/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CartSettingsProvince,
    CartSettingsProvinceFromJSON,
    CartSettingsProvinceFromJSONTyped,
    CartSettingsProvinceToJSON,
} from './CartSettingsProvince';

/**
 * 
 * @export
 * @interface CartSettingsBilling
 */
export interface CartSettingsBilling {
    /**
     * Provinces
     * @type {Array<CartSettingsProvince>}
     * @memberof CartSettingsBilling
     */
    provinces?: Array<CartSettingsProvince>;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CartSettingsBilling)[] = ["provinces"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CartSettingsBilling interface.
 */
export function instanceOfCartSettingsBilling(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartSettingsBillingFromJSON(json: any): CartSettingsBilling {
    return CartSettingsBillingFromJSONTyped(json, false);
}

export function CartSettingsBillingFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartSettingsBilling {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'provinces': !exists(json, 'provinces') ? undefined : ((json['provinces'] as Array<any>).map(CartSettingsProvinceFromJSON)),
    };
}

export function CartSettingsBillingToJSON(value?: CartSettingsBilling | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'provinces': value.provinces === undefined ? undefined : ((value.provinces as Array<any>).map(CartSettingsProvinceToJSON)),
    };
}

