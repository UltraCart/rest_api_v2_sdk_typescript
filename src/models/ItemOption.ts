/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ItemOptionValue,
    ItemOptionValueFromJSON,
    ItemOptionValueFromJSONTyped,
    ItemOptionValueToJSON,
} from './ItemOptionValue';

/**
 * 
 * @export
 * @interface ItemOption
 */
export interface ItemOption {
    /**
     * Cost if specified
     * @type {number}
     * @memberof ItemOption
     */
    cost_if_specified?: number;
    /**
     * Cost per letter
     * @type {number}
     * @memberof ItemOption
     */
    cost_per_letter?: number;
    /**
     * Cost per line
     * @type {number}
     * @memberof ItemOption
     */
    cost_per_line?: number;
    /**
     * Ignore this option on the order if the default value is selected
     * @type {boolean}
     * @memberof ItemOption
     */
    ignore_if_default?: boolean;
    /**
     * Label
     * @type {string}
     * @memberof ItemOption
     */
    label?: string;
    /**
     * Label translated text instance ID
     * @type {number}
     * @memberof ItemOption
     */
    label_translated_text_instance_oid?: number;
    /**
     * Name
     * @type {string}
     * @memberof ItemOption
     */
    name?: string;
    /**
     * Name translated text instance ID
     * @type {number}
     * @memberof ItemOption
     */
    name_translated_text_instance_oid?: number;
    /**
     * One time fee
     * @type {boolean}
     * @memberof ItemOption
     */
    one_time_fee?: boolean;
    /**
     * Option object identifier
     * @type {number}
     * @memberof ItemOption
     */
    option_oid?: number;
    /**
     * True if the customer is required to specify an answer
     * @type {boolean}
     * @memberof ItemOption
     */
    required?: boolean;
    /**
     * True if this is a system option
     * @type {boolean}
     * @memberof ItemOption
     */
    system_option?: boolean;
    /**
     * Type of option
     * @type {string}
     * @memberof ItemOption
     */
    type?: ItemOptionTypeEnum;
    /**
     * Values
     * @type {Array<ItemOptionValue>}
     * @memberof ItemOption
     */
    values?: Array<ItemOptionValue>;
}



/**
 * @export
 */
export const ItemOptionTypeEnum = {
    Dropdown: 'dropdown',
    FileAttachment: 'file attachment',
    Fixed: 'fixed',
    Hidden: 'hidden',
    Multiline: 'multiline',
    Radio: 'radio',
    Single: 'single'
} as const;
export type ItemOptionTypeEnum = typeof ItemOptionTypeEnum[keyof typeof ItemOptionTypeEnum];


/**
 * Check if a given object implements the ItemOption interface.
 */
export function instanceOfItemOption(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemOptionFromJSON(json: any): ItemOption {
    return ItemOptionFromJSONTyped(json, false);
}

export function ItemOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemOption {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cost_if_specified': !exists(json, 'cost_if_specified') ? undefined : json['cost_if_specified'],
        'cost_per_letter': !exists(json, 'cost_per_letter') ? undefined : json['cost_per_letter'],
        'cost_per_line': !exists(json, 'cost_per_line') ? undefined : json['cost_per_line'],
        'ignore_if_default': !exists(json, 'ignore_if_default') ? undefined : json['ignore_if_default'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'label_translated_text_instance_oid': !exists(json, 'label_translated_text_instance_oid') ? undefined : json['label_translated_text_instance_oid'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'name_translated_text_instance_oid': !exists(json, 'name_translated_text_instance_oid') ? undefined : json['name_translated_text_instance_oid'],
        'one_time_fee': !exists(json, 'one_time_fee') ? undefined : json['one_time_fee'],
        'option_oid': !exists(json, 'option_oid') ? undefined : json['option_oid'],
        'required': !exists(json, 'required') ? undefined : json['required'],
        'system_option': !exists(json, 'system_option') ? undefined : json['system_option'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'values': !exists(json, 'values') ? undefined : ((json['values'] as Array<any>).map(ItemOptionValueFromJSON)),
    };
}

export function ItemOptionToJSON(value?: ItemOption | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cost_if_specified': value.cost_if_specified,
        'cost_per_letter': value.cost_per_letter,
        'cost_per_line': value.cost_per_line,
        'ignore_if_default': value.ignore_if_default,
        'label': value.label,
        'label_translated_text_instance_oid': value.label_translated_text_instance_oid,
        'name': value.name,
        'name_translated_text_instance_oid': value.name_translated_text_instance_oid,
        'one_time_fee': value.one_time_fee,
        'option_oid': value.option_oid,
        'required': value.required,
        'system_option': value.system_option,
        'type': value.type,
        'values': value.values === undefined ? undefined : ((value.values as Array<any>).map(ItemOptionValueToJSON)),
    };
}

