/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Currency,
    CurrencyFromJSON,
    CurrencyFromJSONTyped,
    CurrencyToJSON,
} from './Currency';

/**
 * 
 * @export
 * @interface CartSummary
 */
export interface CartSummary {
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    arbitrary_shipping_handling_total?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    arbitrary_tax?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    arbitrary_tax_rate?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    arbitrary_taxable_subtotal?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    health_benefit_card_amount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    health_benefit_card_balance?: Currency;
    /**
     * Health benefit card requirements
     * @type {string}
     * @memberof CartSummary
     */
    health_benefit_card_requirements?: string;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    internal_gift_certificate_amount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    shipping_handling?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    shipping_handling_discount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    shipping_handling_with_discount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    subtotal?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    subtotal_discount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    subtotal_with_discount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    surcharge?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    tax?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    taxable_subtotal?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    taxable_subtotal_discount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    taxable_subtotal_with_discount?: Currency;
    /**
     * 
     * @type {Currency}
     * @memberof CartSummary
     */
    total?: Currency;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CartSummary)[] = ["arbitrary_shipping_handling_total", "arbitrary_tax", "arbitrary_tax_rate", "arbitrary_taxable_subtotal", "health_benefit_card_amount", "health_benefit_card_balance", "health_benefit_card_requirements", "internal_gift_certificate_amount", "shipping_handling", "shipping_handling_discount", "shipping_handling_with_discount", "subtotal", "subtotal_discount", "subtotal_with_discount", "surcharge", "tax", "taxable_subtotal", "taxable_subtotal_discount", "taxable_subtotal_with_discount", "total"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CartSummary interface.
 */
export function instanceOfCartSummary(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartSummaryFromJSON(json: any): CartSummary {
    return CartSummaryFromJSONTyped(json, false);
}

export function CartSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'arbitrary_shipping_handling_total': !exists(json, 'arbitrary_shipping_handling_total') ? undefined : CurrencyFromJSON(json['arbitrary_shipping_handling_total']),
        'arbitrary_tax': !exists(json, 'arbitrary_tax') ? undefined : CurrencyFromJSON(json['arbitrary_tax']),
        'arbitrary_tax_rate': !exists(json, 'arbitrary_tax_rate') ? undefined : CurrencyFromJSON(json['arbitrary_tax_rate']),
        'arbitrary_taxable_subtotal': !exists(json, 'arbitrary_taxable_subtotal') ? undefined : CurrencyFromJSON(json['arbitrary_taxable_subtotal']),
        'health_benefit_card_amount': !exists(json, 'health_benefit_card_amount') ? undefined : CurrencyFromJSON(json['health_benefit_card_amount']),
        'health_benefit_card_balance': !exists(json, 'health_benefit_card_balance') ? undefined : CurrencyFromJSON(json['health_benefit_card_balance']),
        'health_benefit_card_requirements': !exists(json, 'health_benefit_card_requirements') ? undefined : json['health_benefit_card_requirements'],
        'internal_gift_certificate_amount': !exists(json, 'internal_gift_certificate_amount') ? undefined : CurrencyFromJSON(json['internal_gift_certificate_amount']),
        'shipping_handling': !exists(json, 'shipping_handling') ? undefined : CurrencyFromJSON(json['shipping_handling']),
        'shipping_handling_discount': !exists(json, 'shipping_handling_discount') ? undefined : CurrencyFromJSON(json['shipping_handling_discount']),
        'shipping_handling_with_discount': !exists(json, 'shipping_handling_with_discount') ? undefined : CurrencyFromJSON(json['shipping_handling_with_discount']),
        'subtotal': !exists(json, 'subtotal') ? undefined : CurrencyFromJSON(json['subtotal']),
        'subtotal_discount': !exists(json, 'subtotal_discount') ? undefined : CurrencyFromJSON(json['subtotal_discount']),
        'subtotal_with_discount': !exists(json, 'subtotal_with_discount') ? undefined : CurrencyFromJSON(json['subtotal_with_discount']),
        'surcharge': !exists(json, 'surcharge') ? undefined : CurrencyFromJSON(json['surcharge']),
        'tax': !exists(json, 'tax') ? undefined : CurrencyFromJSON(json['tax']),
        'taxable_subtotal': !exists(json, 'taxable_subtotal') ? undefined : CurrencyFromJSON(json['taxable_subtotal']),
        'taxable_subtotal_discount': !exists(json, 'taxable_subtotal_discount') ? undefined : CurrencyFromJSON(json['taxable_subtotal_discount']),
        'taxable_subtotal_with_discount': !exists(json, 'taxable_subtotal_with_discount') ? undefined : CurrencyFromJSON(json['taxable_subtotal_with_discount']),
        'total': !exists(json, 'total') ? undefined : CurrencyFromJSON(json['total']),
    };
}

export function CartSummaryToJSON(value?: CartSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'arbitrary_shipping_handling_total': CurrencyToJSON(value.arbitrary_shipping_handling_total),
        'arbitrary_tax': CurrencyToJSON(value.arbitrary_tax),
        'arbitrary_tax_rate': CurrencyToJSON(value.arbitrary_tax_rate),
        'arbitrary_taxable_subtotal': CurrencyToJSON(value.arbitrary_taxable_subtotal),
        'health_benefit_card_amount': CurrencyToJSON(value.health_benefit_card_amount),
        'health_benefit_card_balance': CurrencyToJSON(value.health_benefit_card_balance),
        'health_benefit_card_requirements': value.health_benefit_card_requirements,
        'internal_gift_certificate_amount': CurrencyToJSON(value.internal_gift_certificate_amount),
        'shipping_handling': CurrencyToJSON(value.shipping_handling),
        'shipping_handling_discount': CurrencyToJSON(value.shipping_handling_discount),
        'shipping_handling_with_discount': CurrencyToJSON(value.shipping_handling_with_discount),
        'subtotal': CurrencyToJSON(value.subtotal),
        'subtotal_discount': CurrencyToJSON(value.subtotal_discount),
        'subtotal_with_discount': CurrencyToJSON(value.subtotal_with_discount),
        'surcharge': CurrencyToJSON(value.surcharge),
        'tax': CurrencyToJSON(value.tax),
        'taxable_subtotal': CurrencyToJSON(value.taxable_subtotal),
        'taxable_subtotal_discount': CurrencyToJSON(value.taxable_subtotal_discount),
        'taxable_subtotal_with_discount': CurrencyToJSON(value.taxable_subtotal_with_discount),
        'total': CurrencyToJSON(value.total),
    };
}

