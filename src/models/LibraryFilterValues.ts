/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LibraryFilterValues
 */
export interface LibraryFilterValues {
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryFilterValues
     */
    categories?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryFilterValues
     */
    industries?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryFilterValues
     */
    styles?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof LibraryFilterValues
     */
    types?: Array<string>;
}

export function LibraryFilterValuesFromJSON(json: any): LibraryFilterValues {
    return LibraryFilterValuesFromJSONTyped(json, false);
}

export function LibraryFilterValuesFromJSONTyped(json: any, ignoreDiscriminator: boolean): LibraryFilterValues {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'categories': !exists(json, 'categories') ? undefined : json['categories'],
        'industries': !exists(json, 'industries') ? undefined : json['industries'],
        'styles': !exists(json, 'styles') ? undefined : json['styles'],
        'types': !exists(json, 'types') ? undefined : json['types'],
    };
}

export function LibraryFilterValuesToJSON(value?: LibraryFilterValues | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'categories': value.categories,
        'industries': value.industries,
        'styles': value.styles,
        'types': value.types,
    };
}

