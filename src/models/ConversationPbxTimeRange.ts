/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConversationPbxTimeRangeConfig,
    ConversationPbxTimeRangeConfigFromJSON,
    ConversationPbxTimeRangeConfigFromJSONTyped,
    ConversationPbxTimeRangeConfigToJSON,
} from './ConversationPbxTimeRangeConfig';

/**
 * 
 * @export
 * @interface ConversationPbxTimeRange
 */
export interface ConversationPbxTimeRange {
    /**
     * Configurations for all ranges in this time range
     * @type {Array<ConversationPbxTimeRangeConfig>}
     * @memberof ConversationPbxTimeRange
     */
    configs?: Array<ConversationPbxTimeRangeConfig>;
    /**
     * Conversation Pbx Time Range UUID
     * @type {string}
     * @memberof ConversationPbxTimeRange
     */
    conversation_pbx_time_range_uuid?: string;
    /**
     * Merchant Id
     * @type {string}
     * @memberof ConversationPbxTimeRange
     */
    merchant_id?: string;
    /**
     * Time range name
     * @type {string}
     * @memberof ConversationPbxTimeRange
     */
    time_range_name?: string;
    /**
     * Timezone
     * @type {string}
     * @memberof ConversationPbxTimeRange
     */
    timezone?: string;
}

export function ConversationPbxTimeRangeFromJSON(json: any): ConversationPbxTimeRange {
    return ConversationPbxTimeRangeFromJSONTyped(json, false);
}

export function ConversationPbxTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationPbxTimeRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'configs': !exists(json, 'configs') ? undefined : ((json['configs'] as Array<any>).map(ConversationPbxTimeRangeConfigFromJSON)),
        'conversation_pbx_time_range_uuid': !exists(json, 'conversation_pbx_time_range_uuid') ? undefined : json['conversation_pbx_time_range_uuid'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'time_range_name': !exists(json, 'time_range_name') ? undefined : json['time_range_name'],
        'timezone': !exists(json, 'timezone') ? undefined : json['timezone'],
    };
}

export function ConversationPbxTimeRangeToJSON(value?: ConversationPbxTimeRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'configs': value.configs === undefined ? undefined : ((value.configs as Array<any>).map(ConversationPbxTimeRangeConfigToJSON)),
        'conversation_pbx_time_range_uuid': value.conversation_pbx_time_range_uuid,
        'merchant_id': value.merchant_id,
        'time_range_name': value.time_range_name,
        'timezone': value.timezone,
    };
}

