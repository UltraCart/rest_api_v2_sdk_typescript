/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileManagerUploadRequest
 */
export interface FileManagerUploadRequest {
    /**
     * 
     * @type {string}
     * @memberof FileManagerUploadRequest
     */
    filename?: string;
    /**
     * 
     * @type {string}
     * @memberof FileManagerUploadRequest
     */
    key?: string;
    /**
     * 
     * @type {number}
     * @memberof FileManagerUploadRequest
     */
    parent_storefront_fs_directory_oid?: number;
}

export function FileManagerUploadRequestFromJSON(json: any): FileManagerUploadRequest {
    return FileManagerUploadRequestFromJSONTyped(json, false);
}

export function FileManagerUploadRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileManagerUploadRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'filename': !exists(json, 'filename') ? undefined : json['filename'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'parent_storefront_fs_directory_oid': !exists(json, 'parent_storefront_fs_directory_oid') ? undefined : json['parent_storefront_fs_directory_oid'],
    };
}

export function FileManagerUploadRequestToJSON(value?: FileManagerUploadRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'filename': value.filename,
        'key': value.key,
        'parent_storefront_fs_directory_oid': value.parent_storefront_fs_directory_oid,
    };
}

