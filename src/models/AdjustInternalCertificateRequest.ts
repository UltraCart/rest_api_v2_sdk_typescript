/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AdjustInternalCertificateRequest
 */
export interface AdjustInternalCertificateRequest {
    /**
     * The adjustment amount
     * @type {number}
     * @memberof AdjustInternalCertificateRequest
     */
    adjustment_amount?: number;
    /**
     * Description of this adjustment, 50 characters max
     * @type {string}
     * @memberof AdjustInternalCertificateRequest
     */
    description?: string;
    /**
     * Optional timestamp for the adjustment, defaults to current time
     * @type {string}
     * @memberof AdjustInternalCertificateRequest
     */
    entry_dts?: string;
    /**
     * Optional expiration days from the entry_dts when these adjustment becomes worthless
     * @type {number}
     * @memberof AdjustInternalCertificateRequest
     */
    expiration_days?: number;
    /**
     * Optional order id if this adjustment is related to a particular order
     * @type {string}
     * @memberof AdjustInternalCertificateRequest
     */
    order_id?: string;
    /**
     * Optional days required for this adjustment to vest
     * @type {number}
     * @memberof AdjustInternalCertificateRequest
     */
    vesting_days?: number;
}



/**
 * Check if a given object implements the AdjustInternalCertificateRequest interface.
 */
export function instanceOfAdjustInternalCertificateRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AdjustInternalCertificateRequestFromJSON(json: any): AdjustInternalCertificateRequest {
    return AdjustInternalCertificateRequestFromJSONTyped(json, false);
}

export function AdjustInternalCertificateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdjustInternalCertificateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'adjustment_amount': !exists(json, 'adjustment_amount') ? undefined : json['adjustment_amount'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'entry_dts': !exists(json, 'entry_dts') ? undefined : json['entry_dts'],
        'expiration_days': !exists(json, 'expiration_days') ? undefined : json['expiration_days'],
        'order_id': !exists(json, 'order_id') ? undefined : json['order_id'],
        'vesting_days': !exists(json, 'vesting_days') ? undefined : json['vesting_days'],
    };
}

export function AdjustInternalCertificateRequestToJSON(value?: AdjustInternalCertificateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'adjustment_amount': value.adjustment_amount,
        'description': value.description,
        'entry_dts': value.entry_dts,
        'expiration_days': value.expiration_days,
        'order_id': value.order_id,
        'vesting_days': value.vesting_days,
    };
}

