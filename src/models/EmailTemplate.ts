/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EmailTemplate
 */
export interface EmailTemplate {
    /**
     * Container cjson
     * @type {string}
     * @memberof EmailTemplate
     */
    container_cjson?: string;
    /**
     * Description of email template
     * @type {string}
     * @memberof EmailTemplate
     */
    description?: string;
    /**
     * Email template oid
     * @type {number}
     * @memberof EmailTemplate
     */
    email_template_oid?: number;
    /**
     * Email Template VM Path
     * @type {string}
     * @memberof EmailTemplate
     */
    email_template_vm_path?: string;
    /**
     * Merchant ID
     * @type {string}
     * @memberof EmailTemplate
     */
    merchant_id?: string;
    /**
     * Name of email template
     * @type {string}
     * @memberof EmailTemplate
     */
    name?: string;
    /**
     * Amazon key for preview png image
     * @type {string}
     * @memberof EmailTemplate
     */
    preview_amazon_listing_key?: string;
    /**
     * Sort order (optional)
     * @type {number}
     * @memberof EmailTemplate
     */
    sort_order?: number;
    /**
     * StoreFront oid
     * @type {number}
     * @memberof EmailTemplate
     */
    storefront_oid?: number;
    /**
     * True if this email template is system-wide,false if merchant specific
     * @type {boolean}
     * @memberof EmailTemplate
     */
    system?: boolean;
    /**
     * Trigger type
     * @type {string}
     * @memberof EmailTemplate
     */
    trigger_type?: string;
}

export function EmailTemplateFromJSON(json: any): EmailTemplate {
    return EmailTemplateFromJSONTyped(json, false);
}

export function EmailTemplateFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailTemplate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'container_cjson': !exists(json, 'container_cjson') ? undefined : json['container_cjson'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'email_template_oid': !exists(json, 'email_template_oid') ? undefined : json['email_template_oid'],
        'email_template_vm_path': !exists(json, 'email_template_vm_path') ? undefined : json['email_template_vm_path'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'preview_amazon_listing_key': !exists(json, 'preview_amazon_listing_key') ? undefined : json['preview_amazon_listing_key'],
        'sort_order': !exists(json, 'sort_order') ? undefined : json['sort_order'],
        'storefront_oid': !exists(json, 'storefront_oid') ? undefined : json['storefront_oid'],
        'system': !exists(json, 'system') ? undefined : json['system'],
        'trigger_type': !exists(json, 'trigger_type') ? undefined : json['trigger_type'],
    };
}

export function EmailTemplateToJSON(value?: EmailTemplate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'container_cjson': value.container_cjson,
        'description': value.description,
        'email_template_oid': value.email_template_oid,
        'email_template_vm_path': value.email_template_vm_path,
        'merchant_id': value.merchant_id,
        'name': value.name,
        'preview_amazon_listing_key': value.preview_amazon_listing_key,
        'sort_order': value.sort_order,
        'storefront_oid': value.storefront_oid,
        'system': value.system,
        'trigger_type': value.trigger_type,
    };
}

