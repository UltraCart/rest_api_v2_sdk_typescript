/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemContentMultimediaThumbnail
 */
export interface ItemContentMultimediaThumbnail {
    /**
     * Height of the thumbnail
     * @type {number}
     * @memberof ItemContentMultimediaThumbnail
     */
    height?: number;
    /**
     * HTTP URL to view the thumbnail
     * @type {string}
     * @memberof ItemContentMultimediaThumbnail
     */
    http_url?: string;
    /**
     * HTTPS URL to view the thumbnail
     * @type {string}
     * @memberof ItemContentMultimediaThumbnail
     */
    https_url?: string;
    /**
     * True if PNG, false if JPEG
     * @type {boolean}
     * @memberof ItemContentMultimediaThumbnail
     */
    png_format?: boolean;
    /**
     * True if the thumbnail is square
     * @type {boolean}
     * @memberof ItemContentMultimediaThumbnail
     */
    square?: boolean;
    /**
     * Width of the thumbnail
     * @type {number}
     * @memberof ItemContentMultimediaThumbnail
     */
    width?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ItemContentMultimediaThumbnail)[] = ["height", "http_url", "https_url", "png_format", "square", "width"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ItemContentMultimediaThumbnail interface.
 */
export function instanceOfItemContentMultimediaThumbnail(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemContentMultimediaThumbnailFromJSON(json: any): ItemContentMultimediaThumbnail {
    return ItemContentMultimediaThumbnailFromJSONTyped(json, false);
}

export function ItemContentMultimediaThumbnailFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemContentMultimediaThumbnail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'height': !exists(json, 'height') ? undefined : json['height'],
        'http_url': !exists(json, 'http_url') ? undefined : json['http_url'],
        'https_url': !exists(json, 'https_url') ? undefined : json['https_url'],
        'png_format': !exists(json, 'png_format') ? undefined : json['png_format'],
        'square': !exists(json, 'square') ? undefined : json['square'],
        'width': !exists(json, 'width') ? undefined : json['width'],
    };
}

export function ItemContentMultimediaThumbnailToJSON(value?: ItemContentMultimediaThumbnail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'height': value.height,
        'http_url': value.http_url,
        'https_url': value.https_url,
        'png_format': value.png_format,
        'square': value.square,
        'width': value.width,
    };
}

