/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReportDataSource,
    ReportDataSourceFromJSON,
    ReportDataSourceFromJSONTyped,
    ReportDataSourceToJSON,
} from './ReportDataSource';
import {
    ReportFilter,
    ReportFilterFromJSON,
    ReportFilterFromJSONTyped,
    ReportFilterToJSON,
} from './ReportFilter';
import {
    ReportPage,
    ReportPageFromJSON,
    ReportPageFromJSONTyped,
    ReportPageToJSON,
} from './ReportPage';

/**
 * 
 * @export
 * @interface Report
 */
export interface Report {
    /**
     * 
     * @type {boolean}
     * @memberof Report
     */
    active?: boolean;
    /**
     * 
     * @type {Array<ReportDataSource>}
     * @memberof Report
     */
    data_sources?: Array<ReportDataSource>;
    /**
     * 
     * @type {string}
     * @memberof Report
     */
    default_dataset_id?: string;
    /**
     * 
     * @type {string}
     * @memberof Report
     */
    default_project_id?: string;
    /**
     * 
     * @type {Array<ReportFilter>}
     * @memberof Report
     */
    filters?: Array<ReportFilter>;
    /**
     * 
     * @type {string}
     * @memberof Report
     */
    merchant_id?: string;
    /**
     * 
     * @type {string}
     * @memberof Report
     */
    name?: string;
    /**
     * 
     * @type {Array<ReportPage>}
     * @memberof Report
     */
    pages?: Array<ReportPage>;
    /**
     * Object identifier for this report.
     * @type {number}
     * @memberof Report
     */
    report_oid?: number;
    /**
     * Security level to execute report under
     * @type {string}
     * @memberof Report
     */
    security_level?: ReportSecurityLevelEnum;
}


/**
 * @export
 */
export const ReportSecurityLevelEnum = {
    Standard: 'standard',
    Low: 'low',
    Medium: 'medium',
    High: 'high'
} as const;
export type ReportSecurityLevelEnum = typeof ReportSecurityLevelEnum[keyof typeof ReportSecurityLevelEnum];


export function ReportFromJSON(json: any): Report {
    return ReportFromJSONTyped(json, false);
}

export function ReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): Report {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active': !exists(json, 'active') ? undefined : json['active'],
        'data_sources': !exists(json, 'data_sources') ? undefined : ((json['data_sources'] as Array<any>).map(ReportDataSourceFromJSON)),
        'default_dataset_id': !exists(json, 'default_dataset_id') ? undefined : json['default_dataset_id'],
        'default_project_id': !exists(json, 'default_project_id') ? undefined : json['default_project_id'],
        'filters': !exists(json, 'filters') ? undefined : ((json['filters'] as Array<any>).map(ReportFilterFromJSON)),
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'pages': !exists(json, 'pages') ? undefined : ((json['pages'] as Array<any>).map(ReportPageFromJSON)),
        'report_oid': !exists(json, 'report_oid') ? undefined : json['report_oid'],
        'security_level': !exists(json, 'security_level') ? undefined : json['security_level'],
    };
}

export function ReportToJSON(value?: Report | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active': value.active,
        'data_sources': value.data_sources === undefined ? undefined : ((value.data_sources as Array<any>).map(ReportDataSourceToJSON)),
        'default_dataset_id': value.default_dataset_id,
        'default_project_id': value.default_project_id,
        'filters': value.filters === undefined ? undefined : ((value.filters as Array<any>).map(ReportFilterToJSON)),
        'merchant_id': value.merchant_id,
        'name': value.name,
        'pages': value.pages === undefined ? undefined : ((value.pages as Array<any>).map(ReportPageToJSON)),
        'report_oid': value.report_oid,
        'security_level': value.security_level,
    };
}

