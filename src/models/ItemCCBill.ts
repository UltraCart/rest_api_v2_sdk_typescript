/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ItemCCBill
 */
export interface ItemCCBill {
    /**
     * Allowed currencies
     * @type {string}
     * @memberof ItemCCBill
     */
    ccbill_allowed_currencies?: string;
    /**
     * Allowed types
     * @type {string}
     * @memberof ItemCCBill
     */
    ccbill_allowed_types?: string;
    /**
     * Currency code
     * @type {string}
     * @memberof ItemCCBill
     */
    ccbill_currency_code?: string;
    /**
     * Form name
     * @type {string}
     * @memberof ItemCCBill
     */
    ccbill_form_name?: string;
    /**
     * Sub-account id
     * @type {string}
     * @memberof ItemCCBill
     */
    ccbill_subaccount_id?: string;
    /**
     * Subscription type id
     * @type {string}
     * @memberof ItemCCBill
     */
    ccbill_subscription_type_id?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ItemCCBill)[] = ["ccbill_allowed_currencies", "ccbill_allowed_types", "ccbill_currency_code", "ccbill_form_name", "ccbill_subaccount_id", "ccbill_subscription_type_id"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ItemCCBill interface.
 */
export function instanceOfItemCCBill(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemCCBillFromJSON(json: any): ItemCCBill {
    return ItemCCBillFromJSONTyped(json, false);
}

export function ItemCCBillFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemCCBill {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ccbill_allowed_currencies': !exists(json, 'ccbill_allowed_currencies') ? undefined : json['ccbill_allowed_currencies'],
        'ccbill_allowed_types': !exists(json, 'ccbill_allowed_types') ? undefined : json['ccbill_allowed_types'],
        'ccbill_currency_code': !exists(json, 'ccbill_currency_code') ? undefined : json['ccbill_currency_code'],
        'ccbill_form_name': !exists(json, 'ccbill_form_name') ? undefined : json['ccbill_form_name'],
        'ccbill_subaccount_id': !exists(json, 'ccbill_subaccount_id') ? undefined : json['ccbill_subaccount_id'],
        'ccbill_subscription_type_id': !exists(json, 'ccbill_subscription_type_id') ? undefined : json['ccbill_subscription_type_id'],
    };
}

export function ItemCCBillToJSON(value?: ItemCCBill | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ccbill_allowed_currencies': value.ccbill_allowed_currencies,
        'ccbill_allowed_types': value.ccbill_allowed_types,
        'ccbill_currency_code': value.ccbill_currency_code,
        'ccbill_form_name': value.ccbill_form_name,
        'ccbill_subaccount_id': value.ccbill_subaccount_id,
        'ccbill_subscription_type_id': value.ccbill_subscription_type_id,
    };
}

