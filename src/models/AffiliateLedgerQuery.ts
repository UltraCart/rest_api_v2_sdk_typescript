/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AffiliateLedgerQuery
 */
export interface AffiliateLedgerQuery {
    /**
     * Affiliate ID associated with the ledger
     * @type {number}
     * @memberof AffiliateLedgerQuery
     */
    affiliate_oid?: number;
    /**
     * Item id associated with the ledger entry
     * @type {string}
     * @memberof AffiliateLedgerQuery
     */
    item_id?: string;
    /**
     * Order ID associated with the ledger entries
     * @type {string}
     * @memberof AffiliateLedgerQuery
     */
    order_id?: string;
    /**
     * Sub ID value passed on the click that generated the ledger
     * @type {string}
     * @memberof AffiliateLedgerQuery
     */
    sub_id?: string;
    /**
     * Minimum transaction date/time to return
     * @type {string}
     * @memberof AffiliateLedgerQuery
     */
    transaction_dts_begin?: string;
    /**
     * Maximum transaction date/time to return
     * @type {string}
     * @memberof AffiliateLedgerQuery
     */
    transaction_dts_end?: string;
}



/**
 * Check if a given object implements the AffiliateLedgerQuery interface.
 */
export function instanceOfAffiliateLedgerQuery(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AffiliateLedgerQueryFromJSON(json: any): AffiliateLedgerQuery {
    return AffiliateLedgerQueryFromJSONTyped(json, false);
}

export function AffiliateLedgerQueryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AffiliateLedgerQuery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'affiliate_oid': !exists(json, 'affiliate_oid') ? undefined : json['affiliate_oid'],
        'item_id': !exists(json, 'item_id') ? undefined : json['item_id'],
        'order_id': !exists(json, 'order_id') ? undefined : json['order_id'],
        'sub_id': !exists(json, 'sub_id') ? undefined : json['sub_id'],
        'transaction_dts_begin': !exists(json, 'transaction_dts_begin') ? undefined : json['transaction_dts_begin'],
        'transaction_dts_end': !exists(json, 'transaction_dts_end') ? undefined : json['transaction_dts_end'],
    };
}

export function AffiliateLedgerQueryToJSON(value?: AffiliateLedgerQuery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'affiliate_oid': value.affiliate_oid,
        'item_id': value.item_id,
        'order_id': value.order_id,
        'sub_id': value.sub_id,
        'transaction_dts_begin': value.transaction_dts_begin,
        'transaction_dts_end': value.transaction_dts_end,
    };
}

