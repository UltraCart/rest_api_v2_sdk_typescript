/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OrderPaymentCreditCardDualVaultedProperty,
    OrderPaymentCreditCardDualVaultedPropertyFromJSON,
    OrderPaymentCreditCardDualVaultedPropertyFromJSONTyped,
    OrderPaymentCreditCardDualVaultedPropertyToJSON,
} from './OrderPaymentCreditCardDualVaultedProperty';

/**
 * 
 * @export
 * @interface OrderPaymentCreditCardDualVaulted
 */
export interface OrderPaymentCreditCardDualVaulted {
    /**
     * 
     * @type {string}
     * @memberof OrderPaymentCreditCardDualVaulted
     */
    gateway_name?: string;
    /**
     * 
     * @type {Array<OrderPaymentCreditCardDualVaultedProperty>}
     * @memberof OrderPaymentCreditCardDualVaulted
     */
    properties?: Array<OrderPaymentCreditCardDualVaultedProperty>;
    /**
     * 
     * @type {string}
     * @memberof OrderPaymentCreditCardDualVaulted
     */
    rotating_transaction_gateway_code?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof OrderPaymentCreditCardDualVaulted)[] = ["gateway_name", "properties", "rotating_transaction_gateway_code"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the OrderPaymentCreditCardDualVaulted interface.
 */
export function instanceOfOrderPaymentCreditCardDualVaulted(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderPaymentCreditCardDualVaultedFromJSON(json: any): OrderPaymentCreditCardDualVaulted {
    return OrderPaymentCreditCardDualVaultedFromJSONTyped(json, false);
}

export function OrderPaymentCreditCardDualVaultedFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderPaymentCreditCardDualVaulted {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'gateway_name': !exists(json, 'gateway_name') ? undefined : json['gateway_name'],
        'properties': !exists(json, 'properties') ? undefined : ((json['properties'] as Array<any>).map(OrderPaymentCreditCardDualVaultedPropertyFromJSON)),
        'rotating_transaction_gateway_code': !exists(json, 'rotating_transaction_gateway_code') ? undefined : json['rotating_transaction_gateway_code'],
    };
}

export function OrderPaymentCreditCardDualVaultedToJSON(value?: OrderPaymentCreditCardDualVaulted | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gateway_name': value.gateway_name,
        'properties': value.properties === undefined ? undefined : ((value.properties as Array<any>).map(OrderPaymentCreditCardDualVaultedPropertyToJSON)),
        'rotating_transaction_gateway_code': value.rotating_transaction_gateway_code,
    };
}

