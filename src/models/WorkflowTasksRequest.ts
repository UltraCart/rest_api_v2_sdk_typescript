/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    WorkflowUser,
    WorkflowUserFromJSON,
    WorkflowUserFromJSONTyped,
    WorkflowUserToJSON,
} from './WorkflowUser';

/**
 * 
 * @export
 * @interface WorkflowTasksRequest
 */
export interface WorkflowTasksRequest {
    /**
     * Assigned to group ID
     * @type {number}
     * @memberof WorkflowTasksRequest
     */
    assigned_to_group_id?: number;
    /**
     * Tasks are assigned to me either by direct user id or a group that the user is a member of
     * @type {boolean}
     * @memberof WorkflowTasksRequest
     */
    assigned_to_me?: boolean;
    /**
     * Assigned to user ID
     * @type {number}
     * @memberof WorkflowTasksRequest
     */
    assigned_to_user_id?: number;
    /**
     * 
     * @type {WorkflowUser}
     * @memberof WorkflowTasksRequest
     */
    created_by?: WorkflowUser;
    /**
     * Date/time that the workflow task was created
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    created_dts_begin?: string;
    /**
     * Date/time that the workflow task was created
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    created_dts_end?: string;
    /**
     * Date/time that the workflow task should delay until
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    delay_until_dts?: string;
    /**
     * Date/time that the workflow task is due
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    due_dts_begin?: string;
    /**
     * Date/time that the workflow task is due
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    due_dts_end?: string;
    /**
     * Date/time that the workflow task was last updated
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    last_update_dts_begin?: string;
    /**
     * Date/time that the workflow task was last updated
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    last_update_dts_end?: string;
    /**
     * Object is associated with customer email
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    object_email?: string;
    /**
     * Object Type
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    object_type?: WorkflowTasksRequestObjectTypeEnum;
    /**
     * Priority
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    priority?: WorkflowTasksRequestPriorityEnum;
    /**
     * Status of the workflow task
     * @type {string}
     * @memberof WorkflowTasksRequest
     */
    status?: WorkflowTasksRequestStatusEnum;
    /**
     * Tasks that are unassigned to a user or group
     * @type {boolean}
     * @memberof WorkflowTasksRequest
     */
    unassigned?: boolean;
}


/**
 * @export
 */
export const WorkflowTasksRequestObjectTypeEnum = {
    Order: 'order',
    AutoOrder: 'auto order',
    Item: 'item',
    CustomerProfile: 'customer profile'
} as const;
export type WorkflowTasksRequestObjectTypeEnum = typeof WorkflowTasksRequestObjectTypeEnum[keyof typeof WorkflowTasksRequestObjectTypeEnum];

/**
 * @export
 */
export const WorkflowTasksRequestPriorityEnum = {
    _1Low: '1 - low',
    _2Medium: '2 - medium',
    _3High: '3 - high',
    _4Critical: '4 - critical'
} as const;
export type WorkflowTasksRequestPriorityEnum = typeof WorkflowTasksRequestPriorityEnum[keyof typeof WorkflowTasksRequestPriorityEnum];

/**
 * @export
 */
export const WorkflowTasksRequestStatusEnum = {
    Open: 'open',
    Closed: 'closed',
    Delayed: 'delayed',
    AwaitingCustomerFeedback: 'awaiting customer feedback'
} as const;
export type WorkflowTasksRequestStatusEnum = typeof WorkflowTasksRequestStatusEnum[keyof typeof WorkflowTasksRequestStatusEnum];


export function WorkflowTasksRequestFromJSON(json: any): WorkflowTasksRequest {
    return WorkflowTasksRequestFromJSONTyped(json, false);
}

export function WorkflowTasksRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WorkflowTasksRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assigned_to_group_id': !exists(json, 'assigned_to_group_id') ? undefined : json['assigned_to_group_id'],
        'assigned_to_me': !exists(json, 'assigned_to_me') ? undefined : json['assigned_to_me'],
        'assigned_to_user_id': !exists(json, 'assigned_to_user_id') ? undefined : json['assigned_to_user_id'],
        'created_by': !exists(json, 'created_by') ? undefined : WorkflowUserFromJSON(json['created_by']),
        'created_dts_begin': !exists(json, 'created_dts_begin') ? undefined : json['created_dts_begin'],
        'created_dts_end': !exists(json, 'created_dts_end') ? undefined : json['created_dts_end'],
        'delay_until_dts': !exists(json, 'delay_until_dts') ? undefined : json['delay_until_dts'],
        'due_dts_begin': !exists(json, 'due_dts_begin') ? undefined : json['due_dts_begin'],
        'due_dts_end': !exists(json, 'due_dts_end') ? undefined : json['due_dts_end'],
        'last_update_dts_begin': !exists(json, 'last_update_dts_begin') ? undefined : json['last_update_dts_begin'],
        'last_update_dts_end': !exists(json, 'last_update_dts_end') ? undefined : json['last_update_dts_end'],
        'object_email': !exists(json, 'object_email') ? undefined : json['object_email'],
        'object_type': !exists(json, 'object_type') ? undefined : json['object_type'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'unassigned': !exists(json, 'unassigned') ? undefined : json['unassigned'],
    };
}

export function WorkflowTasksRequestToJSON(value?: WorkflowTasksRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'assigned_to_group_id': value.assigned_to_group_id,
        'assigned_to_me': value.assigned_to_me,
        'assigned_to_user_id': value.assigned_to_user_id,
        'created_by': WorkflowUserToJSON(value.created_by),
        'created_dts_begin': value.created_dts_begin,
        'created_dts_end': value.created_dts_end,
        'delay_until_dts': value.delay_until_dts,
        'due_dts_begin': value.due_dts_begin,
        'due_dts_end': value.due_dts_end,
        'last_update_dts_begin': value.last_update_dts_begin,
        'last_update_dts_end': value.last_update_dts_end,
        'object_email': value.object_email,
        'object_type': value.object_type,
        'priority': value.priority,
        'status': value.status,
        'unassigned': value.unassigned,
    };
}

