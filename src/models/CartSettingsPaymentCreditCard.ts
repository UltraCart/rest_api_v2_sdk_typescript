/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CartSettingsPaymentCreditCard
 */
export interface CartSettingsPaymentCreditCard {
    /**
     * True if the credit card verification number should be collected
     * @type {boolean}
     * @memberof CartSettingsPaymentCreditCard
     */
    collect_credit_card_verification_number?: boolean;
    /**
     * If this field is null or the total is greater than or equal to this value then collect the CVV2.
     * @type {number}
     * @memberof CartSettingsPaymentCreditCard
     */
    collect_credit_card_verification_number_minimum?: number;
    /**
     * Available credit card types
     * @type {Array<string>}
     * @memberof CartSettingsPaymentCreditCard
     */
    credit_card_types?: Array<string>;
    /**
     * The shoppingCartToken needed for proper initialization of hosted fields collection
     * @type {string}
     * @memberof CartSettingsPaymentCreditCard
     */
    hosted_fields_shopping_cart_token?: string;
}



/**
 * Check if a given object implements the CartSettingsPaymentCreditCard interface.
 */
export function instanceOfCartSettingsPaymentCreditCard(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartSettingsPaymentCreditCardFromJSON(json: any): CartSettingsPaymentCreditCard {
    return CartSettingsPaymentCreditCardFromJSONTyped(json, false);
}

export function CartSettingsPaymentCreditCardFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartSettingsPaymentCreditCard {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'collect_credit_card_verification_number': !exists(json, 'collect_credit_card_verification_number') ? undefined : json['collect_credit_card_verification_number'],
        'collect_credit_card_verification_number_minimum': !exists(json, 'collect_credit_card_verification_number_minimum') ? undefined : json['collect_credit_card_verification_number_minimum'],
        'credit_card_types': !exists(json, 'credit_card_types') ? undefined : json['credit_card_types'],
        'hosted_fields_shopping_cart_token': !exists(json, 'hosted_fields_shopping_cart_token') ? undefined : json['hosted_fields_shopping_cart_token'],
    };
}

export function CartSettingsPaymentCreditCardToJSON(value?: CartSettingsPaymentCreditCard | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'collect_credit_card_verification_number': value.collect_credit_card_verification_number,
        'collect_credit_card_verification_number_minimum': value.collect_credit_card_verification_number_minimum,
        'credit_card_types': value.credit_card_types,
        'hosted_fields_shopping_cart_token': value.hosted_fields_shopping_cart_token,
    };
}

