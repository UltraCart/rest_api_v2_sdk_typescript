/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CartSettingsGiftWrap,
    CartSettingsGiftWrapFromJSON,
    CartSettingsGiftWrapFromJSONTyped,
    CartSettingsGiftWrapToJSON,
} from './CartSettingsGiftWrap';
import {
    Currency,
    CurrencyFromJSON,
    CurrencyFromJSONTyped,
    CurrencyToJSON,
} from './Currency';

/**
 * 
 * @export
 * @interface CartSettingsGift
 */
export interface CartSettingsGift {
    /**
     * True if this checkout supports gift giving
     * @type {boolean}
     * @memberof CartSettingsGift
     */
    allow_gifts?: boolean;
    /**
     * 
     * @type {Currency}
     * @memberof CartSettingsGift
     */
    gift_charge?: Currency;
    /**
     * The gift wraps available for the customer to select from
     * @type {Array<CartSettingsGiftWrap>}
     * @memberof CartSettingsGift
     */
    gift_wraps?: Array<CartSettingsGiftWrap>;
    /**
     * The maximum length of the gift message the giver can enter
     * @type {number}
     * @memberof CartSettingsGift
     */
    max_message_length?: number;
}

export function CartSettingsGiftFromJSON(json: any): CartSettingsGift {
    return CartSettingsGiftFromJSONTyped(json, false);
}

export function CartSettingsGiftFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartSettingsGift {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'allow_gifts': !exists(json, 'allow_gifts') ? undefined : json['allow_gifts'],
        'gift_charge': !exists(json, 'gift_charge') ? undefined : CurrencyFromJSON(json['gift_charge']),
        'gift_wraps': !exists(json, 'gift_wraps') ? undefined : ((json['gift_wraps'] as Array<any>).map(CartSettingsGiftWrapFromJSON)),
        'max_message_length': !exists(json, 'max_message_length') ? undefined : json['max_message_length'],
    };
}

export function CartSettingsGiftToJSON(value?: CartSettingsGift | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'allow_gifts': value.allow_gifts,
        'gift_charge': CurrencyToJSON(value.gift_charge),
        'gift_wraps': value.gift_wraps === undefined ? undefined : ((value.gift_wraps as Array<any>).map(CartSettingsGiftWrapToJSON)),
        'max_message_length': value.max_message_length,
    };
}

