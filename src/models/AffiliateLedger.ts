/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AffiliateClick,
    AffiliateClickFromJSON,
    AffiliateClickFromJSONTyped,
    AffiliateClickToJSON,
} from './AffiliateClick';
import {
    AffiliateLink,
    AffiliateLinkFromJSON,
    AffiliateLinkFromJSONTyped,
    AffiliateLinkToJSON,
} from './AffiliateLink';
import {
    Order,
    OrderFromJSON,
    OrderFromJSONTyped,
    OrderToJSON,
} from './Order';

/**
 * 
 * @export
 * @interface AffiliateLedger
 */
export interface AffiliateLedger {
    /**
     * Unique object identifier for the click associated with this ledger entry
     * @type {number}
     * @memberof AffiliateLedger
     */
    affiliate_click_oid?: number;
    /**
     * Affiliate ledger object ID associated with this ledger
     * @type {number}
     * @memberof AffiliateLedger
     */
    affiliate_ledger_oid?: number;
    /**
     * Unique object identifier for the link that this click is associated with
     * @type {number}
     * @memberof AffiliateLedger
     */
    affiliate_link_oid?: number;
    /**
     * Affiliate object ID associated with this transaction
     * @type {number}
     * @memberof AffiliateLedger
     */
    affiliate_oid?: number;
    /**
     * User that assigned the transaction if it was done manually
     * @type {string}
     * @memberof AffiliateLedger
     */
    assigned_by_user?: string;
    /**
     * 
     * @type {AffiliateClick}
     * @memberof AffiliateLedger
     */
    click?: AffiliateClick;
    /**
     * Item ID associated with this transaction
     * @type {string}
     * @memberof AffiliateLedger
     */
    item_id?: string;
    /**
     * 
     * @type {AffiliateLink}
     * @memberof AffiliateLedger
     */
    link?: AffiliateLink;
    /**
     * 
     * @type {Order}
     * @memberof AffiliateLedger
     */
    order?: Order;
    /**
     * Order ID associated with this transaction
     * @type {string}
     * @memberof AffiliateLedger
     */
    order_id?: string;
    /**
     * Date/time of the original transaction for reversals
     * @type {string}
     * @memberof AffiliateLedger
     */
    original_transaction_dts?: string;
    /**
     * Sub ID associated with transaction (from the click)
     * @type {string}
     * @memberof AffiliateLedger
     */
    sub_id?: string;
    /**
     * Tier number that this transaction earned
     * @type {number}
     * @memberof AffiliateLedger
     */
    tier_number?: number;
    /**
     * Transaction amount
     * @type {number}
     * @memberof AffiliateLedger
     */
    transaction_amount?: number;
    /**
     * Amount of the transaction that has been paid out.
     * @type {number}
     * @memberof AffiliateLedger
     */
    transaction_amount_paid?: number;
    /**
     * Date/time that the transaction was made
     * @type {string}
     * @memberof AffiliateLedger
     */
    transaction_dts?: string;
    /**
     * Memo explaining the transaction
     * @type {string}
     * @memberof AffiliateLedger
     */
    transaction_memo?: string;
    /**
     * Percentage associated with this transaction
     * @type {number}
     * @memberof AffiliateLedger
     */
    transaction_percentage?: number;
    /**
     * Transaction state
     * @type {string}
     * @memberof AffiliateLedger
     */
    transaction_state?: AffiliateLedgerTransactionStateEnum;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof AffiliateLedger)[] = ["affiliate_click_oid", "affiliate_ledger_oid", "affiliate_link_oid", "affiliate_oid", "assigned_by_user", "click", "item_id", "link", "order", "order_id", "original_transaction_dts", "sub_id", "tier_number", "transaction_amount", "transaction_amount_paid", "transaction_dts", "transaction_memo", "transaction_percentage", "transaction_state"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * @export
 */
export const AffiliateLedgerTransactionStateEnum = {
    Pending: 'Pending',
    Posted: 'Posted',
    Approved: 'Approved',
    Paid: 'Paid',
    Rejected: 'Rejected',
    PartiallyPaid: 'Partially Paid'
} as const;
export type AffiliateLedgerTransactionStateEnum = typeof AffiliateLedgerTransactionStateEnum[keyof typeof AffiliateLedgerTransactionStateEnum];


/**
 * Check if a given object implements the AffiliateLedger interface.
 */
export function instanceOfAffiliateLedger(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AffiliateLedgerFromJSON(json: any): AffiliateLedger {
    return AffiliateLedgerFromJSONTyped(json, false);
}

export function AffiliateLedgerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AffiliateLedger {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'affiliate_click_oid': !exists(json, 'affiliate_click_oid') ? undefined : json['affiliate_click_oid'],
        'affiliate_ledger_oid': !exists(json, 'affiliate_ledger_oid') ? undefined : json['affiliate_ledger_oid'],
        'affiliate_link_oid': !exists(json, 'affiliate_link_oid') ? undefined : json['affiliate_link_oid'],
        'affiliate_oid': !exists(json, 'affiliate_oid') ? undefined : json['affiliate_oid'],
        'assigned_by_user': !exists(json, 'assigned_by_user') ? undefined : json['assigned_by_user'],
        'click': !exists(json, 'click') ? undefined : AffiliateClickFromJSON(json['click']),
        'item_id': !exists(json, 'item_id') ? undefined : json['item_id'],
        'link': !exists(json, 'link') ? undefined : AffiliateLinkFromJSON(json['link']),
        'order': !exists(json, 'order') ? undefined : OrderFromJSON(json['order']),
        'order_id': !exists(json, 'order_id') ? undefined : json['order_id'],
        'original_transaction_dts': !exists(json, 'original_transaction_dts') ? undefined : json['original_transaction_dts'],
        'sub_id': !exists(json, 'sub_id') ? undefined : json['sub_id'],
        'tier_number': !exists(json, 'tier_number') ? undefined : json['tier_number'],
        'transaction_amount': !exists(json, 'transaction_amount') ? undefined : json['transaction_amount'],
        'transaction_amount_paid': !exists(json, 'transaction_amount_paid') ? undefined : json['transaction_amount_paid'],
        'transaction_dts': !exists(json, 'transaction_dts') ? undefined : json['transaction_dts'],
        'transaction_memo': !exists(json, 'transaction_memo') ? undefined : json['transaction_memo'],
        'transaction_percentage': !exists(json, 'transaction_percentage') ? undefined : json['transaction_percentage'],
        'transaction_state': !exists(json, 'transaction_state') ? undefined : json['transaction_state'],
    };
}

export function AffiliateLedgerToJSON(value?: AffiliateLedger | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'affiliate_click_oid': value.affiliate_click_oid,
        'affiliate_ledger_oid': value.affiliate_ledger_oid,
        'affiliate_link_oid': value.affiliate_link_oid,
        'affiliate_oid': value.affiliate_oid,
        'assigned_by_user': value.assigned_by_user,
        'click': AffiliateClickToJSON(value.click),
        'item_id': value.item_id,
        'link': AffiliateLinkToJSON(value.link),
        'order': OrderToJSON(value.order),
        'order_id': value.order_id,
        'original_transaction_dts': value.original_transaction_dts,
        'sub_id': value.sub_id,
        'tier_number': value.tier_number,
        'transaction_amount': value.transaction_amount,
        'transaction_amount_paid': value.transaction_amount_paid,
        'transaction_dts': value.transaction_dts,
        'transaction_memo': value.transaction_memo,
        'transaction_percentage': value.transaction_percentage,
        'transaction_state': value.transaction_state,
    };
}

