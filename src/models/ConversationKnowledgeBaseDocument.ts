/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationKnowledgeBaseDocument
 */
export interface ConversationKnowledgeBaseDocument {
    /**
     * 
     * @type {number}
     * @memberof ConversationKnowledgeBaseDocument
     */
    chunk_count?: number;
    /**
     * 
     * @type {string}
     * @memberof ConversationKnowledgeBaseDocument
     */
    description?: string;
    /**
     * Human readable identifier.  Filename is recommended.
     * @type {string}
     * @memberof ConversationKnowledgeBaseDocument
     */
    document_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationKnowledgeBaseDocument
     */
    document_uuid?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationKnowledgeBaseDocument
     */
    metadata?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationKnowledgeBaseDocument
     */
    mime_type?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationKnowledgeBaseDocument
     */
    s3_key?: string;
}



/**
 * Check if a given object implements the ConversationKnowledgeBaseDocument interface.
 */
export function instanceOfConversationKnowledgeBaseDocument(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationKnowledgeBaseDocumentFromJSON(json: any): ConversationKnowledgeBaseDocument {
    return ConversationKnowledgeBaseDocumentFromJSONTyped(json, false);
}

export function ConversationKnowledgeBaseDocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationKnowledgeBaseDocument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chunk_count': !exists(json, 'chunk_count') ? undefined : json['chunk_count'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'document_id': !exists(json, 'document_id') ? undefined : json['document_id'],
        'document_uuid': !exists(json, 'document_uuid') ? undefined : json['document_uuid'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'mime_type': !exists(json, 'mime_type') ? undefined : json['mime_type'],
        's3_key': !exists(json, 's3_key') ? undefined : json['s3_key'],
    };
}

export function ConversationKnowledgeBaseDocumentToJSON(value?: ConversationKnowledgeBaseDocument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chunk_count': value.chunk_count,
        'description': value.description,
        'document_id': value.document_id,
        'document_uuid': value.document_uuid,
        'metadata': value.metadata,
        'mime_type': value.mime_type,
        's3_key': value.s3_key,
    };
}

