/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrderEdiDocument
 */
export interface OrderEdiDocument {
    /**
     * Direction the document flowed
     * @type {string}
     * @memberof OrderEdiDocument
     */
    direction?: OrderEdiDocumentDirectionEnum;
    /**
     * Date/time the document was created/received
     * @type {string}
     * @memberof OrderEdiDocument
     */
    doc_dts?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    document?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    document_type_description?: string;
    /**
     * 
     * @type {number}
     * @memberof OrderEdiDocument
     */
    document_type_number?: number;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    external_id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    functional_acknowledgement?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    functional_acknowledgement_dts?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrderEdiDocument
     */
    functional_acknowledgement_pending?: boolean;
    /**
     * 
     * @type {number}
     * @memberof OrderEdiDocument
     */
    group_control_number?: number;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    internal_id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    merchant_id?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderEdiDocument
     */
    order_id?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OrderEdiDocument
     */
    test_mode?: boolean;
}


/**
 * @export
 */
export const OrderEdiDocumentDirectionEnum = {
    Inbound: 'inbound',
    Outbound: 'outbound'
} as const;
export type OrderEdiDocumentDirectionEnum = typeof OrderEdiDocumentDirectionEnum[keyof typeof OrderEdiDocumentDirectionEnum];


export function OrderEdiDocumentFromJSON(json: any): OrderEdiDocument {
    return OrderEdiDocumentFromJSONTyped(json, false);
}

export function OrderEdiDocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderEdiDocument {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'direction': !exists(json, 'direction') ? undefined : json['direction'],
        'doc_dts': !exists(json, 'doc_dts') ? undefined : json['doc_dts'],
        'document': !exists(json, 'document') ? undefined : json['document'],
        'document_type_description': !exists(json, 'document_type_description') ? undefined : json['document_type_description'],
        'document_type_number': !exists(json, 'document_type_number') ? undefined : json['document_type_number'],
        'external_id': !exists(json, 'external_id') ? undefined : json['external_id'],
        'functional_acknowledgement': !exists(json, 'functional_acknowledgement') ? undefined : json['functional_acknowledgement'],
        'functional_acknowledgement_dts': !exists(json, 'functional_acknowledgement_dts') ? undefined : json['functional_acknowledgement_dts'],
        'functional_acknowledgement_pending': !exists(json, 'functional_acknowledgement_pending') ? undefined : json['functional_acknowledgement_pending'],
        'group_control_number': !exists(json, 'group_control_number') ? undefined : json['group_control_number'],
        'internal_id': !exists(json, 'internal_id') ? undefined : json['internal_id'],
        'merchant_id': !exists(json, 'merchant_id') ? undefined : json['merchant_id'],
        'order_id': !exists(json, 'order_id') ? undefined : json['order_id'],
        'test_mode': !exists(json, 'test_mode') ? undefined : json['test_mode'],
    };
}

export function OrderEdiDocumentToJSON(value?: OrderEdiDocument | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'direction': value.direction,
        'doc_dts': value.doc_dts,
        'document': value.document,
        'document_type_description': value.document_type_description,
        'document_type_number': value.document_type_number,
        'external_id': value.external_id,
        'functional_acknowledgement': value.functional_acknowledgement,
        'functional_acknowledgement_dts': value.functional_acknowledgement_dts,
        'functional_acknowledgement_pending': value.functional_acknowledgement_pending,
        'group_control_number': value.group_control_number,
        'internal_id': value.internal_id,
        'merchant_id': value.merchant_id,
        'order_id': value.order_id,
        'test_mode': value.test_mode,
    };
}

