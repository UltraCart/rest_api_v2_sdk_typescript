/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CartCustomerProfileAddress
 */
export interface CartCustomerProfileAddress {
    /**
     * Address 1
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    address1?: string;
    /**
     * Address 2
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    address2?: string;
    /**
     * City
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    city?: string;
    /**
     * Company
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    company?: string;
    /**
     * ISO-3166 Country code
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    country_code?: string;
    /**
     * Day phone
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    day_phone?: string;
    /**
     * Evening phone
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    evening_phone?: string;
    /**
     * First name
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    first_name?: string;
    /**
     * Last name
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    last_name?: string;
    /**
     * Unique identifier for this address
     * @type {number}
     * @memberof CartCustomerProfileAddress
     */
    oid?: number;
    /**
     * Postal code
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    postal_code?: string;
    /**
     * State for United States otherwise region or province for other countries
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    state_region?: string;
    /**
     * Tax county if a billing address
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    tax_county?: string;
    /**
     * Title
     * @type {string}
     * @memberof CartCustomerProfileAddress
     */
    title?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CartCustomerProfileAddress)[] = ["address1", "address2", "city", "company", "country_code", "day_phone", "evening_phone", "first_name", "last_name", "oid", "postal_code", "state_region", "tax_county", "title"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CartCustomerProfileAddress interface.
 */
export function instanceOfCartCustomerProfileAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CartCustomerProfileAddressFromJSON(json: any): CartCustomerProfileAddress {
    return CartCustomerProfileAddressFromJSONTyped(json, false);
}

export function CartCustomerProfileAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): CartCustomerProfileAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address1': !exists(json, 'address1') ? undefined : json['address1'],
        'address2': !exists(json, 'address2') ? undefined : json['address2'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'country_code': !exists(json, 'country_code') ? undefined : json['country_code'],
        'day_phone': !exists(json, 'day_phone') ? undefined : json['day_phone'],
        'evening_phone': !exists(json, 'evening_phone') ? undefined : json['evening_phone'],
        'first_name': !exists(json, 'first_name') ? undefined : json['first_name'],
        'last_name': !exists(json, 'last_name') ? undefined : json['last_name'],
        'oid': !exists(json, 'oid') ? undefined : json['oid'],
        'postal_code': !exists(json, 'postal_code') ? undefined : json['postal_code'],
        'state_region': !exists(json, 'state_region') ? undefined : json['state_region'],
        'tax_county': !exists(json, 'tax_county') ? undefined : json['tax_county'],
        'title': !exists(json, 'title') ? undefined : json['title'],
    };
}

export function CartCustomerProfileAddressToJSON(value?: CartCustomerProfileAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address1': value.address1,
        'address2': value.address2,
        'city': value.city,
        'company': value.company,
        'country_code': value.country_code,
        'day_phone': value.day_phone,
        'evening_phone': value.evening_phone,
        'first_name': value.first_name,
        'last_name': value.last_name,
        'oid': value.oid,
        'postal_code': value.postal_code,
        'state_region': value.state_region,
        'tax_county': value.tax_county,
        'title': value.title,
    };
}

