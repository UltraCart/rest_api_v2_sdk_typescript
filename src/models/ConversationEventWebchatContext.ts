/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationEventWebchatContext
 */
export interface ConversationEventWebchatContext {
    /**
     * 
     * @type {string}
     * @memberof ConversationEventWebchatContext
     */
    cart_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationEventWebchatContext
     */
    ucacid?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationEventWebchatContext
     */
    url?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ConversationEventWebchatContext)[] = ["cart_id", "ucacid", "url"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ConversationEventWebchatContext interface.
 */
export function instanceOfConversationEventWebchatContext(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationEventWebchatContextFromJSON(json: any): ConversationEventWebchatContext {
    return ConversationEventWebchatContextFromJSONTyped(json, false);
}

export function ConversationEventWebchatContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationEventWebchatContext {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cart_id': !exists(json, 'cart_id') ? undefined : json['cart_id'],
        'ucacid': !exists(json, 'ucacid') ? undefined : json['ucacid'],
        'url': !exists(json, 'url') ? undefined : json['url'],
    };
}

export function ConversationEventWebchatContextToJSON(value?: ConversationEventWebchatContext | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cart_id': value.cart_id,
        'ucacid': value.ucacid,
        'url': value.url,
    };
}

