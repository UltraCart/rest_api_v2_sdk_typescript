/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationPbxTimeBasedMapping
 */
export interface ConversationPbxTimeBasedMapping {
    /**
     * Action
     * @type {string}
     * @memberof ConversationPbxTimeBasedMapping
     */
    action?: ConversationPbxTimeBasedMappingActionEnum;
    /**
     * Action target.  This is the UUID associated with the configuration object of that particular type.
     * @type {string}
     * @memberof ConversationPbxTimeBasedMapping
     */
    action_target?: string;
    /**
     * Name
     * @type {string}
     * @memberof ConversationPbxTimeBasedMapping
     */
    name?: string;
    /**
     * Time range UUID
     * @type {string}
     * @memberof ConversationPbxTimeBasedMapping
     */
    time_range_uuid?: string;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ConversationPbxTimeBasedMapping)[] = ["action", "action_target", "name", "time_range_uuid"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * @export
 */
export const ConversationPbxTimeBasedMappingActionEnum = {
    TimeBased: 'time based',
    Menu: 'menu',
    Queue: 'queue',
    Voicemail: 'voicemail',
    Agent: 'agent'
} as const;
export type ConversationPbxTimeBasedMappingActionEnum = typeof ConversationPbxTimeBasedMappingActionEnum[keyof typeof ConversationPbxTimeBasedMappingActionEnum];


/**
 * Check if a given object implements the ConversationPbxTimeBasedMapping interface.
 */
export function instanceOfConversationPbxTimeBasedMapping(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationPbxTimeBasedMappingFromJSON(json: any): ConversationPbxTimeBasedMapping {
    return ConversationPbxTimeBasedMappingFromJSONTyped(json, false);
}

export function ConversationPbxTimeBasedMappingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationPbxTimeBasedMapping {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': !exists(json, 'action') ? undefined : json['action'],
        'action_target': !exists(json, 'action_target') ? undefined : json['action_target'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'time_range_uuid': !exists(json, 'time_range_uuid') ? undefined : json['time_range_uuid'],
    };
}

export function ConversationPbxTimeBasedMappingToJSON(value?: ConversationPbxTimeBasedMapping | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'action_target': value.action_target,
        'name': value.name,
        'time_range_uuid': value.time_range_uuid,
    };
}

