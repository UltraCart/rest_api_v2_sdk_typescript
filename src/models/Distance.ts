/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Distance
 */
export interface Distance {
    /**
     * Unit of measure
     * @type {string}
     * @memberof Distance
     */
    uom?: DistanceUomEnum;
    /**
     * The distance measured in UOM
     * @type {number}
     * @memberof Distance
     */
    value?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof Distance)[] = ["uom", "value"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * @export
 */
export const DistanceUomEnum = {
    In: 'IN',
    Cm: 'CM'
} as const;
export type DistanceUomEnum = typeof DistanceUomEnum[keyof typeof DistanceUomEnum];


/**
 * Check if a given object implements the Distance interface.
 */
export function instanceOfDistance(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DistanceFromJSON(json: any): Distance {
    return DistanceFromJSONTyped(json, false);
}

export function DistanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Distance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'uom': !exists(json, 'uom') ? undefined : json['uom'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function DistanceToJSON(value?: Distance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'uom': value.uom,
        'value': value.value,
    };
}

