/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CouponPercentOffItemWithItemsQuantityPurchase
 */
export interface CouponPercentOffItemWithItemsQuantityPurchase {
    /**
     * The percentage of subtotal discount
     * @type {number}
     * @memberof CouponPercentOffItemWithItemsQuantityPurchase
     */
    discount_percent?: number;
    /**
     * An optional list of item tags which will receive a discount if one of the required purchased items is purchased.
     * @type {Array<string>}
     * @memberof CouponPercentOffItemWithItemsQuantityPurchase
     */
    item_tags?: Array<string>;
    /**
     * A list of items which will receive a discount if one of the required purchase items is purchased.
     * @type {Array<string>}
     * @memberof CouponPercentOffItemWithItemsQuantityPurchase
     */
    items?: Array<string>;
    /**
     * The (optional) maximum quantity of discounted items.
     * @type {number}
     * @memberof CouponPercentOffItemWithItemsQuantityPurchase
     */
    limit?: number;
    /**
     * Required items (at least one from the list) that must be purchased for coupon to be valid
     * @type {Array<string>}
     * @memberof CouponPercentOffItemWithItemsQuantityPurchase
     */
    required_purchase_items?: Array<string>;
    /**
     * Required item tags (at least one from the list) that must be purchase for coupon to be valid.
     * @type {Array<string>}
     * @memberof CouponPercentOffItemWithItemsQuantityPurchase
     */
    required_purchase_items_tags?: Array<string>;
    /**
     * The quantity of items that must be purchased for the discount to be applied.
     * @type {number}
     * @memberof CouponPercentOffItemWithItemsQuantityPurchase
     */
    required_purchase_quantity?: number;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof CouponPercentOffItemWithItemsQuantityPurchase)[] = ["discount_percent", "item_tags", "items", "limit", "required_purchase_items", "required_purchase_items_tags", "required_purchase_quantity"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the CouponPercentOffItemWithItemsQuantityPurchase interface.
 */
export function instanceOfCouponPercentOffItemWithItemsQuantityPurchase(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CouponPercentOffItemWithItemsQuantityPurchaseFromJSON(json: any): CouponPercentOffItemWithItemsQuantityPurchase {
    return CouponPercentOffItemWithItemsQuantityPurchaseFromJSONTyped(json, false);
}

export function CouponPercentOffItemWithItemsQuantityPurchaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CouponPercentOffItemWithItemsQuantityPurchase {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discount_percent': !exists(json, 'discount_percent') ? undefined : json['discount_percent'],
        'item_tags': !exists(json, 'item_tags') ? undefined : json['item_tags'],
        'items': !exists(json, 'items') ? undefined : json['items'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'required_purchase_items': !exists(json, 'required_purchase_items') ? undefined : json['required_purchase_items'],
        'required_purchase_items_tags': !exists(json, 'required_purchase_items_tags') ? undefined : json['required_purchase_items_tags'],
        'required_purchase_quantity': !exists(json, 'required_purchase_quantity') ? undefined : json['required_purchase_quantity'],
    };
}

export function CouponPercentOffItemWithItemsQuantityPurchaseToJSON(value?: CouponPercentOffItemWithItemsQuantityPurchase | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discount_percent': value.discount_percent,
        'item_tags': value.item_tags,
        'items': value.items,
        'limit': value.limit,
        'required_purchase_items': value.required_purchase_items,
        'required_purchase_items_tags': value.required_purchase_items_tags,
        'required_purchase_quantity': value.required_purchase_quantity,
    };
}

