/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Cart,
    CartFromJSON,
    CartFromJSONTyped,
    CartToJSON,
} from './Cart';

/**
 * 
 * @export
 * @interface CheckoutHandoffRequest
 */
export interface CheckoutHandoffRequest {
    /**
     * 
     * @type {Cart}
     * @memberof CheckoutHandoffRequest
     */
    cart?: Cart;
    /**
     * If any error happen during the processing on the UltraCart side, the browser will be redirected to your error_return_url with the error passed in this parameter name.
     * @type {string}
     * @memberof CheckoutHandoffRequest
     */
    error_parameter_name?: string;
    /**
     * The URL to return the browser to if there are processing errors on the UltraCart side.
     * @type {string}
     * @memberof CheckoutHandoffRequest
     */
    error_return_url?: string;
    /**
     * The type of handoff operation to perform
     * @type {string}
     * @memberof CheckoutHandoffRequest
     */
    operation?: CheckoutHandoffRequestOperationEnum;
    /**
     * The maximum amount of revenue that you think the customer could add during a custom upsell after sequence on your checkout.
     * @type {number}
     * @memberof CheckoutHandoffRequest
     */
    paypal_maximum_upsell_revenue?: number;
    /**
     * The URl to return the customers browser to after they have completed the PayPal process.
     * @type {string}
     * @memberof CheckoutHandoffRequest
     */
    paypal_return_url?: string;
    /**
     * The desired secure host name to perform the handoff on.  This should match the desired StoreFront.
     * @type {string}
     * @memberof CheckoutHandoffRequest
     */
    secure_host_name?: string;
    /**
     * The UltraCart Analytics cookie value.  Populate this if you're handing off from a different domain than the checkout.
     * @type {string}
     * @memberof CheckoutHandoffRequest
     */
    ucacid?: string;
}


/**
 * @export
 */
export const CheckoutHandoffRequestOperationEnum = {
    Checkout: 'checkout',
    PayPal: 'payPal',
    PayPalCredit: 'payPalCredit',
    View: 'view',
    Affirm: 'affirm',
    Sezzle: 'sezzle'
} as const;
export type CheckoutHandoffRequestOperationEnum = typeof CheckoutHandoffRequestOperationEnum[keyof typeof CheckoutHandoffRequestOperationEnum];


export function CheckoutHandoffRequestFromJSON(json: any): CheckoutHandoffRequest {
    return CheckoutHandoffRequestFromJSONTyped(json, false);
}

export function CheckoutHandoffRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckoutHandoffRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cart': !exists(json, 'cart') ? undefined : CartFromJSON(json['cart']),
        'error_parameter_name': !exists(json, 'error_parameter_name') ? undefined : json['error_parameter_name'],
        'error_return_url': !exists(json, 'error_return_url') ? undefined : json['error_return_url'],
        'operation': !exists(json, 'operation') ? undefined : json['operation'],
        'paypal_maximum_upsell_revenue': !exists(json, 'paypal_maximum_upsell_revenue') ? undefined : json['paypal_maximum_upsell_revenue'],
        'paypal_return_url': !exists(json, 'paypal_return_url') ? undefined : json['paypal_return_url'],
        'secure_host_name': !exists(json, 'secure_host_name') ? undefined : json['secure_host_name'],
        'ucacid': !exists(json, 'ucacid') ? undefined : json['ucacid'],
    };
}

export function CheckoutHandoffRequestToJSON(value?: CheckoutHandoffRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cart': CartToJSON(value.cart),
        'error_parameter_name': value.error_parameter_name,
        'error_return_url': value.error_return_url,
        'operation': value.operation,
        'paypal_maximum_upsell_revenue': value.paypal_maximum_upsell_revenue,
        'paypal_return_url': value.paypal_return_url,
        'secure_host_name': value.secure_host_name,
        'ucacid': value.ucacid,
    };
}

