/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConversationSearchRequest
 */
export interface ConversationSearchRequest {
    /**
     * End of the range
     * @type {string}
     * @memberof ConversationSearchRequest
     */
    date_end?: string;
    /**
     * Start of the range
     * @type {string}
     * @memberof ConversationSearchRequest
     */
    date_start?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSearchRequest
     */
    email_filter?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSearchRequest
     */
    language_filter?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSearchRequest
     */
    medium_filter?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationSearchRequest
     */
    order_by_newest?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationSearchRequest
     */
    order_by_oldest?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ConversationSearchRequest
     */
    range_begin?: number;
    /**
     * 
     * @type {number}
     * @memberof ConversationSearchRequest
     */
    range_end?: number;
    /**
     * 
     * @type {string}
     * @memberof ConversationSearchRequest
     */
    sms_phone_number_filter?: string;
    /**
     * 
     * @type {string}
     * @memberof ConversationSearchRequest
     */
    text_search?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ConversationSearchRequest
     */
    visible_filter?: boolean;
}

// Define the constant array of keys
const MY_INTERFACE_KEYS: (keyof ConversationSearchRequest)[] = ["date_end", "date_start", "email_filter", "language_filter", "medium_filter", "order_by_newest", "order_by_oldest", "range_begin", "range_end", "sms_phone_number_filter", "text_search", "visible_filter"];

// Exported function to check for excess properties
export function hasExcessProperties(obj: any): boolean {
  const objKeys = Object.keys(obj);
  return objKeys.some(key => !MY_INTERFACE_KEYS.includes(key as keyof MyInterface));
}



/**
 * Check if a given object implements the ConversationSearchRequest interface.
 */
export function instanceOfConversationSearchRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversationSearchRequestFromJSON(json: any): ConversationSearchRequest {
    return ConversationSearchRequestFromJSONTyped(json, false);
}

export function ConversationSearchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversationSearchRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date_end': !exists(json, 'date_end') ? undefined : json['date_end'],
        'date_start': !exists(json, 'date_start') ? undefined : json['date_start'],
        'email_filter': !exists(json, 'email_filter') ? undefined : json['email_filter'],
        'language_filter': !exists(json, 'language_filter') ? undefined : json['language_filter'],
        'medium_filter': !exists(json, 'medium_filter') ? undefined : json['medium_filter'],
        'order_by_newest': !exists(json, 'order_by_newest') ? undefined : json['order_by_newest'],
        'order_by_oldest': !exists(json, 'order_by_oldest') ? undefined : json['order_by_oldest'],
        'range_begin': !exists(json, 'range_begin') ? undefined : json['range_begin'],
        'range_end': !exists(json, 'range_end') ? undefined : json['range_end'],
        'sms_phone_number_filter': !exists(json, 'sms_phone_number_filter') ? undefined : json['sms_phone_number_filter'],
        'text_search': !exists(json, 'text_search') ? undefined : json['text_search'],
        'visible_filter': !exists(json, 'visible_filter') ? undefined : json['visible_filter'],
    };
}

export function ConversationSearchRequestToJSON(value?: ConversationSearchRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date_end': value.date_end,
        'date_start': value.date_start,
        'email_filter': value.email_filter,
        'language_filter': value.language_filter,
        'medium_filter': value.medium_filter,
        'order_by_newest': value.order_by_newest,
        'order_by_oldest': value.order_by_oldest,
        'range_begin': value.range_begin,
        'range_end': value.range_end,
        'sms_phone_number_filter': value.sms_phone_number_filter,
        'text_search': value.text_search,
        'visible_filter': value.visible_filter,
    };
}

