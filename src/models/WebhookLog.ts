/* tslint:disable */
/* eslint-disable */
/**
 * UltraCart Rest API V2
 * UltraCart REST API Version 2
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@ultracart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    HTTPHeader,
    HTTPHeaderFromJSON,
    HTTPHeaderFromJSONTyped,
    HTTPHeaderToJSON,
} from './HTTPHeader';

/**
 * 
 * @export
 * @interface WebhookLog
 */
export interface WebhookLog {
    /**
     * Date/time of delivery
     * @type {string}
     * @memberof WebhookLog
     */
    delivery_dts?: string;
    /**
     * Number of milliseconds to process the notification
     * @type {number}
     * @memberof WebhookLog
     */
    duration?: number;
    /**
     * Number of milliseconds of delay caused by queuing
     * @type {number}
     * @memberof WebhookLog
     */
    queue_delay?: number;
    /**
     * Request payload (first 100,000 characters)
     * @type {string}
     * @memberof WebhookLog
     */
    request?: string;
    /**
     * Request headers sent to the server
     * @type {Array<HTTPHeader>}
     * @memberof WebhookLog
     */
    request_headers?: Array<HTTPHeader>;
    /**
     * Request id is a unique string that you can look up in the logs
     * @type {string}
     * @memberof WebhookLog
     */
    request_id?: string;
    /**
     * Response payload (first 100,000 characters)
     * @type {string}
     * @memberof WebhookLog
     */
    response?: string;
    /**
     * Response headers received from the server
     * @type {Array<HTTPHeader>}
     * @memberof WebhookLog
     */
    response_headers?: Array<HTTPHeader>;
    /**
     * HTTP status code received from the server
     * @type {number}
     * @memberof WebhookLog
     */
    status_code?: number;
    /**
     * True if the delivery was successful
     * @type {boolean}
     * @memberof WebhookLog
     */
    success?: boolean;
    /**
     * URI of the webhook delivered to
     * @type {string}
     * @memberof WebhookLog
     */
    uri?: string;
    /**
     * webhook oid
     * @type {number}
     * @memberof WebhookLog
     */
    webhook_oid?: number;
}



/**
 * Check if a given object implements the WebhookLog interface.
 */
export function instanceOfWebhookLog(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WebhookLogFromJSON(json: any): WebhookLog {
    return WebhookLogFromJSONTyped(json, false);
}

export function WebhookLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookLog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'delivery_dts': !exists(json, 'delivery_dts') ? undefined : json['delivery_dts'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'queue_delay': !exists(json, 'queue_delay') ? undefined : json['queue_delay'],
        'request': !exists(json, 'request') ? undefined : json['request'],
        'request_headers': !exists(json, 'request_headers') ? undefined : ((json['request_headers'] as Array<any>).map(HTTPHeaderFromJSON)),
        'request_id': !exists(json, 'request_id') ? undefined : json['request_id'],
        'response': !exists(json, 'response') ? undefined : json['response'],
        'response_headers': !exists(json, 'response_headers') ? undefined : ((json['response_headers'] as Array<any>).map(HTTPHeaderFromJSON)),
        'status_code': !exists(json, 'status_code') ? undefined : json['status_code'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'uri': !exists(json, 'uri') ? undefined : json['uri'],
        'webhook_oid': !exists(json, 'webhook_oid') ? undefined : json['webhook_oid'],
    };
}

export function WebhookLogToJSON(value?: WebhookLog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'delivery_dts': value.delivery_dts,
        'duration': value.duration,
        'queue_delay': value.queue_delay,
        'request': value.request,
        'request_headers': value.request_headers === undefined ? undefined : ((value.request_headers as Array<any>).map(HTTPHeaderToJSON)),
        'request_id': value.request_id,
        'response': value.response,
        'response_headers': value.response_headers === undefined ? undefined : ((value.response_headers as Array<any>).map(HTTPHeaderToJSON)),
        'status_code': value.status_code,
        'success': value.success,
        'uri': value.uri,
        'webhook_oid': value.webhook_oid,
    };
}

